
LoginSystem.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000020c8  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000062  00800060  000020c8  0000215c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000006  008000c2  008000c2  000021be  2**0
                  ALLOC
  3 .stab         00002928  00000000  00000000  000021c0  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      00000839  00000000  00000000  00004ae8  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_aranges 000002a0  00000000  00000000  00005328  2**3
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00002545  00000000  00000000  000055c8  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000ca9  00000000  00000000  00007b0d  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00001630  00000000  00000000  000087b6  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000007cc  00000000  00000000  00009de8  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000afb  00000000  00000000  0000a5b4  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00001b66  00000000  00000000  0000b0af  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000030  00000000  00000000  0000cc15  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
       4:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
       8:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
       c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      18:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      1c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      24:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      28:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      2c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      34:	0c 94 ce 0a 	jmp	0x159c	; 0x159c <__vector_13>
      38:	0c 94 f7 0a 	jmp	0x15ee	; 0x15ee <__vector_14>
      3c:	0c 94 20 0b 	jmp	0x1640	; 0x1640 <__vector_15>
      40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
      54:	11 24       	eor	r1, r1
      56:	1f be       	out	0x3f, r1	; 63
      58:	cf e5       	ldi	r28, 0x5F	; 95
      5a:	d8 e0       	ldi	r29, 0x08	; 8
      5c:	de bf       	out	0x3e, r29	; 62
      5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
      60:	10 e0       	ldi	r17, 0x00	; 0
      62:	a0 e6       	ldi	r26, 0x60	; 96
      64:	b0 e0       	ldi	r27, 0x00	; 0
      66:	e8 ec       	ldi	r30, 0xC8	; 200
      68:	f0 e2       	ldi	r31, 0x20	; 32
      6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
      6c:	05 90       	lpm	r0, Z+
      6e:	0d 92       	st	X+, r0
      70:	a2 3c       	cpi	r26, 0xC2	; 194
      72:	b1 07       	cpc	r27, r17
      74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>

00000076 <__do_clear_bss>:
      76:	10 e0       	ldi	r17, 0x00	; 0
      78:	a2 ec       	ldi	r26, 0xC2	; 194
      7a:	b0 e0       	ldi	r27, 0x00	; 0
      7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
      7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
      80:	a8 3c       	cpi	r26, 0xC8	; 200
      82:	b1 07       	cpc	r27, r17
      84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
      86:	0e 94 f7 03 	call	0x7ee	; 0x7ee <main>
      8a:	0c 94 62 10 	jmp	0x20c4	; 0x20c4 <_exit>

0000008e <__bad_interrupt>:
      8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <BUTTON_init>:
      92:	84 30       	cpi	r24, 0x04	; 4
      94:	28 f4       	brcc	.+10     	; 0xa0 <BUTTON_init+0xe>
      96:	68 30       	cpi	r22, 0x08	; 8
      98:	18 f4       	brcc	.+6      	; 0xa0 <BUTTON_init+0xe>
      9a:	40 e0       	ldi	r20, 0x00	; 0
      9c:	0e 94 5f 00 	call	0xbe	; 0xbe <DIO_SetPinDirection>
      a0:	08 95       	ret

000000a2 <BUTTON_ActivePullUp>:
      a2:	84 30       	cpi	r24, 0x04	; 4
      a4:	20 f4       	brcc	.+8      	; 0xae <BUTTON_ActivePullUp+0xc>
      a6:	68 30       	cpi	r22, 0x08	; 8
      a8:	10 f4       	brcc	.+4      	; 0xae <BUTTON_ActivePullUp+0xc>
      aa:	0e 94 2d 02 	call	0x45a	; 0x45a <DIO_activePinInPullUpResistance>
      ae:	08 95       	ret

000000b0 <BUTTON_ReadValue>:
      b0:	84 30       	cpi	r24, 0x04	; 4
      b2:	20 f4       	brcc	.+8      	; 0xbc <BUTTON_ReadValue+0xc>
      b4:	68 30       	cpi	r22, 0x08	; 8
      b6:	10 f4       	brcc	.+4      	; 0xbc <BUTTON_ReadValue+0xc>
      b8:	0e 94 d9 01 	call	0x3b2	; 0x3b2 <DIO_ReadValue>
      bc:	08 95       	ret

000000be <DIO_SetPinDirection>:
      be:	84 30       	cpi	r24, 0x04	; 4
      c0:	08 f0       	brcs	.+2      	; 0xc4 <DIO_SetPinDirection+0x6>
      c2:	8b c0       	rjmp	.+278    	; 0x1da <DIO_SetPinDirection+0x11c>
      c4:	68 30       	cpi	r22, 0x08	; 8
      c6:	08 f0       	brcs	.+2      	; 0xca <DIO_SetPinDirection+0xc>
      c8:	8a c0       	rjmp	.+276    	; 0x1de <DIO_SetPinDirection+0x120>
      ca:	42 30       	cpi	r20, 0x02	; 2
      cc:	08 f0       	brcs	.+2      	; 0xd0 <DIO_SetPinDirection+0x12>
      ce:	89 c0       	rjmp	.+274    	; 0x1e2 <DIO_SetPinDirection+0x124>
      d0:	81 30       	cpi	r24, 0x01	; 1
      d2:	41 f1       	breq	.+80     	; 0x124 <DIO_SetPinDirection+0x66>
      d4:	81 30       	cpi	r24, 0x01	; 1
      d6:	38 f0       	brcs	.+14     	; 0xe6 <DIO_SetPinDirection+0x28>
      d8:	82 30       	cpi	r24, 0x02	; 2
      da:	09 f4       	brne	.+2      	; 0xde <DIO_SetPinDirection+0x20>
      dc:	41 c0       	rjmp	.+130    	; 0x160 <DIO_SetPinDirection+0xa2>
      de:	83 30       	cpi	r24, 0x03	; 3
      e0:	09 f0       	breq	.+2      	; 0xe4 <DIO_SetPinDirection+0x26>
      e2:	81 c0       	rjmp	.+258    	; 0x1e6 <DIO_SetPinDirection+0x128>
      e4:	5b c0       	rjmp	.+182    	; 0x19c <DIO_SetPinDirection+0xde>
      e6:	41 30       	cpi	r20, 0x01	; 1
      e8:	71 f4       	brne	.+28     	; 0x106 <DIO_SetPinDirection+0x48>
      ea:	2a b3       	in	r18, 0x1a	; 26
      ec:	81 e0       	ldi	r24, 0x01	; 1
      ee:	90 e0       	ldi	r25, 0x00	; 0
      f0:	ac 01       	movw	r20, r24
      f2:	02 c0       	rjmp	.+4      	; 0xf8 <DIO_SetPinDirection+0x3a>
      f4:	44 0f       	add	r20, r20
      f6:	55 1f       	adc	r21, r21
      f8:	6a 95       	dec	r22
      fa:	e2 f7       	brpl	.-8      	; 0xf4 <DIO_SetPinDirection+0x36>
      fc:	ba 01       	movw	r22, r20
      fe:	62 2b       	or	r22, r18
     100:	6a bb       	out	0x1a, r22	; 26
     102:	80 e0       	ldi	r24, 0x00	; 0
     104:	08 95       	ret
     106:	2a b3       	in	r18, 0x1a	; 26
     108:	81 e0       	ldi	r24, 0x01	; 1
     10a:	90 e0       	ldi	r25, 0x00	; 0
     10c:	ac 01       	movw	r20, r24
     10e:	02 c0       	rjmp	.+4      	; 0x114 <DIO_SetPinDirection+0x56>
     110:	44 0f       	add	r20, r20
     112:	55 1f       	adc	r21, r21
     114:	6a 95       	dec	r22
     116:	e2 f7       	brpl	.-8      	; 0x110 <DIO_SetPinDirection+0x52>
     118:	ba 01       	movw	r22, r20
     11a:	60 95       	com	r22
     11c:	62 23       	and	r22, r18
     11e:	6a bb       	out	0x1a, r22	; 26
     120:	80 e0       	ldi	r24, 0x00	; 0
     122:	08 95       	ret
     124:	41 30       	cpi	r20, 0x01	; 1
     126:	69 f4       	brne	.+26     	; 0x142 <DIO_SetPinDirection+0x84>
     128:	47 b3       	in	r20, 0x17	; 23
     12a:	21 e0       	ldi	r18, 0x01	; 1
     12c:	30 e0       	ldi	r19, 0x00	; 0
     12e:	c9 01       	movw	r24, r18
     130:	02 c0       	rjmp	.+4      	; 0x136 <DIO_SetPinDirection+0x78>
     132:	88 0f       	add	r24, r24
     134:	99 1f       	adc	r25, r25
     136:	6a 95       	dec	r22
     138:	e2 f7       	brpl	.-8      	; 0x132 <DIO_SetPinDirection+0x74>
     13a:	84 2b       	or	r24, r20
     13c:	87 bb       	out	0x17, r24	; 23
     13e:	80 e0       	ldi	r24, 0x00	; 0
     140:	08 95       	ret
     142:	27 b3       	in	r18, 0x17	; 23
     144:	81 e0       	ldi	r24, 0x01	; 1
     146:	90 e0       	ldi	r25, 0x00	; 0
     148:	ac 01       	movw	r20, r24
     14a:	02 c0       	rjmp	.+4      	; 0x150 <DIO_SetPinDirection+0x92>
     14c:	44 0f       	add	r20, r20
     14e:	55 1f       	adc	r21, r21
     150:	6a 95       	dec	r22
     152:	e2 f7       	brpl	.-8      	; 0x14c <DIO_SetPinDirection+0x8e>
     154:	ba 01       	movw	r22, r20
     156:	60 95       	com	r22
     158:	62 23       	and	r22, r18
     15a:	67 bb       	out	0x17, r22	; 23
     15c:	80 e0       	ldi	r24, 0x00	; 0
     15e:	08 95       	ret
     160:	41 30       	cpi	r20, 0x01	; 1
     162:	69 f4       	brne	.+26     	; 0x17e <DIO_SetPinDirection+0xc0>
     164:	44 b3       	in	r20, 0x14	; 20
     166:	21 e0       	ldi	r18, 0x01	; 1
     168:	30 e0       	ldi	r19, 0x00	; 0
     16a:	c9 01       	movw	r24, r18
     16c:	02 c0       	rjmp	.+4      	; 0x172 <DIO_SetPinDirection+0xb4>
     16e:	88 0f       	add	r24, r24
     170:	99 1f       	adc	r25, r25
     172:	6a 95       	dec	r22
     174:	e2 f7       	brpl	.-8      	; 0x16e <DIO_SetPinDirection+0xb0>
     176:	84 2b       	or	r24, r20
     178:	84 bb       	out	0x14, r24	; 20
     17a:	80 e0       	ldi	r24, 0x00	; 0
     17c:	08 95       	ret
     17e:	24 b3       	in	r18, 0x14	; 20
     180:	81 e0       	ldi	r24, 0x01	; 1
     182:	90 e0       	ldi	r25, 0x00	; 0
     184:	ac 01       	movw	r20, r24
     186:	02 c0       	rjmp	.+4      	; 0x18c <DIO_SetPinDirection+0xce>
     188:	44 0f       	add	r20, r20
     18a:	55 1f       	adc	r21, r21
     18c:	6a 95       	dec	r22
     18e:	e2 f7       	brpl	.-8      	; 0x188 <DIO_SetPinDirection+0xca>
     190:	ba 01       	movw	r22, r20
     192:	60 95       	com	r22
     194:	62 23       	and	r22, r18
     196:	64 bb       	out	0x14, r22	; 20
     198:	80 e0       	ldi	r24, 0x00	; 0
     19a:	08 95       	ret
     19c:	41 30       	cpi	r20, 0x01	; 1
     19e:	71 f4       	brne	.+28     	; 0x1bc <DIO_SetPinDirection+0xfe>
     1a0:	21 b3       	in	r18, 0x11	; 17
     1a2:	81 e0       	ldi	r24, 0x01	; 1
     1a4:	90 e0       	ldi	r25, 0x00	; 0
     1a6:	ac 01       	movw	r20, r24
     1a8:	02 c0       	rjmp	.+4      	; 0x1ae <DIO_SetPinDirection+0xf0>
     1aa:	44 0f       	add	r20, r20
     1ac:	55 1f       	adc	r21, r21
     1ae:	6a 95       	dec	r22
     1b0:	e2 f7       	brpl	.-8      	; 0x1aa <DIO_SetPinDirection+0xec>
     1b2:	ba 01       	movw	r22, r20
     1b4:	62 2b       	or	r22, r18
     1b6:	61 bb       	out	0x11, r22	; 17
     1b8:	80 e0       	ldi	r24, 0x00	; 0
     1ba:	08 95       	ret
     1bc:	21 b3       	in	r18, 0x11	; 17
     1be:	81 e0       	ldi	r24, 0x01	; 1
     1c0:	90 e0       	ldi	r25, 0x00	; 0
     1c2:	ac 01       	movw	r20, r24
     1c4:	02 c0       	rjmp	.+4      	; 0x1ca <DIO_SetPinDirection+0x10c>
     1c6:	44 0f       	add	r20, r20
     1c8:	55 1f       	adc	r21, r21
     1ca:	6a 95       	dec	r22
     1cc:	e2 f7       	brpl	.-8      	; 0x1c6 <DIO_SetPinDirection+0x108>
     1ce:	ba 01       	movw	r22, r20
     1d0:	60 95       	com	r22
     1d2:	62 23       	and	r22, r18
     1d4:	61 bb       	out	0x11, r22	; 17
     1d6:	80 e0       	ldi	r24, 0x00	; 0
     1d8:	08 95       	ret
     1da:	81 e0       	ldi	r24, 0x01	; 1
     1dc:	08 95       	ret
     1de:	81 e0       	ldi	r24, 0x01	; 1
     1e0:	08 95       	ret
     1e2:	81 e0       	ldi	r24, 0x01	; 1
     1e4:	08 95       	ret
     1e6:	80 e0       	ldi	r24, 0x00	; 0
     1e8:	08 95       	ret

000001ea <DIO_SetPinValue>:
     1ea:	84 30       	cpi	r24, 0x04	; 4
     1ec:	08 f0       	brcs	.+2      	; 0x1f0 <DIO_SetPinValue+0x6>
     1ee:	8b c0       	rjmp	.+278    	; 0x306 <DIO_SetPinValue+0x11c>
     1f0:	68 30       	cpi	r22, 0x08	; 8
     1f2:	08 f0       	brcs	.+2      	; 0x1f6 <DIO_SetPinValue+0xc>
     1f4:	8a c0       	rjmp	.+276    	; 0x30a <DIO_SetPinValue+0x120>
     1f6:	42 30       	cpi	r20, 0x02	; 2
     1f8:	08 f0       	brcs	.+2      	; 0x1fc <DIO_SetPinValue+0x12>
     1fa:	89 c0       	rjmp	.+274    	; 0x30e <DIO_SetPinValue+0x124>
     1fc:	81 30       	cpi	r24, 0x01	; 1
     1fe:	41 f1       	breq	.+80     	; 0x250 <DIO_SetPinValue+0x66>
     200:	81 30       	cpi	r24, 0x01	; 1
     202:	38 f0       	brcs	.+14     	; 0x212 <DIO_SetPinValue+0x28>
     204:	82 30       	cpi	r24, 0x02	; 2
     206:	09 f4       	brne	.+2      	; 0x20a <DIO_SetPinValue+0x20>
     208:	41 c0       	rjmp	.+130    	; 0x28c <DIO_SetPinValue+0xa2>
     20a:	83 30       	cpi	r24, 0x03	; 3
     20c:	09 f0       	breq	.+2      	; 0x210 <DIO_SetPinValue+0x26>
     20e:	81 c0       	rjmp	.+258    	; 0x312 <DIO_SetPinValue+0x128>
     210:	5b c0       	rjmp	.+182    	; 0x2c8 <DIO_SetPinValue+0xde>
     212:	41 30       	cpi	r20, 0x01	; 1
     214:	71 f4       	brne	.+28     	; 0x232 <DIO_SetPinValue+0x48>
     216:	2b b3       	in	r18, 0x1b	; 27
     218:	81 e0       	ldi	r24, 0x01	; 1
     21a:	90 e0       	ldi	r25, 0x00	; 0
     21c:	ac 01       	movw	r20, r24
     21e:	02 c0       	rjmp	.+4      	; 0x224 <DIO_SetPinValue+0x3a>
     220:	44 0f       	add	r20, r20
     222:	55 1f       	adc	r21, r21
     224:	6a 95       	dec	r22
     226:	e2 f7       	brpl	.-8      	; 0x220 <DIO_SetPinValue+0x36>
     228:	ba 01       	movw	r22, r20
     22a:	62 2b       	or	r22, r18
     22c:	6b bb       	out	0x1b, r22	; 27
     22e:	80 e0       	ldi	r24, 0x00	; 0
     230:	08 95       	ret
     232:	2b b3       	in	r18, 0x1b	; 27
     234:	81 e0       	ldi	r24, 0x01	; 1
     236:	90 e0       	ldi	r25, 0x00	; 0
     238:	ac 01       	movw	r20, r24
     23a:	02 c0       	rjmp	.+4      	; 0x240 <DIO_SetPinValue+0x56>
     23c:	44 0f       	add	r20, r20
     23e:	55 1f       	adc	r21, r21
     240:	6a 95       	dec	r22
     242:	e2 f7       	brpl	.-8      	; 0x23c <DIO_SetPinValue+0x52>
     244:	ba 01       	movw	r22, r20
     246:	60 95       	com	r22
     248:	62 23       	and	r22, r18
     24a:	6b bb       	out	0x1b, r22	; 27
     24c:	80 e0       	ldi	r24, 0x00	; 0
     24e:	08 95       	ret
     250:	41 30       	cpi	r20, 0x01	; 1
     252:	69 f4       	brne	.+26     	; 0x26e <DIO_SetPinValue+0x84>
     254:	48 b3       	in	r20, 0x18	; 24
     256:	21 e0       	ldi	r18, 0x01	; 1
     258:	30 e0       	ldi	r19, 0x00	; 0
     25a:	c9 01       	movw	r24, r18
     25c:	02 c0       	rjmp	.+4      	; 0x262 <DIO_SetPinValue+0x78>
     25e:	88 0f       	add	r24, r24
     260:	99 1f       	adc	r25, r25
     262:	6a 95       	dec	r22
     264:	e2 f7       	brpl	.-8      	; 0x25e <DIO_SetPinValue+0x74>
     266:	84 2b       	or	r24, r20
     268:	88 bb       	out	0x18, r24	; 24
     26a:	80 e0       	ldi	r24, 0x00	; 0
     26c:	08 95       	ret
     26e:	28 b3       	in	r18, 0x18	; 24
     270:	81 e0       	ldi	r24, 0x01	; 1
     272:	90 e0       	ldi	r25, 0x00	; 0
     274:	ac 01       	movw	r20, r24
     276:	02 c0       	rjmp	.+4      	; 0x27c <DIO_SetPinValue+0x92>
     278:	44 0f       	add	r20, r20
     27a:	55 1f       	adc	r21, r21
     27c:	6a 95       	dec	r22
     27e:	e2 f7       	brpl	.-8      	; 0x278 <DIO_SetPinValue+0x8e>
     280:	ba 01       	movw	r22, r20
     282:	60 95       	com	r22
     284:	62 23       	and	r22, r18
     286:	68 bb       	out	0x18, r22	; 24
     288:	80 e0       	ldi	r24, 0x00	; 0
     28a:	08 95       	ret
     28c:	41 30       	cpi	r20, 0x01	; 1
     28e:	69 f4       	brne	.+26     	; 0x2aa <DIO_SetPinValue+0xc0>
     290:	45 b3       	in	r20, 0x15	; 21
     292:	21 e0       	ldi	r18, 0x01	; 1
     294:	30 e0       	ldi	r19, 0x00	; 0
     296:	c9 01       	movw	r24, r18
     298:	02 c0       	rjmp	.+4      	; 0x29e <DIO_SetPinValue+0xb4>
     29a:	88 0f       	add	r24, r24
     29c:	99 1f       	adc	r25, r25
     29e:	6a 95       	dec	r22
     2a0:	e2 f7       	brpl	.-8      	; 0x29a <DIO_SetPinValue+0xb0>
     2a2:	84 2b       	or	r24, r20
     2a4:	85 bb       	out	0x15, r24	; 21
     2a6:	80 e0       	ldi	r24, 0x00	; 0
     2a8:	08 95       	ret
     2aa:	25 b3       	in	r18, 0x15	; 21
     2ac:	81 e0       	ldi	r24, 0x01	; 1
     2ae:	90 e0       	ldi	r25, 0x00	; 0
     2b0:	ac 01       	movw	r20, r24
     2b2:	02 c0       	rjmp	.+4      	; 0x2b8 <DIO_SetPinValue+0xce>
     2b4:	44 0f       	add	r20, r20
     2b6:	55 1f       	adc	r21, r21
     2b8:	6a 95       	dec	r22
     2ba:	e2 f7       	brpl	.-8      	; 0x2b4 <DIO_SetPinValue+0xca>
     2bc:	ba 01       	movw	r22, r20
     2be:	60 95       	com	r22
     2c0:	62 23       	and	r22, r18
     2c2:	65 bb       	out	0x15, r22	; 21
     2c4:	80 e0       	ldi	r24, 0x00	; 0
     2c6:	08 95       	ret
     2c8:	41 30       	cpi	r20, 0x01	; 1
     2ca:	71 f4       	brne	.+28     	; 0x2e8 <DIO_SetPinValue+0xfe>
     2cc:	22 b3       	in	r18, 0x12	; 18
     2ce:	81 e0       	ldi	r24, 0x01	; 1
     2d0:	90 e0       	ldi	r25, 0x00	; 0
     2d2:	ac 01       	movw	r20, r24
     2d4:	02 c0       	rjmp	.+4      	; 0x2da <DIO_SetPinValue+0xf0>
     2d6:	44 0f       	add	r20, r20
     2d8:	55 1f       	adc	r21, r21
     2da:	6a 95       	dec	r22
     2dc:	e2 f7       	brpl	.-8      	; 0x2d6 <DIO_SetPinValue+0xec>
     2de:	ba 01       	movw	r22, r20
     2e0:	62 2b       	or	r22, r18
     2e2:	62 bb       	out	0x12, r22	; 18
     2e4:	80 e0       	ldi	r24, 0x00	; 0
     2e6:	08 95       	ret
     2e8:	22 b3       	in	r18, 0x12	; 18
     2ea:	81 e0       	ldi	r24, 0x01	; 1
     2ec:	90 e0       	ldi	r25, 0x00	; 0
     2ee:	ac 01       	movw	r20, r24
     2f0:	02 c0       	rjmp	.+4      	; 0x2f6 <DIO_SetPinValue+0x10c>
     2f2:	44 0f       	add	r20, r20
     2f4:	55 1f       	adc	r21, r21
     2f6:	6a 95       	dec	r22
     2f8:	e2 f7       	brpl	.-8      	; 0x2f2 <DIO_SetPinValue+0x108>
     2fa:	ba 01       	movw	r22, r20
     2fc:	60 95       	com	r22
     2fe:	62 23       	and	r22, r18
     300:	62 bb       	out	0x12, r22	; 18
     302:	80 e0       	ldi	r24, 0x00	; 0
     304:	08 95       	ret
     306:	81 e0       	ldi	r24, 0x01	; 1
     308:	08 95       	ret
     30a:	81 e0       	ldi	r24, 0x01	; 1
     30c:	08 95       	ret
     30e:	81 e0       	ldi	r24, 0x01	; 1
     310:	08 95       	ret
     312:	80 e0       	ldi	r24, 0x00	; 0
     314:	08 95       	ret

00000316 <DIO_TogglePinValue>:
     316:	84 30       	cpi	r24, 0x04	; 4
     318:	08 f0       	brcs	.+2      	; 0x31c <DIO_TogglePinValue+0x6>
     31a:	45 c0       	rjmp	.+138    	; 0x3a6 <DIO_TogglePinValue+0x90>
     31c:	68 30       	cpi	r22, 0x08	; 8
     31e:	08 f0       	brcs	.+2      	; 0x322 <DIO_TogglePinValue+0xc>
     320:	44 c0       	rjmp	.+136    	; 0x3aa <DIO_TogglePinValue+0x94>
     322:	81 30       	cpi	r24, 0x01	; 1
     324:	b1 f0       	breq	.+44     	; 0x352 <DIO_TogglePinValue+0x3c>
     326:	81 30       	cpi	r24, 0x01	; 1
     328:	30 f0       	brcs	.+12     	; 0x336 <DIO_TogglePinValue+0x20>
     32a:	82 30       	cpi	r24, 0x02	; 2
     32c:	01 f1       	breq	.+64     	; 0x36e <DIO_TogglePinValue+0x58>
     32e:	83 30       	cpi	r24, 0x03	; 3
     330:	09 f0       	breq	.+2      	; 0x334 <DIO_TogglePinValue+0x1e>
     332:	3d c0       	rjmp	.+122    	; 0x3ae <DIO_TogglePinValue+0x98>
     334:	2a c0       	rjmp	.+84     	; 0x38a <DIO_TogglePinValue+0x74>
     336:	2b b3       	in	r18, 0x1b	; 27
     338:	81 e0       	ldi	r24, 0x01	; 1
     33a:	90 e0       	ldi	r25, 0x00	; 0
     33c:	ac 01       	movw	r20, r24
     33e:	02 c0       	rjmp	.+4      	; 0x344 <DIO_TogglePinValue+0x2e>
     340:	44 0f       	add	r20, r20
     342:	55 1f       	adc	r21, r21
     344:	6a 95       	dec	r22
     346:	e2 f7       	brpl	.-8      	; 0x340 <DIO_TogglePinValue+0x2a>
     348:	ba 01       	movw	r22, r20
     34a:	62 27       	eor	r22, r18
     34c:	6b bb       	out	0x1b, r22	; 27
     34e:	80 e0       	ldi	r24, 0x00	; 0
     350:	08 95       	ret
     352:	28 b3       	in	r18, 0x18	; 24
     354:	81 e0       	ldi	r24, 0x01	; 1
     356:	90 e0       	ldi	r25, 0x00	; 0
     358:	ac 01       	movw	r20, r24
     35a:	02 c0       	rjmp	.+4      	; 0x360 <DIO_TogglePinValue+0x4a>
     35c:	44 0f       	add	r20, r20
     35e:	55 1f       	adc	r21, r21
     360:	6a 95       	dec	r22
     362:	e2 f7       	brpl	.-8      	; 0x35c <DIO_TogglePinValue+0x46>
     364:	ba 01       	movw	r22, r20
     366:	62 27       	eor	r22, r18
     368:	68 bb       	out	0x18, r22	; 24
     36a:	80 e0       	ldi	r24, 0x00	; 0
     36c:	08 95       	ret
     36e:	25 b3       	in	r18, 0x15	; 21
     370:	81 e0       	ldi	r24, 0x01	; 1
     372:	90 e0       	ldi	r25, 0x00	; 0
     374:	ac 01       	movw	r20, r24
     376:	02 c0       	rjmp	.+4      	; 0x37c <DIO_TogglePinValue+0x66>
     378:	44 0f       	add	r20, r20
     37a:	55 1f       	adc	r21, r21
     37c:	6a 95       	dec	r22
     37e:	e2 f7       	brpl	.-8      	; 0x378 <DIO_TogglePinValue+0x62>
     380:	ba 01       	movw	r22, r20
     382:	62 27       	eor	r22, r18
     384:	65 bb       	out	0x15, r22	; 21
     386:	80 e0       	ldi	r24, 0x00	; 0
     388:	08 95       	ret
     38a:	22 b3       	in	r18, 0x12	; 18
     38c:	81 e0       	ldi	r24, 0x01	; 1
     38e:	90 e0       	ldi	r25, 0x00	; 0
     390:	ac 01       	movw	r20, r24
     392:	02 c0       	rjmp	.+4      	; 0x398 <DIO_TogglePinValue+0x82>
     394:	44 0f       	add	r20, r20
     396:	55 1f       	adc	r21, r21
     398:	6a 95       	dec	r22
     39a:	e2 f7       	brpl	.-8      	; 0x394 <DIO_TogglePinValue+0x7e>
     39c:	ba 01       	movw	r22, r20
     39e:	62 27       	eor	r22, r18
     3a0:	62 bb       	out	0x12, r22	; 18
     3a2:	80 e0       	ldi	r24, 0x00	; 0
     3a4:	08 95       	ret
     3a6:	81 e0       	ldi	r24, 0x01	; 1
     3a8:	08 95       	ret
     3aa:	81 e0       	ldi	r24, 0x01	; 1
     3ac:	08 95       	ret
     3ae:	80 e0       	ldi	r24, 0x00	; 0
     3b0:	08 95       	ret

000003b2 <DIO_ReadValue>:
     3b2:	84 30       	cpi	r24, 0x04	; 4
     3b4:	08 f0       	brcs	.+2      	; 0x3b8 <DIO_ReadValue+0x6>
     3b6:	49 c0       	rjmp	.+146    	; 0x44a <DIO_ReadValue+0x98>
     3b8:	68 30       	cpi	r22, 0x08	; 8
     3ba:	08 f0       	brcs	.+2      	; 0x3be <DIO_ReadValue+0xc>
     3bc:	48 c0       	rjmp	.+144    	; 0x44e <DIO_ReadValue+0x9c>
     3be:	41 15       	cp	r20, r1
     3c0:	51 05       	cpc	r21, r1
     3c2:	09 f4       	brne	.+2      	; 0x3c6 <DIO_ReadValue+0x14>
     3c4:	46 c0       	rjmp	.+140    	; 0x452 <DIO_ReadValue+0xa0>
     3c6:	81 30       	cpi	r24, 0x01	; 1
     3c8:	b1 f0       	breq	.+44     	; 0x3f6 <DIO_ReadValue+0x44>
     3ca:	81 30       	cpi	r24, 0x01	; 1
     3cc:	30 f0       	brcs	.+12     	; 0x3da <DIO_ReadValue+0x28>
     3ce:	82 30       	cpi	r24, 0x02	; 2
     3d0:	01 f1       	breq	.+64     	; 0x412 <DIO_ReadValue+0x60>
     3d2:	83 30       	cpi	r24, 0x03	; 3
     3d4:	09 f0       	breq	.+2      	; 0x3d8 <DIO_ReadValue+0x26>
     3d6:	3f c0       	rjmp	.+126    	; 0x456 <DIO_ReadValue+0xa4>
     3d8:	2a c0       	rjmp	.+84     	; 0x42e <DIO_ReadValue+0x7c>
     3da:	89 b3       	in	r24, 0x19	; 25
     3dc:	90 e0       	ldi	r25, 0x00	; 0
     3de:	9c 01       	movw	r18, r24
     3e0:	02 c0       	rjmp	.+4      	; 0x3e6 <DIO_ReadValue+0x34>
     3e2:	35 95       	asr	r19
     3e4:	27 95       	ror	r18
     3e6:	6a 95       	dec	r22
     3e8:	e2 f7       	brpl	.-8      	; 0x3e2 <DIO_ReadValue+0x30>
     3ea:	b9 01       	movw	r22, r18
     3ec:	61 70       	andi	r22, 0x01	; 1
     3ee:	fa 01       	movw	r30, r20
     3f0:	60 83       	st	Z, r22
     3f2:	80 e0       	ldi	r24, 0x00	; 0
     3f4:	08 95       	ret
     3f6:	86 b3       	in	r24, 0x16	; 22
     3f8:	90 e0       	ldi	r25, 0x00	; 0
     3fa:	9c 01       	movw	r18, r24
     3fc:	02 c0       	rjmp	.+4      	; 0x402 <DIO_ReadValue+0x50>
     3fe:	35 95       	asr	r19
     400:	27 95       	ror	r18
     402:	6a 95       	dec	r22
     404:	e2 f7       	brpl	.-8      	; 0x3fe <DIO_ReadValue+0x4c>
     406:	b9 01       	movw	r22, r18
     408:	61 70       	andi	r22, 0x01	; 1
     40a:	fa 01       	movw	r30, r20
     40c:	60 83       	st	Z, r22
     40e:	80 e0       	ldi	r24, 0x00	; 0
     410:	08 95       	ret
     412:	83 b3       	in	r24, 0x13	; 19
     414:	90 e0       	ldi	r25, 0x00	; 0
     416:	9c 01       	movw	r18, r24
     418:	02 c0       	rjmp	.+4      	; 0x41e <DIO_ReadValue+0x6c>
     41a:	35 95       	asr	r19
     41c:	27 95       	ror	r18
     41e:	6a 95       	dec	r22
     420:	e2 f7       	brpl	.-8      	; 0x41a <DIO_ReadValue+0x68>
     422:	b9 01       	movw	r22, r18
     424:	61 70       	andi	r22, 0x01	; 1
     426:	fa 01       	movw	r30, r20
     428:	60 83       	st	Z, r22
     42a:	80 e0       	ldi	r24, 0x00	; 0
     42c:	08 95       	ret
     42e:	80 b3       	in	r24, 0x10	; 16
     430:	90 e0       	ldi	r25, 0x00	; 0
     432:	9c 01       	movw	r18, r24
     434:	02 c0       	rjmp	.+4      	; 0x43a <DIO_ReadValue+0x88>
     436:	35 95       	asr	r19
     438:	27 95       	ror	r18
     43a:	6a 95       	dec	r22
     43c:	e2 f7       	brpl	.-8      	; 0x436 <DIO_ReadValue+0x84>
     43e:	b9 01       	movw	r22, r18
     440:	61 70       	andi	r22, 0x01	; 1
     442:	fa 01       	movw	r30, r20
     444:	60 83       	st	Z, r22
     446:	80 e0       	ldi	r24, 0x00	; 0
     448:	08 95       	ret
     44a:	81 e0       	ldi	r24, 0x01	; 1
     44c:	08 95       	ret
     44e:	81 e0       	ldi	r24, 0x01	; 1
     450:	08 95       	ret
     452:	81 e0       	ldi	r24, 0x01	; 1
     454:	08 95       	ret
     456:	80 e0       	ldi	r24, 0x00	; 0
     458:	08 95       	ret

0000045a <DIO_activePinInPullUpResistance>:
     45a:	84 30       	cpi	r24, 0x04	; 4
     45c:	08 f0       	brcs	.+2      	; 0x460 <DIO_activePinInPullUpResistance+0x6>
     45e:	45 c0       	rjmp	.+138    	; 0x4ea <DIO_activePinInPullUpResistance+0x90>
     460:	68 30       	cpi	r22, 0x08	; 8
     462:	08 f0       	brcs	.+2      	; 0x466 <DIO_activePinInPullUpResistance+0xc>
     464:	44 c0       	rjmp	.+136    	; 0x4ee <DIO_activePinInPullUpResistance+0x94>
     466:	81 30       	cpi	r24, 0x01	; 1
     468:	b1 f0       	breq	.+44     	; 0x496 <DIO_activePinInPullUpResistance+0x3c>
     46a:	81 30       	cpi	r24, 0x01	; 1
     46c:	30 f0       	brcs	.+12     	; 0x47a <DIO_activePinInPullUpResistance+0x20>
     46e:	82 30       	cpi	r24, 0x02	; 2
     470:	01 f1       	breq	.+64     	; 0x4b2 <DIO_activePinInPullUpResistance+0x58>
     472:	83 30       	cpi	r24, 0x03	; 3
     474:	09 f0       	breq	.+2      	; 0x478 <DIO_activePinInPullUpResistance+0x1e>
     476:	3d c0       	rjmp	.+122    	; 0x4f2 <DIO_activePinInPullUpResistance+0x98>
     478:	2a c0       	rjmp	.+84     	; 0x4ce <DIO_activePinInPullUpResistance+0x74>
     47a:	2b b3       	in	r18, 0x1b	; 27
     47c:	81 e0       	ldi	r24, 0x01	; 1
     47e:	90 e0       	ldi	r25, 0x00	; 0
     480:	ac 01       	movw	r20, r24
     482:	02 c0       	rjmp	.+4      	; 0x488 <DIO_activePinInPullUpResistance+0x2e>
     484:	44 0f       	add	r20, r20
     486:	55 1f       	adc	r21, r21
     488:	6a 95       	dec	r22
     48a:	e2 f7       	brpl	.-8      	; 0x484 <DIO_activePinInPullUpResistance+0x2a>
     48c:	ba 01       	movw	r22, r20
     48e:	62 2b       	or	r22, r18
     490:	6b bb       	out	0x1b, r22	; 27
     492:	80 e0       	ldi	r24, 0x00	; 0
     494:	08 95       	ret
     496:	28 b3       	in	r18, 0x18	; 24
     498:	81 e0       	ldi	r24, 0x01	; 1
     49a:	90 e0       	ldi	r25, 0x00	; 0
     49c:	ac 01       	movw	r20, r24
     49e:	02 c0       	rjmp	.+4      	; 0x4a4 <DIO_activePinInPullUpResistance+0x4a>
     4a0:	44 0f       	add	r20, r20
     4a2:	55 1f       	adc	r21, r21
     4a4:	6a 95       	dec	r22
     4a6:	e2 f7       	brpl	.-8      	; 0x4a0 <DIO_activePinInPullUpResistance+0x46>
     4a8:	ba 01       	movw	r22, r20
     4aa:	62 2b       	or	r22, r18
     4ac:	68 bb       	out	0x18, r22	; 24
     4ae:	80 e0       	ldi	r24, 0x00	; 0
     4b0:	08 95       	ret
     4b2:	25 b3       	in	r18, 0x15	; 21
     4b4:	81 e0       	ldi	r24, 0x01	; 1
     4b6:	90 e0       	ldi	r25, 0x00	; 0
     4b8:	ac 01       	movw	r20, r24
     4ba:	02 c0       	rjmp	.+4      	; 0x4c0 <DIO_activePinInPullUpResistance+0x66>
     4bc:	44 0f       	add	r20, r20
     4be:	55 1f       	adc	r21, r21
     4c0:	6a 95       	dec	r22
     4c2:	e2 f7       	brpl	.-8      	; 0x4bc <DIO_activePinInPullUpResistance+0x62>
     4c4:	ba 01       	movw	r22, r20
     4c6:	62 2b       	or	r22, r18
     4c8:	65 bb       	out	0x15, r22	; 21
     4ca:	80 e0       	ldi	r24, 0x00	; 0
     4cc:	08 95       	ret
     4ce:	22 b3       	in	r18, 0x12	; 18
     4d0:	81 e0       	ldi	r24, 0x01	; 1
     4d2:	90 e0       	ldi	r25, 0x00	; 0
     4d4:	ac 01       	movw	r20, r24
     4d6:	02 c0       	rjmp	.+4      	; 0x4dc <DIO_activePinInPullUpResistance+0x82>
     4d8:	44 0f       	add	r20, r20
     4da:	55 1f       	adc	r21, r21
     4dc:	6a 95       	dec	r22
     4de:	e2 f7       	brpl	.-8      	; 0x4d8 <DIO_activePinInPullUpResistance+0x7e>
     4e0:	ba 01       	movw	r22, r20
     4e2:	62 2b       	or	r22, r18
     4e4:	62 bb       	out	0x12, r22	; 18
     4e6:	80 e0       	ldi	r24, 0x00	; 0
     4e8:	08 95       	ret
     4ea:	81 e0       	ldi	r24, 0x01	; 1
     4ec:	08 95       	ret
     4ee:	81 e0       	ldi	r24, 0x01	; 1
     4f0:	08 95       	ret
     4f2:	80 e0       	ldi	r24, 0x00	; 0
     4f4:	08 95       	ret

000004f6 <DIO_setPortDirection>:
     4f6:	84 30       	cpi	r24, 0x04	; 4
     4f8:	a8 f5       	brcc	.+106    	; 0x564 <DIO_setPortDirection+0x6e>
     4fa:	81 30       	cpi	r24, 0x01	; 1
     4fc:	91 f0       	breq	.+36     	; 0x522 <DIO_setPortDirection+0x2c>
     4fe:	81 30       	cpi	r24, 0x01	; 1
     500:	28 f0       	brcs	.+10     	; 0x50c <DIO_setPortDirection+0x16>
     502:	82 30       	cpi	r24, 0x02	; 2
     504:	c9 f0       	breq	.+50     	; 0x538 <DIO_setPortDirection+0x42>
     506:	83 30       	cpi	r24, 0x03	; 3
     508:	79 f5       	brne	.+94     	; 0x568 <DIO_setPortDirection+0x72>
     50a:	21 c0       	rjmp	.+66     	; 0x54e <DIO_setPortDirection+0x58>
     50c:	6f 3f       	cpi	r22, 0xFF	; 255
     50e:	29 f4       	brne	.+10     	; 0x51a <DIO_setPortDirection+0x24>
     510:	8a b3       	in	r24, 0x1a	; 26
     512:	8f ef       	ldi	r24, 0xFF	; 255
     514:	8a bb       	out	0x1a, r24	; 26
     516:	80 e0       	ldi	r24, 0x00	; 0
     518:	08 95       	ret
     51a:	8a b3       	in	r24, 0x1a	; 26
     51c:	1a ba       	out	0x1a, r1	; 26
     51e:	80 e0       	ldi	r24, 0x00	; 0
     520:	08 95       	ret
     522:	6f 3f       	cpi	r22, 0xFF	; 255
     524:	29 f4       	brne	.+10     	; 0x530 <DIO_setPortDirection+0x3a>
     526:	87 b3       	in	r24, 0x17	; 23
     528:	8f ef       	ldi	r24, 0xFF	; 255
     52a:	87 bb       	out	0x17, r24	; 23
     52c:	80 e0       	ldi	r24, 0x00	; 0
     52e:	08 95       	ret
     530:	87 b3       	in	r24, 0x17	; 23
     532:	17 ba       	out	0x17, r1	; 23
     534:	80 e0       	ldi	r24, 0x00	; 0
     536:	08 95       	ret
     538:	6f 3f       	cpi	r22, 0xFF	; 255
     53a:	29 f4       	brne	.+10     	; 0x546 <DIO_setPortDirection+0x50>
     53c:	84 b3       	in	r24, 0x14	; 20
     53e:	8f ef       	ldi	r24, 0xFF	; 255
     540:	84 bb       	out	0x14, r24	; 20
     542:	80 e0       	ldi	r24, 0x00	; 0
     544:	08 95       	ret
     546:	84 b3       	in	r24, 0x14	; 20
     548:	14 ba       	out	0x14, r1	; 20
     54a:	80 e0       	ldi	r24, 0x00	; 0
     54c:	08 95       	ret
     54e:	6f 3f       	cpi	r22, 0xFF	; 255
     550:	29 f4       	brne	.+10     	; 0x55c <DIO_setPortDirection+0x66>
     552:	81 b3       	in	r24, 0x11	; 17
     554:	8f ef       	ldi	r24, 0xFF	; 255
     556:	81 bb       	out	0x11, r24	; 17
     558:	80 e0       	ldi	r24, 0x00	; 0
     55a:	08 95       	ret
     55c:	81 b3       	in	r24, 0x11	; 17
     55e:	11 ba       	out	0x11, r1	; 17
     560:	80 e0       	ldi	r24, 0x00	; 0
     562:	08 95       	ret
     564:	81 e0       	ldi	r24, 0x01	; 1
     566:	08 95       	ret
     568:	80 e0       	ldi	r24, 0x00	; 0
     56a:	08 95       	ret

0000056c <DIO_setPortValue>:
     56c:	84 30       	cpi	r24, 0x04	; 4
     56e:	a8 f4       	brcc	.+42     	; 0x59a <DIO_setPortValue+0x2e>
     570:	81 30       	cpi	r24, 0x01	; 1
     572:	51 f0       	breq	.+20     	; 0x588 <DIO_setPortValue+0x1c>
     574:	81 30       	cpi	r24, 0x01	; 1
     576:	28 f0       	brcs	.+10     	; 0x582 <DIO_setPortValue+0x16>
     578:	82 30       	cpi	r24, 0x02	; 2
     57a:	49 f0       	breq	.+18     	; 0x58e <DIO_setPortValue+0x22>
     57c:	83 30       	cpi	r24, 0x03	; 3
     57e:	79 f4       	brne	.+30     	; 0x59e <DIO_setPortValue+0x32>
     580:	09 c0       	rjmp	.+18     	; 0x594 <DIO_setPortValue+0x28>
     582:	6b bb       	out	0x1b, r22	; 27
     584:	80 e0       	ldi	r24, 0x00	; 0
     586:	08 95       	ret
     588:	68 bb       	out	0x18, r22	; 24
     58a:	80 e0       	ldi	r24, 0x00	; 0
     58c:	08 95       	ret
     58e:	65 bb       	out	0x15, r22	; 21
     590:	80 e0       	ldi	r24, 0x00	; 0
     592:	08 95       	ret
     594:	62 bb       	out	0x12, r22	; 18
     596:	80 e0       	ldi	r24, 0x00	; 0
     598:	08 95       	ret
     59a:	81 e0       	ldi	r24, 0x01	; 1
     59c:	08 95       	ret
     59e:	80 e0       	ldi	r24, 0x00	; 0
     5a0:	08 95       	ret

000005a2 <DIO_getPortValue>:
     5a2:	84 30       	cpi	r24, 0x04	; 4
     5a4:	00 f5       	brcc	.+64     	; 0x5e6 <DIO_getPortValue+0x44>
     5a6:	61 15       	cp	r22, r1
     5a8:	71 05       	cpc	r23, r1
     5aa:	f9 f0       	breq	.+62     	; 0x5ea <DIO_getPortValue+0x48>
     5ac:	81 30       	cpi	r24, 0x01	; 1
     5ae:	61 f0       	breq	.+24     	; 0x5c8 <DIO_getPortValue+0x26>
     5b0:	81 30       	cpi	r24, 0x01	; 1
     5b2:	28 f0       	brcs	.+10     	; 0x5be <DIO_getPortValue+0x1c>
     5b4:	82 30       	cpi	r24, 0x02	; 2
     5b6:	69 f0       	breq	.+26     	; 0x5d2 <DIO_getPortValue+0x30>
     5b8:	83 30       	cpi	r24, 0x03	; 3
     5ba:	c9 f4       	brne	.+50     	; 0x5ee <DIO_getPortValue+0x4c>
     5bc:	0f c0       	rjmp	.+30     	; 0x5dc <DIO_getPortValue+0x3a>
     5be:	8b b3       	in	r24, 0x1b	; 27
     5c0:	fb 01       	movw	r30, r22
     5c2:	80 83       	st	Z, r24
     5c4:	80 e0       	ldi	r24, 0x00	; 0
     5c6:	08 95       	ret
     5c8:	88 b3       	in	r24, 0x18	; 24
     5ca:	fb 01       	movw	r30, r22
     5cc:	80 83       	st	Z, r24
     5ce:	80 e0       	ldi	r24, 0x00	; 0
     5d0:	08 95       	ret
     5d2:	85 b3       	in	r24, 0x15	; 21
     5d4:	fb 01       	movw	r30, r22
     5d6:	80 83       	st	Z, r24
     5d8:	80 e0       	ldi	r24, 0x00	; 0
     5da:	08 95       	ret
     5dc:	82 b3       	in	r24, 0x12	; 18
     5de:	fb 01       	movw	r30, r22
     5e0:	80 83       	st	Z, r24
     5e2:	80 e0       	ldi	r24, 0x00	; 0
     5e4:	08 95       	ret
     5e6:	81 e0       	ldi	r24, 0x01	; 1
     5e8:	08 95       	ret
     5ea:	81 e0       	ldi	r24, 0x01	; 1
     5ec:	08 95       	ret
     5ee:	80 e0       	ldi	r24, 0x00	; 0
     5f0:	08 95       	ret

000005f2 <DIO_togglePortValue>:
     5f2:	84 30       	cpi	r24, 0x04	; 4
     5f4:	e8 f4       	brcc	.+58     	; 0x630 <DIO_togglePortValue+0x3e>
     5f6:	81 30       	cpi	r24, 0x01	; 1
     5f8:	61 f0       	breq	.+24     	; 0x612 <DIO_togglePortValue+0x20>
     5fa:	81 30       	cpi	r24, 0x01	; 1
     5fc:	28 f0       	brcs	.+10     	; 0x608 <DIO_togglePortValue+0x16>
     5fe:	82 30       	cpi	r24, 0x02	; 2
     600:	69 f0       	breq	.+26     	; 0x61c <DIO_togglePortValue+0x2a>
     602:	83 30       	cpi	r24, 0x03	; 3
     604:	b9 f4       	brne	.+46     	; 0x634 <DIO_togglePortValue+0x42>
     606:	0f c0       	rjmp	.+30     	; 0x626 <DIO_togglePortValue+0x34>
     608:	8b b3       	in	r24, 0x1b	; 27
     60a:	80 95       	com	r24
     60c:	8b bb       	out	0x1b, r24	; 27
     60e:	80 e0       	ldi	r24, 0x00	; 0
     610:	08 95       	ret
     612:	88 b3       	in	r24, 0x18	; 24
     614:	80 95       	com	r24
     616:	88 bb       	out	0x18, r24	; 24
     618:	80 e0       	ldi	r24, 0x00	; 0
     61a:	08 95       	ret
     61c:	85 b3       	in	r24, 0x15	; 21
     61e:	80 95       	com	r24
     620:	85 bb       	out	0x15, r24	; 21
     622:	80 e0       	ldi	r24, 0x00	; 0
     624:	08 95       	ret
     626:	82 b3       	in	r24, 0x12	; 18
     628:	80 95       	com	r24
     62a:	82 bb       	out	0x12, r24	; 18
     62c:	80 e0       	ldi	r24, 0x00	; 0
     62e:	08 95       	ret
     630:	81 e0       	ldi	r24, 0x01	; 1
     632:	08 95       	ret
     634:	80 e0       	ldi	r24, 0x00	; 0
     636:	08 95       	ret

00000638 <DIO_activePortInPullUpResistance>:
     638:	84 30       	cpi	r24, 0x04	; 4
     63a:	e8 f4       	brcc	.+58     	; 0x676 <DIO_activePortInPullUpResistance+0x3e>
     63c:	81 30       	cpi	r24, 0x01	; 1
     63e:	61 f0       	breq	.+24     	; 0x658 <DIO_activePortInPullUpResistance+0x20>
     640:	81 30       	cpi	r24, 0x01	; 1
     642:	28 f0       	brcs	.+10     	; 0x64e <DIO_activePortInPullUpResistance+0x16>
     644:	82 30       	cpi	r24, 0x02	; 2
     646:	69 f0       	breq	.+26     	; 0x662 <DIO_activePortInPullUpResistance+0x2a>
     648:	83 30       	cpi	r24, 0x03	; 3
     64a:	b9 f4       	brne	.+46     	; 0x67a <DIO_activePortInPullUpResistance+0x42>
     64c:	0f c0       	rjmp	.+30     	; 0x66c <DIO_activePortInPullUpResistance+0x34>
     64e:	8b b3       	in	r24, 0x1b	; 27
     650:	8f ef       	ldi	r24, 0xFF	; 255
     652:	8b bb       	out	0x1b, r24	; 27
     654:	80 e0       	ldi	r24, 0x00	; 0
     656:	08 95       	ret
     658:	88 b3       	in	r24, 0x18	; 24
     65a:	8f ef       	ldi	r24, 0xFF	; 255
     65c:	88 bb       	out	0x18, r24	; 24
     65e:	80 e0       	ldi	r24, 0x00	; 0
     660:	08 95       	ret
     662:	85 b3       	in	r24, 0x15	; 21
     664:	8f ef       	ldi	r24, 0xFF	; 255
     666:	85 bb       	out	0x15, r24	; 21
     668:	80 e0       	ldi	r24, 0x00	; 0
     66a:	08 95       	ret
     66c:	82 b3       	in	r24, 0x12	; 18
     66e:	8f ef       	ldi	r24, 0xFF	; 255
     670:	82 bb       	out	0x12, r24	; 18
     672:	80 e0       	ldi	r24, 0x00	; 0
     674:	08 95       	ret
     676:	81 e0       	ldi	r24, 0x01	; 1
     678:	08 95       	ret
     67a:	80 e0       	ldi	r24, 0x00	; 0
     67c:	08 95       	ret

0000067e <EEPROM_init>:
     67e:	0e 94 87 03 	call	0x70e	; 0x70e <I2C_initMaster>
     682:	08 95       	ret

00000684 <EEPROM_WriteByte>:
     684:	1f 93       	push	r17
     686:	cf 93       	push	r28
     688:	df 93       	push	r29
     68a:	d8 2f       	mov	r29, r24
     68c:	19 2f       	mov	r17, r25
     68e:	c6 2f       	mov	r28, r22
     690:	0e 94 92 03 	call	0x724	; 0x724 <I2C_sendStartCondition>
     694:	81 2f       	mov	r24, r17
     696:	80 65       	ori	r24, 0x50	; 80
     698:	0e 94 b5 03 	call	0x76a	; 0x76a <I2C_sendSlaveAddWithWrite>
     69c:	8d 2f       	mov	r24, r29
     69e:	0e 94 db 03 	call	0x7b6	; 0x7b6 <I2C_sendMasterDataByte>
     6a2:	8c 2f       	mov	r24, r28
     6a4:	0e 94 db 03 	call	0x7b6	; 0x7b6 <I2C_sendMasterDataByte>
     6a8:	0e 94 ae 03 	call	0x75c	; 0x75c <I2C_sendStopCondition>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     6ac:	8f e1       	ldi	r24, 0x1F	; 31
     6ae:	9e e4       	ldi	r25, 0x4E	; 78
     6b0:	01 97       	sbiw	r24, 0x01	; 1
     6b2:	f1 f7       	brne	.-4      	; 0x6b0 <EEPROM_WriteByte+0x2c>
     6b4:	00 c0       	rjmp	.+0      	; 0x6b6 <EEPROM_WriteByte+0x32>
     6b6:	00 00       	nop
     6b8:	df 91       	pop	r29
     6ba:	cf 91       	pop	r28
     6bc:	1f 91       	pop	r17
     6be:	08 95       	ret

000006c0 <EEPROM_ReadByte>:
     6c0:	0f 93       	push	r16
     6c2:	1f 93       	push	r17
     6c4:	cf 93       	push	r28
     6c6:	df 93       	push	r29
     6c8:	08 2f       	mov	r16, r24
     6ca:	eb 01       	movw	r28, r22
     6cc:	20 97       	sbiw	r28, 0x00	; 0
     6ce:	d1 f0       	breq	.+52     	; 0x704 <EEPROM_ReadByte+0x44>
     6d0:	19 2f       	mov	r17, r25
     6d2:	10 65       	ori	r17, 0x50	; 80
     6d4:	0e 94 92 03 	call	0x724	; 0x724 <I2C_sendStartCondition>
     6d8:	81 2f       	mov	r24, r17
     6da:	0e 94 b5 03 	call	0x76a	; 0x76a <I2C_sendSlaveAddWithWrite>
     6de:	80 2f       	mov	r24, r16
     6e0:	0e 94 db 03 	call	0x7b6	; 0x7b6 <I2C_sendMasterDataByte>
     6e4:	0e 94 a0 03 	call	0x740	; 0x740 <I2C_sendRepStartCondition>
     6e8:	81 2f       	mov	r24, r17
     6ea:	0e 94 c8 03 	call	0x790	; 0x790 <I2C_sendSlaveAddWithRead>
     6ee:	ce 01       	movw	r24, r28
     6f0:	0e 94 e7 03 	call	0x7ce	; 0x7ce <I2C_recieveMasterDataByte>
     6f4:	0e 94 ae 03 	call	0x75c	; 0x75c <I2C_sendStopCondition>
     6f8:	8f e1       	ldi	r24, 0x1F	; 31
     6fa:	9e e4       	ldi	r25, 0x4E	; 78
     6fc:	01 97       	sbiw	r24, 0x01	; 1
     6fe:	f1 f7       	brne	.-4      	; 0x6fc <EEPROM_ReadByte+0x3c>
     700:	00 c0       	rjmp	.+0      	; 0x702 <EEPROM_ReadByte+0x42>
     702:	00 00       	nop
     704:	df 91       	pop	r29
     706:	cf 91       	pop	r28
     708:	1f 91       	pop	r17
     70a:	0f 91       	pop	r16
     70c:	08 95       	ret

0000070e <I2C_initMaster>:
     70e:	8c e0       	ldi	r24, 0x0C	; 12
     710:	80 b9       	out	0x00, r24	; 0
     712:	08 98       	cbi	0x01, 0	; 1
     714:	09 98       	cbi	0x01, 1	; 1
     716:	86 b7       	in	r24, 0x36	; 54
     718:	80 64       	ori	r24, 0x40	; 64
     71a:	86 bf       	out	0x36, r24	; 54
     71c:	86 b7       	in	r24, 0x36	; 54
     71e:	84 60       	ori	r24, 0x04	; 4
     720:	86 bf       	out	0x36, r24	; 54
     722:	08 95       	ret

00000724 <I2C_sendStartCondition>:
     724:	86 b7       	in	r24, 0x36	; 54
     726:	80 62       	ori	r24, 0x20	; 32
     728:	86 bf       	out	0x36, r24	; 54
     72a:	86 b7       	in	r24, 0x36	; 54
     72c:	80 68       	ori	r24, 0x80	; 128
     72e:	86 bf       	out	0x36, r24	; 54
     730:	06 b6       	in	r0, 0x36	; 54
     732:	07 fe       	sbrs	r0, 7
     734:	fd cf       	rjmp	.-6      	; 0x730 <I2C_sendStartCondition+0xc>
     736:	81 b1       	in	r24, 0x01	; 1
     738:	88 7f       	andi	r24, 0xF8	; 248
     73a:	88 30       	cpi	r24, 0x08	; 8
     73c:	e1 f7       	brne	.-8      	; 0x736 <I2C_sendStartCondition+0x12>
     73e:	08 95       	ret

00000740 <I2C_sendRepStartCondition>:
     740:	86 b7       	in	r24, 0x36	; 54
     742:	80 62       	ori	r24, 0x20	; 32
     744:	86 bf       	out	0x36, r24	; 54
     746:	86 b7       	in	r24, 0x36	; 54
     748:	80 68       	ori	r24, 0x80	; 128
     74a:	86 bf       	out	0x36, r24	; 54
     74c:	06 b6       	in	r0, 0x36	; 54
     74e:	07 fe       	sbrs	r0, 7
     750:	fd cf       	rjmp	.-6      	; 0x74c <I2C_sendRepStartCondition+0xc>
     752:	81 b1       	in	r24, 0x01	; 1
     754:	88 7f       	andi	r24, 0xF8	; 248
     756:	80 31       	cpi	r24, 0x10	; 16
     758:	e1 f7       	brne	.-8      	; 0x752 <I2C_sendRepStartCondition+0x12>
     75a:	08 95       	ret

0000075c <I2C_sendStopCondition>:
     75c:	86 b7       	in	r24, 0x36	; 54
     75e:	80 61       	ori	r24, 0x10	; 16
     760:	86 bf       	out	0x36, r24	; 54
     762:	86 b7       	in	r24, 0x36	; 54
     764:	80 68       	ori	r24, 0x80	; 128
     766:	86 bf       	out	0x36, r24	; 54
     768:	08 95       	ret

0000076a <I2C_sendSlaveAddWithWrite>:
     76a:	88 23       	and	r24, r24
     76c:	84 f0       	brlt	.+32     	; 0x78e <I2C_sendSlaveAddWithWrite+0x24>
     76e:	88 0f       	add	r24, r24
     770:	83 b9       	out	0x03, r24	; 3
     772:	18 98       	cbi	0x03, 0	; 3
     774:	86 b7       	in	r24, 0x36	; 54
     776:	8f 7d       	andi	r24, 0xDF	; 223
     778:	86 bf       	out	0x36, r24	; 54
     77a:	86 b7       	in	r24, 0x36	; 54
     77c:	80 68       	ori	r24, 0x80	; 128
     77e:	86 bf       	out	0x36, r24	; 54
     780:	06 b6       	in	r0, 0x36	; 54
     782:	07 fe       	sbrs	r0, 7
     784:	fd cf       	rjmp	.-6      	; 0x780 <I2C_sendSlaveAddWithWrite+0x16>
     786:	81 b1       	in	r24, 0x01	; 1
     788:	88 7f       	andi	r24, 0xF8	; 248
     78a:	88 31       	cpi	r24, 0x18	; 24
     78c:	e1 f7       	brne	.-8      	; 0x786 <I2C_sendSlaveAddWithWrite+0x1c>
     78e:	08 95       	ret

00000790 <I2C_sendSlaveAddWithRead>:
     790:	88 23       	and	r24, r24
     792:	84 f0       	brlt	.+32     	; 0x7b4 <I2C_sendSlaveAddWithRead+0x24>
     794:	88 0f       	add	r24, r24
     796:	83 b9       	out	0x03, r24	; 3
     798:	18 9a       	sbi	0x03, 0	; 3
     79a:	86 b7       	in	r24, 0x36	; 54
     79c:	8f 7d       	andi	r24, 0xDF	; 223
     79e:	86 bf       	out	0x36, r24	; 54
     7a0:	86 b7       	in	r24, 0x36	; 54
     7a2:	80 68       	ori	r24, 0x80	; 128
     7a4:	86 bf       	out	0x36, r24	; 54
     7a6:	06 b6       	in	r0, 0x36	; 54
     7a8:	07 fe       	sbrs	r0, 7
     7aa:	fd cf       	rjmp	.-6      	; 0x7a6 <I2C_sendSlaveAddWithRead+0x16>
     7ac:	81 b1       	in	r24, 0x01	; 1
     7ae:	88 7f       	andi	r24, 0xF8	; 248
     7b0:	80 34       	cpi	r24, 0x40	; 64
     7b2:	e1 f7       	brne	.-8      	; 0x7ac <I2C_sendSlaveAddWithRead+0x1c>
     7b4:	08 95       	ret

000007b6 <I2C_sendMasterDataByte>:
     7b6:	83 b9       	out	0x03, r24	; 3
     7b8:	86 b7       	in	r24, 0x36	; 54
     7ba:	80 68       	ori	r24, 0x80	; 128
     7bc:	86 bf       	out	0x36, r24	; 54
     7be:	06 b6       	in	r0, 0x36	; 54
     7c0:	07 fe       	sbrs	r0, 7
     7c2:	fd cf       	rjmp	.-6      	; 0x7be <I2C_sendMasterDataByte+0x8>
     7c4:	81 b1       	in	r24, 0x01	; 1
     7c6:	88 7f       	andi	r24, 0xF8	; 248
     7c8:	88 32       	cpi	r24, 0x28	; 40
     7ca:	e1 f7       	brne	.-8      	; 0x7c4 <I2C_sendMasterDataByte+0xe>
     7cc:	08 95       	ret

000007ce <I2C_recieveMasterDataByte>:
     7ce:	00 97       	sbiw	r24, 0x00	; 0
     7d0:	69 f0       	breq	.+26     	; 0x7ec <I2C_recieveMasterDataByte+0x1e>
     7d2:	26 b7       	in	r18, 0x36	; 54
     7d4:	20 68       	ori	r18, 0x80	; 128
     7d6:	26 bf       	out	0x36, r18	; 54
     7d8:	06 b6       	in	r0, 0x36	; 54
     7da:	07 fe       	sbrs	r0, 7
     7dc:	fd cf       	rjmp	.-6      	; 0x7d8 <I2C_recieveMasterDataByte+0xa>
     7de:	21 b1       	in	r18, 0x01	; 1
     7e0:	28 7f       	andi	r18, 0xF8	; 248
     7e2:	20 35       	cpi	r18, 0x50	; 80
     7e4:	e1 f7       	brne	.-8      	; 0x7de <I2C_recieveMasterDataByte+0x10>
     7e6:	23 b1       	in	r18, 0x03	; 3
     7e8:	fc 01       	movw	r30, r24
     7ea:	20 83       	st	Z, r18
     7ec:	08 95       	ret

000007ee <main>:
#include "EEPROM_interface.h"

u8 WrongCounter=2;

int main(void)
{
     7ee:	cf 93       	push	r28
     7f0:	df 93       	push	r29
     7f2:	cd b7       	in	r28, 0x3d	; 61
     7f4:	de b7       	in	r29, 0x3e	; 62
     7f6:	27 97       	sbiw	r28, 0x07	; 7
     7f8:	0f b6       	in	r0, 0x3f	; 63
     7fa:	f8 94       	cli
     7fc:	de bf       	out	0x3e, r29	; 62
     7fe:	0f be       	out	0x3f, r0	; 63
     800:	cd bf       	out	0x3d, r28	; 61
	u16 password;
	u8 passwordSize=0;
	u8 ReceiveValue;
	u8 KeypadValue;
	
	KEYPAD_init();
     802:	0e 94 c1 06 	call	0xd82	; 0xd82 <KEYPAD_init>
	UART_init();
     806:	0e 94 8f 0a 	call	0x151e	; 0x151e <UART_init>
	SERVO_init();
     80a:	0e 94 f1 09 	call	0x13e2	; 0x13e2 <SERVO_init>
	SERVO_TurnON(Frequance,DutyCycle_0Angle);
     80e:	82 e3       	ldi	r24, 0x32	; 50
     810:	90 e0       	ldi	r25, 0x00	; 0
     812:	40 e0       	ldi	r20, 0x00	; 0
     814:	50 e0       	ldi	r21, 0x00	; 0
     816:	60 ef       	ldi	r22, 0xF0	; 240
     818:	70 e4       	ldi	r23, 0x40	; 64
     81a:	0e 94 01 0a 	call	0x1402	; 0x1402 <SERVO_TurnON>
	LCD_init();
     81e:	0e 94 3d 08 	call	0x107a	; 0x107a <LCD_init>
	RELAY_init(RELAY_PORT,RELAY_PIN);
     822:	81 e0       	ldi	r24, 0x01	; 1
     824:	64 e0       	ldi	r22, 0x04	; 4
     826:	0e 94 d2 09 	call	0x13a4	; 0x13a4 <RELAY_init>
	LED_init(WARNING_LED_PORT,WARNING_LED_PIN);
     82a:	81 e0       	ldi	r24, 0x01	; 1
     82c:	65 e0       	ldi	r22, 0x05	; 5
     82e:	0e 94 b3 09 	call	0x1366	; 0x1366 <LED_init>
	LED_init(NOK_LED_PORT,NOK_LED_PIN);
     832:	81 e0       	ldi	r24, 0x01	; 1
     834:	66 e0       	ldi	r22, 0x06	; 6
     836:	0e 94 b3 09 	call	0x1366	; 0x1366 <LED_init>
	LED_init(OK_LED_PORT,OK_LED_PIN);
     83a:	81 e0       	ldi	r24, 0x01	; 1
     83c:	67 e0       	ldi	r22, 0x07	; 7
     83e:	0e 94 b3 09 	call	0x1366	; 0x1366 <LED_init>
	BUTTON_init(SwitchMode_BUTTON_PORT,SwitchMode_BUTTON_PIN);
     842:	81 e0       	ldi	r24, 0x01	; 1
     844:	60 e0       	ldi	r22, 0x00	; 0
     846:	0e 94 49 00 	call	0x92	; 0x92 <BUTTON_init>
	
	EEPROM_init();
     84a:	0e 94 3f 03 	call	0x67e	; 0x67e <EEPROM_init>
	EEPROM_WriteByte(0,PASSWARD_VALUE);
     84e:	80 e0       	ldi	r24, 0x00	; 0
     850:	90 e0       	ldi	r25, 0x00	; 0
     852:	6b e7       	ldi	r22, 0x7B	; 123
     854:	0e 94 42 03 	call	0x684	; 0x684 <EEPROM_WriteByte>
     858:	8f e3       	ldi	r24, 0x3F	; 63
     85a:	9c e9       	ldi	r25, 0x9C	; 156
     85c:	01 97       	sbiw	r24, 0x01	; 1
     85e:	f1 f7       	brne	.-4      	; 0x85c <main+0x6e>
     860:	00 c0       	rjmp	.+0      	; 0x862 <__stack+0x3>
     862:	00 00       	nop
	_delay_ms(10);
	EEPROM_ReadByte(0,&StoagePassword);
     864:	80 e0       	ldi	r24, 0x00	; 0
     866:	90 e0       	ldi	r25, 0x00	; 0
     868:	be 01       	movw	r22, r28
     86a:	6c 5f       	subi	r22, 0xFC	; 252
     86c:	7f 4f       	sbci	r23, 0xFF	; 255
     86e:	0e 94 60 03 	call	0x6c0	; 0x6c0 <EEPROM_ReadByte>
     872:	af e3       	ldi	r26, 0x3F	; 63
     874:	bc e9       	ldi	r27, 0x9C	; 156
     876:	11 97       	sbiw	r26, 0x01	; 1
     878:	f1 f7       	brne	.-4      	; 0x876 <__stack+0x17>
     87a:	00 c0       	rjmp	.+0      	; 0x87c <__stack+0x1d>
     87c:	00 00       	nop
	_delay_ms(10);
	
	
	LCD_SendString("    WELCOME    ");
     87e:	80 e6       	ldi	r24, 0x60	; 96
     880:	90 e0       	ldi	r25, 0x00	; 0
     882:	0e 94 d8 08 	call	0x11b0	; 0x11b0 <LCD_SendString>
     886:	8f ef       	ldi	r24, 0xFF	; 255
     888:	9d e3       	ldi	r25, 0x3D	; 61
     88a:	a9 e4       	ldi	r26, 0x49	; 73
     88c:	81 50       	subi	r24, 0x01	; 1
     88e:	90 40       	sbci	r25, 0x00	; 0
     890:	a0 40       	sbci	r26, 0x00	; 0
     892:	e1 f7       	brne	.-8      	; 0x88c <__stack+0x2d>
     894:	00 c0       	rjmp	.+0      	; 0x896 <__stack+0x37>
     896:	00 00       	nop
	_delay_ms(1500);
	LCD_ClearDesplay();
     898:	0e 94 e7 08 	call	0x11ce	; 0x11ce <LCD_ClearDesplay>
	LCD_SendString("PASSWORD:");
     89c:	80 e7       	ldi	r24, 0x70	; 112
     89e:	90 e0       	ldi	r25, 0x00	; 0
     8a0:	0e 94 d8 08 	call	0x11b0	; 0x11b0 <LCD_SendString>
	u8 Index=0;
	u8 StoagePassword;
	
	u8 ButtonValue;
	u16 password;
	u8 passwordSize=0;
     8a4:	10 e0       	ldi	r17, 0x00	; 0
u8 WrongCounter=2;

int main(void)
{
	u8 TakenPassword[MaxPasswardSize];
	u8 Index=0;
     8a6:	00 e0       	ldi	r16, 0x00	; 0
					LED_TurnOFF(NOK_LED_PORT,NOK_LED_PIN);
					LED_TurnOFF(WARNING_LED_PORT,WARNING_LED_PIN);
					RELAY_TurnOFF(RELAY_PORT,RELAY_PIN);
					SERVO_TurnON(Frequance,DutyCycle_0Angle);
					LCD_ClearDesplay();
					LCD_SendString("PASSWORD:");  
     8a8:	0f 2e       	mov	r0, r31
     8aa:	f0 e7       	ldi	r31, 0x70	; 112
     8ac:	ef 2e       	mov	r14, r31
     8ae:	f0 e0       	ldi	r31, 0x00	; 0
     8b0:	ff 2e       	mov	r15, r31
     8b2:	f0 2d       	mov	r31, r0
		  		Index++;
		  		passwordSize++;
		  		LCD_sendChar('*');
		    }
		    
		    password =TakenPassword[0]*100+TakenPassword[1]*10+TakenPassword[2]*1;
     8b4:	0f 2e       	mov	r0, r31
     8b6:	f4 e6       	ldi	r31, 0x64	; 100
     8b8:	cf 2e       	mov	r12, r31
     8ba:	dd 24       	eor	r13, r13
     8bc:	f0 2d       	mov	r31, r0
					}
					else
					{
						LCD_ClearDesplay();
						LCD_GoToLocation(5,1);
						LCD_SendString("WARMING");
     8be:	0f 2e       	mov	r0, r31
     8c0:	f3 ea       	ldi	r31, 0xA3	; 163
     8c2:	af 2e       	mov	r10, r31
     8c4:	f0 e0       	ldi	r31, 0x00	; 0
     8c6:	bf 2e       	mov	r11, r31
     8c8:	f0 2d       	mov	r31, r0
					if(WrongCounter>0)
					{
						Index=0;
						passwordSize=0;
						LCD_sendComnd(LCD_GO_TO_2ND_LINE);
						LCD_SendString("Try Again [");
     8ca:	0f 2e       	mov	r0, r31
     8cc:	f1 e9       	ldi	r31, 0x91	; 145
     8ce:	8f 2e       	mov	r8, r31
     8d0:	f0 e0       	ldi	r31, 0x00	; 0
     8d2:	9f 2e       	mov	r9, r31
     8d4:	f0 2d       	mov	r31, r0
						LCD_SendIntegarNumber(WrongCounter);
						LCD_SendString("]");
     8d6:	0f 2e       	mov	r0, r31
     8d8:	fd e9       	ldi	r31, 0x9D	; 157
     8da:	6f 2e       	mov	r6, r31
     8dc:	f0 e0       	ldi	r31, 0x00	; 0
     8de:	7f 2e       	mov	r7, r31
     8e0:	f0 2d       	mov	r31, r0
						LED_TurnOFF(OK_LED_PORT,OK_LED_PIN);
						LED_TurnOFF(NOK_LED_PORT,NOK_LED_PIN);
						LED_TurnON(WARNING_LED_PORT,WARNING_LED_PIN);
						RELAY_TurnOFF(RELAY_PORT,RELAY_PIN);
						LCD_GoToLocation(10,1);
						LCD_SendString("   ");
     8e2:	0f 2e       	mov	r0, r31
     8e4:	ff e9       	ldi	r31, 0x9F	; 159
     8e6:	4f 2e       	mov	r4, r31
     8e8:	f0 e0       	ldi	r31, 0x00	; 0
     8ea:	5f 2e       	mov	r5, r31
     8ec:	f0 2d       	mov	r31, r0
		    {
		  		if(password==StoagePassword)
		  		{
		  			WrongCounter=2;
		  			LCD_sendComnd(LCD_GO_TO_2ND_LINE);
					LCD_SendString("                 ");
     8ee:	0f 2e       	mov	r0, r31
     8f0:	fa e7       	ldi	r31, 0x7A	; 122
     8f2:	2f 2e       	mov	r2, r31
     8f4:	f0 e0       	ldi	r31, 0x00	; 0
     8f6:	3f 2e       	mov	r3, r31
     8f8:	f0 2d       	mov	r31, r0
	LCD_SendString("PASSWORD:");
	
	
    while(1)
    {
		BUTTON_ReadValue(SwitchMode_BUTTON_PORT,SwitchMode_BUTTON_PIN,&ButtonValue,BUTTON_PullDown);
     8fa:	81 e0       	ldi	r24, 0x01	; 1
     8fc:	60 e0       	ldi	r22, 0x00	; 0
     8fe:	ae 01       	movw	r20, r28
     900:	4b 5f       	subi	r20, 0xFB	; 251
     902:	5f 4f       	sbci	r21, 0xFF	; 255
     904:	20 e0       	ldi	r18, 0x00	; 0
     906:	0e 94 58 00 	call	0xb0	; 0xb0 <BUTTON_ReadValue>
		
		/*	BLUETOTH MODE	*/
		if (ButtonValue == BluetoothMode)
     90a:	8d 81       	ldd	r24, Y+5	; 0x05
     90c:	88 23       	and	r24, r24
     90e:	09 f0       	breq	.+2      	; 0x912 <__stack+0xb3>
     910:	04 c1       	rjmp	.+520    	; 0xb1a <__stack+0x2bb>
		{
			UART_ReceiveChar(&ReceiveValue);
     912:	ce 01       	movw	r24, r28
     914:	06 96       	adiw	r24, 0x06	; 6
     916:	0e 94 9c 0a 	call	0x1538	; 0x1538 <UART_ReceiveChar>
		    if(ReceiveValue>=48 && ReceiveValue<=57  && passwordSize!=3)
     91a:	8e 81       	ldd	r24, Y+6	; 0x06
     91c:	80 53       	subi	r24, 0x30	; 48
     91e:	8a 30       	cpi	r24, 0x0A	; 10
     920:	70 f4       	brcc	.+28     	; 0x93e <__stack+0xdf>
     922:	13 30       	cpi	r17, 0x03	; 3
     924:	61 f0       	breq	.+24     	; 0x93e <__stack+0xdf>
		    {
		  		TakenPassword[Index]=ReceiveValue-48;
     926:	e1 e0       	ldi	r30, 0x01	; 1
     928:	f0 e0       	ldi	r31, 0x00	; 0
     92a:	ec 0f       	add	r30, r28
     92c:	fd 1f       	adc	r31, r29
     92e:	e0 0f       	add	r30, r16
     930:	f1 1d       	adc	r31, r1
     932:	80 83       	st	Z, r24
		  		Index++;
     934:	0f 5f       	subi	r16, 0xFF	; 255
		  		passwordSize++;
     936:	1f 5f       	subi	r17, 0xFF	; 255
		  		LCD_sendChar('*');
     938:	8a e2       	ldi	r24, 0x2A	; 42
     93a:	0e 94 a2 08 	call	0x1144	; 0x1144 <LCD_sendChar>
		    }
		    
		    password =TakenPassword[0]*100+TakenPassword[1]*10+TakenPassword[2]*1;
     93e:	89 81       	ldd	r24, Y+1	; 0x01
     940:	2a 81       	ldd	r18, Y+2	; 0x02
     942:	4b 81       	ldd	r20, Y+3	; 0x03
		    
		    if(ReceiveValue == '=' && passwordSize ==3 )
     944:	9e 81       	ldd	r25, Y+6	; 0x06
     946:	9d 33       	cpi	r25, 0x3D	; 61
     948:	09 f0       	breq	.+2      	; 0x94c <__stack+0xed>
     94a:	9f c0       	rjmp	.+318    	; 0xa8a <__stack+0x22b>
     94c:	13 30       	cpi	r17, 0x03	; 3
     94e:	09 f0       	breq	.+2      	; 0x952 <__stack+0xf3>
     950:	9c c0       	rjmp	.+312    	; 0xa8a <__stack+0x22b>
		    {
		  		if(password==StoagePassword)
     952:	ec 81       	ldd	r30, Y+4	; 0x04
     954:	f0 e0       	ldi	r31, 0x00	; 0
		  		Index++;
		  		passwordSize++;
		  		LCD_sendChar('*');
		    }
		    
		    password =TakenPassword[0]*100+TakenPassword[1]*10+TakenPassword[2]*1;
     956:	90 e0       	ldi	r25, 0x00	; 0
     958:	8c 9d       	mul	r24, r12
     95a:	b0 01       	movw	r22, r0
     95c:	8d 9d       	mul	r24, r13
     95e:	70 0d       	add	r23, r0
     960:	9c 9d       	mul	r25, r12
     962:	70 0d       	add	r23, r0
     964:	11 24       	eor	r1, r1
     966:	82 2f       	mov	r24, r18
     968:	90 e0       	ldi	r25, 0x00	; 0
     96a:	88 0f       	add	r24, r24
     96c:	99 1f       	adc	r25, r25
     96e:	9c 01       	movw	r18, r24
     970:	22 0f       	add	r18, r18
     972:	33 1f       	adc	r19, r19
     974:	22 0f       	add	r18, r18
     976:	33 1f       	adc	r19, r19
     978:	82 0f       	add	r24, r18
     97a:	93 1f       	adc	r25, r19
     97c:	86 0f       	add	r24, r22
     97e:	97 1f       	adc	r25, r23
     980:	84 0f       	add	r24, r20
     982:	91 1d       	adc	r25, r1
		    
		    if(ReceiveValue == '=' && passwordSize ==3 )
		    {
		  		if(password==StoagePassword)
     984:	e8 17       	cp	r30, r24
     986:	f9 07       	cpc	r31, r25
     988:	51 f5       	brne	.+84     	; 0x9de <__stack+0x17f>
		  		{
		  			WrongCounter=2;
     98a:	92 e0       	ldi	r25, 0x02	; 2
     98c:	90 93 ab 00 	sts	0x00AB, r25
		  			LCD_sendComnd(LCD_GO_TO_2ND_LINE);
     990:	80 ec       	ldi	r24, 0xC0	; 192
     992:	0e 94 07 08 	call	0x100e	; 0x100e <LCD_sendComnd>
					LCD_SendString("                 ");
     996:	c1 01       	movw	r24, r2
     998:	0e 94 d8 08 	call	0x11b0	; 0x11b0 <LCD_SendString>
					LCD_GoToLocation(1,2);
     99c:	81 e0       	ldi	r24, 0x01	; 1
     99e:	62 e0       	ldi	r22, 0x02	; 2
     9a0:	0e 94 f4 08 	call	0x11e8	; 0x11e8 <LCD_GoToLocation>
					LCD_SendString("TRUE");
     9a4:	8c e8       	ldi	r24, 0x8C	; 140
     9a6:	90 e0       	ldi	r25, 0x00	; 0
     9a8:	0e 94 d8 08 	call	0x11b0	; 0x11b0 <LCD_SendString>
					SERVO_TurnON(Frequance,DutyCycle_90Angle);
     9ac:	82 e3       	ldi	r24, 0x32	; 50
     9ae:	90 e0       	ldi	r25, 0x00	; 0
     9b0:	40 e0       	ldi	r20, 0x00	; 0
     9b2:	50 e0       	ldi	r21, 0x00	; 0
     9b4:	60 e2       	ldi	r22, 0x20	; 32
     9b6:	71 e4       	ldi	r23, 0x41	; 65
     9b8:	0e 94 01 0a 	call	0x1402	; 0x1402 <SERVO_TurnON>
					LED_TurnOFF(WARNING_LED_PORT,WARNING_LED_PIN);
     9bc:	81 e0       	ldi	r24, 0x01	; 1
     9be:	65 e0       	ldi	r22, 0x05	; 5
     9c0:	0e 94 c3 09 	call	0x1386	; 0x1386 <LED_TurnOFF>
					LED_TurnOFF(NOK_LED_PORT,NOK_LED_PIN);
     9c4:	81 e0       	ldi	r24, 0x01	; 1
     9c6:	66 e0       	ldi	r22, 0x06	; 6
     9c8:	0e 94 c3 09 	call	0x1386	; 0x1386 <LED_TurnOFF>
					LED_TurnON(OK_LED_PORT,OK_LED_PIN);
     9cc:	81 e0       	ldi	r24, 0x01	; 1
     9ce:	67 e0       	ldi	r22, 0x07	; 7
     9d0:	0e 94 bb 09 	call	0x1376	; 0x1376 <LED_TurnON>
					RELAY_TurnOFF(RELAY_PORT,RELAY_PIN);
     9d4:	81 e0       	ldi	r24, 0x01	; 1
     9d6:	64 e0       	ldi	r22, 0x04	; 4
     9d8:	0e 94 e2 09 	call	0x13c4	; 0x13c4 <RELAY_TurnOFF>
     9dc:	56 c0       	rjmp	.+172    	; 0xa8a <__stack+0x22b>
				}
				else
				{
					if(WrongCounter>0)
     9de:	80 91 ab 00 	lds	r24, 0x00AB
     9e2:	88 23       	and	r24, r24
     9e4:	c9 f1       	breq	.+114    	; 0xa58 <__stack+0x1f9>
					{
						Index=0;
						passwordSize=0;
						LCD_sendComnd(LCD_GO_TO_2ND_LINE);
     9e6:	80 ec       	ldi	r24, 0xC0	; 192
     9e8:	0e 94 07 08 	call	0x100e	; 0x100e <LCD_sendComnd>
						LCD_SendString("Try Again [");
     9ec:	c4 01       	movw	r24, r8
     9ee:	0e 94 d8 08 	call	0x11b0	; 0x11b0 <LCD_SendString>
						LCD_SendIntegarNumber(WrongCounter);
     9f2:	80 91 ab 00 	lds	r24, 0x00AB
     9f6:	90 e0       	ldi	r25, 0x00	; 0
     9f8:	0e 94 17 09 	call	0x122e	; 0x122e <LCD_SendIntegarNumber>
						LCD_SendString("]");
     9fc:	c3 01       	movw	r24, r6
     9fe:	0e 94 d8 08 	call	0x11b0	; 0x11b0 <LCD_SendString>
						SERVO_TurnON(Frequance,DutyCycle_0Angle);
     a02:	82 e3       	ldi	r24, 0x32	; 50
     a04:	90 e0       	ldi	r25, 0x00	; 0
     a06:	40 e0       	ldi	r20, 0x00	; 0
     a08:	50 e0       	ldi	r21, 0x00	; 0
     a0a:	60 ef       	ldi	r22, 0xF0	; 240
     a0c:	70 e4       	ldi	r23, 0x40	; 64
     a0e:	0e 94 01 0a 	call	0x1402	; 0x1402 <SERVO_TurnON>
						LED_TurnOFF(OK_LED_PORT,OK_LED_PIN);
     a12:	81 e0       	ldi	r24, 0x01	; 1
     a14:	67 e0       	ldi	r22, 0x07	; 7
     a16:	0e 94 c3 09 	call	0x1386	; 0x1386 <LED_TurnOFF>
						LED_TurnOFF(NOK_LED_PORT,NOK_LED_PIN);
     a1a:	81 e0       	ldi	r24, 0x01	; 1
     a1c:	66 e0       	ldi	r22, 0x06	; 6
     a1e:	0e 94 c3 09 	call	0x1386	; 0x1386 <LED_TurnOFF>
						LED_TurnON(WARNING_LED_PORT,WARNING_LED_PIN);
     a22:	81 e0       	ldi	r24, 0x01	; 1
     a24:	65 e0       	ldi	r22, 0x05	; 5
     a26:	0e 94 bb 09 	call	0x1376	; 0x1376 <LED_TurnON>
						RELAY_TurnOFF(RELAY_PORT,RELAY_PIN);
     a2a:	81 e0       	ldi	r24, 0x01	; 1
     a2c:	64 e0       	ldi	r22, 0x04	; 4
     a2e:	0e 94 e2 09 	call	0x13c4	; 0x13c4 <RELAY_TurnOFF>
						LCD_GoToLocation(10,1);
     a32:	8a e0       	ldi	r24, 0x0A	; 10
     a34:	61 e0       	ldi	r22, 0x01	; 1
     a36:	0e 94 f4 08 	call	0x11e8	; 0x11e8 <LCD_GoToLocation>
						LCD_SendString("   ");
     a3a:	c2 01       	movw	r24, r4
     a3c:	0e 94 d8 08 	call	0x11b0	; 0x11b0 <LCD_SendString>
						LCD_GoToLocation(10,1);
     a40:	8a e0       	ldi	r24, 0x0A	; 10
     a42:	61 e0       	ldi	r22, 0x01	; 1
     a44:	0e 94 f4 08 	call	0x11e8	; 0x11e8 <LCD_GoToLocation>
						WrongCounter--;
     a48:	80 91 ab 00 	lds	r24, 0x00AB
     a4c:	81 50       	subi	r24, 0x01	; 1
     a4e:	80 93 ab 00 	sts	0x00AB, r24
				else
				{
					if(WrongCounter>0)
					{
						Index=0;
						passwordSize=0;
     a52:	10 e0       	ldi	r17, 0x00	; 0
				}
				else
				{
					if(WrongCounter>0)
					{
						Index=0;
     a54:	00 e0       	ldi	r16, 0x00	; 0
     a56:	19 c0       	rjmp	.+50     	; 0xa8a <__stack+0x22b>
						LCD_GoToLocation(10,1);
						WrongCounter--;
					}
					else
					{
						LCD_ClearDesplay();
     a58:	0e 94 e7 08 	call	0x11ce	; 0x11ce <LCD_ClearDesplay>
						LCD_GoToLocation(5,1);
     a5c:	85 e0       	ldi	r24, 0x05	; 5
     a5e:	61 e0       	ldi	r22, 0x01	; 1
     a60:	0e 94 f4 08 	call	0x11e8	; 0x11e8 <LCD_GoToLocation>
						LCD_SendString("WARMING");
     a64:	c5 01       	movw	r24, r10
     a66:	0e 94 d8 08 	call	0x11b0	; 0x11b0 <LCD_SendString>
						LED_TurnOFF(OK_LED_PORT,OK_LED_PIN);
     a6a:	81 e0       	ldi	r24, 0x01	; 1
     a6c:	67 e0       	ldi	r22, 0x07	; 7
     a6e:	0e 94 c3 09 	call	0x1386	; 0x1386 <LED_TurnOFF>
						LED_TurnON(NOK_LED_PORT,NOK_LED_PIN);
     a72:	81 e0       	ldi	r24, 0x01	; 1
     a74:	66 e0       	ldi	r22, 0x06	; 6
     a76:	0e 94 bb 09 	call	0x1376	; 0x1376 <LED_TurnON>
						LED_TurnOFF(WARNING_LED_PORT,WARNING_LED_PIN);
     a7a:	81 e0       	ldi	r24, 0x01	; 1
     a7c:	65 e0       	ldi	r22, 0x05	; 5
     a7e:	0e 94 c3 09 	call	0x1386	; 0x1386 <LED_TurnOFF>
						RELAY_TurnON(RELAY_PORT,RELAY_PIN);
     a82:	81 e0       	ldi	r24, 0x01	; 1
     a84:	64 e0       	ldi	r22, 0x04	; 4
     a86:	0e 94 da 09 	call	0x13b4	; 0x13b4 <RELAY_TurnON>
					}
				}
			}
			if(ReceiveValue== '#')
     a8a:	8e 81       	ldd	r24, Y+6	; 0x06
     a8c:	83 32       	cpi	r24, 0x23	; 35
     a8e:	09 f0       	breq	.+2      	; 0xa92 <__stack+0x233>
     a90:	34 cf       	rjmp	.-408    	; 0x8fa <__stack+0x9b>
			{
				if (WrongCounter==0)
     a92:	80 91 ab 00 	lds	r24, 0x00AB
     a96:	88 23       	and	r24, r24
     a98:	01 f5       	brne	.+64     	; 0xada <__stack+0x27b>
				{
					Index=0;
					passwordSize=0;
					LED_TurnOFF(OK_LED_PORT,OK_LED_PIN);
     a9a:	81 e0       	ldi	r24, 0x01	; 1
     a9c:	67 e0       	ldi	r22, 0x07	; 7
     a9e:	0e 94 c3 09 	call	0x1386	; 0x1386 <LED_TurnOFF>
					LED_TurnON(NOK_LED_PORT,NOK_LED_PIN);
     aa2:	81 e0       	ldi	r24, 0x01	; 1
     aa4:	66 e0       	ldi	r22, 0x06	; 6
     aa6:	0e 94 bb 09 	call	0x1376	; 0x1376 <LED_TurnON>
					LED_TurnOFF(WARNING_LED_PORT,WARNING_LED_PIN);
     aaa:	81 e0       	ldi	r24, 0x01	; 1
     aac:	65 e0       	ldi	r22, 0x05	; 5
     aae:	0e 94 c3 09 	call	0x1386	; 0x1386 <LED_TurnOFF>
					RELAY_TurnON(RELAY_PORT,RELAY_PIN);
     ab2:	81 e0       	ldi	r24, 0x01	; 1
     ab4:	64 e0       	ldi	r22, 0x04	; 4
     ab6:	0e 94 da 09 	call	0x13b4	; 0x13b4 <RELAY_TurnON>
					SERVO_TurnON(Frequance,DutyCycle_0Angle);
     aba:	82 e3       	ldi	r24, 0x32	; 50
     abc:	90 e0       	ldi	r25, 0x00	; 0
     abe:	40 e0       	ldi	r20, 0x00	; 0
     ac0:	50 e0       	ldi	r21, 0x00	; 0
     ac2:	60 ef       	ldi	r22, 0xF0	; 240
     ac4:	70 e4       	ldi	r23, 0x40	; 64
     ac6:	0e 94 01 0a 	call	0x1402	; 0x1402 <SERVO_TurnON>
					LCD_ClearDesplay();
     aca:	0e 94 e7 08 	call	0x11ce	; 0x11ce <LCD_ClearDesplay>
					LCD_SendString("PASSWORD:");
     ace:	c7 01       	movw	r24, r14
     ad0:	0e 94 d8 08 	call	0x11b0	; 0x11b0 <LCD_SendString>
			if(ReceiveValue== '#')
			{
				if (WrongCounter==0)
				{
					Index=0;
					passwordSize=0;
     ad4:	10 e0       	ldi	r17, 0x00	; 0
			}
			if(ReceiveValue== '#')
			{
				if (WrongCounter==0)
				{
					Index=0;
     ad6:	00 e0       	ldi	r16, 0x00	; 0
     ad8:	10 cf       	rjmp	.-480    	; 0x8fa <__stack+0x9b>
				}
			    else
			    {
					Index=0;
					passwordSize=0;
					LED_TurnOFF(OK_LED_PORT,OK_LED_PIN);
     ada:	81 e0       	ldi	r24, 0x01	; 1
     adc:	67 e0       	ldi	r22, 0x07	; 7
     ade:	0e 94 c3 09 	call	0x1386	; 0x1386 <LED_TurnOFF>
					LED_TurnOFF(NOK_LED_PORT,NOK_LED_PIN);
     ae2:	81 e0       	ldi	r24, 0x01	; 1
     ae4:	66 e0       	ldi	r22, 0x06	; 6
     ae6:	0e 94 c3 09 	call	0x1386	; 0x1386 <LED_TurnOFF>
					LED_TurnOFF(WARNING_LED_PORT,WARNING_LED_PIN);
     aea:	81 e0       	ldi	r24, 0x01	; 1
     aec:	65 e0       	ldi	r22, 0x05	; 5
     aee:	0e 94 c3 09 	call	0x1386	; 0x1386 <LED_TurnOFF>
					RELAY_TurnOFF(RELAY_PORT,RELAY_PIN);
     af2:	81 e0       	ldi	r24, 0x01	; 1
     af4:	64 e0       	ldi	r22, 0x04	; 4
     af6:	0e 94 e2 09 	call	0x13c4	; 0x13c4 <RELAY_TurnOFF>
					SERVO_TurnON(Frequance,DutyCycle_0Angle);
     afa:	82 e3       	ldi	r24, 0x32	; 50
     afc:	90 e0       	ldi	r25, 0x00	; 0
     afe:	40 e0       	ldi	r20, 0x00	; 0
     b00:	50 e0       	ldi	r21, 0x00	; 0
     b02:	60 ef       	ldi	r22, 0xF0	; 240
     b04:	70 e4       	ldi	r23, 0x40	; 64
     b06:	0e 94 01 0a 	call	0x1402	; 0x1402 <SERVO_TurnON>
					LCD_ClearDesplay();
     b0a:	0e 94 e7 08 	call	0x11ce	; 0x11ce <LCD_ClearDesplay>
					LCD_SendString("PASSWORD:");  
     b0e:	c7 01       	movw	r24, r14
     b10:	0e 94 d8 08 	call	0x11b0	; 0x11b0 <LCD_SendString>
					LCD_SendString("PASSWORD:");
				}
			    else
			    {
					Index=0;
					passwordSize=0;
     b14:	10 e0       	ldi	r17, 0x00	; 0
					LCD_ClearDesplay();
					LCD_SendString("PASSWORD:");
				}
			    else
			    {
					Index=0;
     b16:	00 e0       	ldi	r16, 0x00	; 0
     b18:	f0 ce       	rjmp	.-544    	; 0x8fa <__stack+0x9b>
		}
		
		/*	KEYPAD MODE	*/
		else 
		{
			KEYPAD_GetValue(&KeypadValue);
     b1a:	ce 01       	movw	r24, r28
     b1c:	07 96       	adiw	r24, 0x07	; 7
     b1e:	0e 94 0e 07 	call	0xe1c	; 0xe1c <KEYPAD_GetValue>
			if(KEYPAD_NOT_PRESSED!=KeypadValue)
     b22:	8f 81       	ldd	r24, Y+7	; 0x07
     b24:	8f 3f       	cpi	r24, 0xFF	; 255
     b26:	09 f4       	brne	.+2      	; 0xb2a <__stack+0x2cb>
     b28:	e8 ce       	rjmp	.-560    	; 0x8fa <__stack+0x9b>
			{
				if(KeypadValue!= '*' && KeypadValue!= '/' && KeypadValue!= '-' && KeypadValue!= '+' && KeypadValue!= '=' && KeypadValue!= '#' && passwordSize!=3)
     b2a:	8a 32       	cpi	r24, 0x2A	; 42
     b2c:	09 f4       	brne	.+2      	; 0xb30 <__stack+0x2d1>
     b2e:	e5 ce       	rjmp	.-566    	; 0x8fa <__stack+0x9b>
     b30:	8f 32       	cpi	r24, 0x2F	; 47
     b32:	09 f4       	brne	.+2      	; 0xb36 <__stack+0x2d7>
     b34:	e2 ce       	rjmp	.-572    	; 0x8fa <__stack+0x9b>
     b36:	8d 32       	cpi	r24, 0x2D	; 45
     b38:	09 f4       	brne	.+2      	; 0xb3c <__stack+0x2dd>
     b3a:	df ce       	rjmp	.-578    	; 0x8fa <__stack+0x9b>
     b3c:	8b 32       	cpi	r24, 0x2B	; 43
     b3e:	09 f4       	brne	.+2      	; 0xb42 <__stack+0x2e3>
     b40:	dc ce       	rjmp	.-584    	; 0x8fa <__stack+0x9b>
     b42:	8d 33       	cpi	r24, 0x3D	; 61
     b44:	09 f4       	brne	.+2      	; 0xb48 <__stack+0x2e9>
     b46:	01 c1       	rjmp	.+514    	; 0xd4a <__stack+0x4eb>
     b48:	83 32       	cpi	r24, 0x23	; 35
     b4a:	09 f4       	brne	.+2      	; 0xb4e <__stack+0x2ef>
     b4c:	ba c0       	rjmp	.+372    	; 0xcc2 <__stack+0x463>
     b4e:	13 30       	cpi	r17, 0x03	; 3
     b50:	09 f4       	brne	.+2      	; 0xb54 <__stack+0x2f5>
     b52:	d3 ce       	rjmp	.-602    	; 0x8fa <__stack+0x9b>
				{
					TakenPassword[Index]=KeypadValue;
     b54:	e1 e0       	ldi	r30, 0x01	; 1
     b56:	f0 e0       	ldi	r31, 0x00	; 0
     b58:	ec 0f       	add	r30, r28
     b5a:	fd 1f       	adc	r31, r29
     b5c:	e0 0f       	add	r30, r16
     b5e:	f1 1d       	adc	r31, r1
     b60:	80 83       	st	Z, r24
					Index++;
     b62:	0f 5f       	subi	r16, 0xFF	; 255
					passwordSize++;
     b64:	1f 5f       	subi	r17, 0xFF	; 255
					LCD_sendChar('*');
     b66:	8a e2       	ldi	r24, 0x2A	; 42
     b68:	0e 94 a2 08 	call	0x1144	; 0x1144 <LCD_sendChar>
				}
				
				password =TakenPassword[0]*100+TakenPassword[1]*10+TakenPassword[2]*1;
     b6c:	89 81       	ldd	r24, Y+1	; 0x01
     b6e:	2a 81       	ldd	r18, Y+2	; 0x02
     b70:	6b 81       	ldd	r22, Y+3	; 0x03
				
				if(KeypadValue== '=' && passwordSize ==3)
     b72:	9f 81       	ldd	r25, Y+7	; 0x07
     b74:	9d 33       	cpi	r25, 0x3D	; 61
     b76:	09 f0       	breq	.+2      	; 0xb7a <__stack+0x31b>
     b78:	a0 c0       	rjmp	.+320    	; 0xcba <__stack+0x45b>
					Index++;
					passwordSize++;
					LCD_sendChar('*');
				}
				
				password =TakenPassword[0]*100+TakenPassword[1]*10+TakenPassword[2]*1;
     b7a:	90 e0       	ldi	r25, 0x00	; 0
     b7c:	8c 9d       	mul	r24, r12
     b7e:	a0 01       	movw	r20, r0
     b80:	8d 9d       	mul	r24, r13
     b82:	50 0d       	add	r21, r0
     b84:	9c 9d       	mul	r25, r12
     b86:	50 0d       	add	r21, r0
     b88:	11 24       	eor	r1, r1
     b8a:	82 2f       	mov	r24, r18
     b8c:	90 e0       	ldi	r25, 0x00	; 0
     b8e:	88 0f       	add	r24, r24
     b90:	99 1f       	adc	r25, r25
     b92:	9c 01       	movw	r18, r24
     b94:	22 0f       	add	r18, r18
     b96:	33 1f       	adc	r19, r19
     b98:	22 0f       	add	r18, r18
     b9a:	33 1f       	adc	r19, r19
     b9c:	82 0f       	add	r24, r18
     b9e:	93 1f       	adc	r25, r19
     ba0:	84 0f       	add	r24, r20
     ba2:	95 1f       	adc	r25, r21
     ba4:	9c 01       	movw	r18, r24
     ba6:	26 0f       	add	r18, r22
     ba8:	31 1d       	adc	r19, r1
				
				if(KeypadValue== '=' && passwordSize ==3)
     baa:	13 30       	cpi	r17, 0x03	; 3
     bac:	09 f0       	breq	.+2      	; 0xbb0 <__stack+0x351>
     bae:	85 c0       	rjmp	.+266    	; 0xcba <__stack+0x45b>
				{
					 if(password==StoagePassword)
     bb0:	8c 81       	ldd	r24, Y+4	; 0x04
     bb2:	90 e0       	ldi	r25, 0x00	; 0
     bb4:	82 17       	cp	r24, r18
     bb6:	93 07       	cpc	r25, r19
     bb8:	51 f5       	brne	.+84     	; 0xc0e <__stack+0x3af>
					 {
						 WrongCounter=2;
     bba:	a2 e0       	ldi	r26, 0x02	; 2
     bbc:	a0 93 ab 00 	sts	0x00AB, r26
						 LCD_sendComnd(LCD_GO_TO_2ND_LINE);
     bc0:	80 ec       	ldi	r24, 0xC0	; 192
     bc2:	0e 94 07 08 	call	0x100e	; 0x100e <LCD_sendComnd>
						 LCD_SendString("                 ");
     bc6:	c1 01       	movw	r24, r2
     bc8:	0e 94 d8 08 	call	0x11b0	; 0x11b0 <LCD_SendString>
						 LCD_GoToLocation(1,2);
     bcc:	81 e0       	ldi	r24, 0x01	; 1
     bce:	62 e0       	ldi	r22, 0x02	; 2
     bd0:	0e 94 f4 08 	call	0x11e8	; 0x11e8 <LCD_GoToLocation>
						 LCD_SendString("TRUE");
     bd4:	8c e8       	ldi	r24, 0x8C	; 140
     bd6:	90 e0       	ldi	r25, 0x00	; 0
     bd8:	0e 94 d8 08 	call	0x11b0	; 0x11b0 <LCD_SendString>
						 SERVO_TurnON(Frequance,DutyCycle_90Angle);
     bdc:	82 e3       	ldi	r24, 0x32	; 50
     bde:	90 e0       	ldi	r25, 0x00	; 0
     be0:	40 e0       	ldi	r20, 0x00	; 0
     be2:	50 e0       	ldi	r21, 0x00	; 0
     be4:	60 e2       	ldi	r22, 0x20	; 32
     be6:	71 e4       	ldi	r23, 0x41	; 65
     be8:	0e 94 01 0a 	call	0x1402	; 0x1402 <SERVO_TurnON>
						 LED_TurnOFF(WARNING_LED_PORT,WARNING_LED_PIN);
     bec:	81 e0       	ldi	r24, 0x01	; 1
     bee:	65 e0       	ldi	r22, 0x05	; 5
     bf0:	0e 94 c3 09 	call	0x1386	; 0x1386 <LED_TurnOFF>
						 LED_TurnOFF(NOK_LED_PORT,NOK_LED_PIN);
     bf4:	81 e0       	ldi	r24, 0x01	; 1
     bf6:	66 e0       	ldi	r22, 0x06	; 6
     bf8:	0e 94 c3 09 	call	0x1386	; 0x1386 <LED_TurnOFF>
						 LED_TurnON(OK_LED_PORT,OK_LED_PIN);
     bfc:	81 e0       	ldi	r24, 0x01	; 1
     bfe:	67 e0       	ldi	r22, 0x07	; 7
     c00:	0e 94 bb 09 	call	0x1376	; 0x1376 <LED_TurnON>
						 RELAY_TurnOFF(RELAY_PORT,RELAY_PIN);
     c04:	81 e0       	ldi	r24, 0x01	; 1
     c06:	64 e0       	ldi	r22, 0x04	; 4
     c08:	0e 94 e2 09 	call	0x13c4	; 0x13c4 <RELAY_TurnOFF>
     c0c:	56 c0       	rjmp	.+172    	; 0xcba <__stack+0x45b>
					 }
					 else
					 {
						 if(WrongCounter>0)
     c0e:	80 91 ab 00 	lds	r24, 0x00AB
     c12:	88 23       	and	r24, r24
     c14:	c9 f1       	breq	.+114    	; 0xc88 <__stack+0x429>
						 {
							 Index=0;
							 passwordSize=0;
							 LCD_sendComnd(LCD_GO_TO_2ND_LINE);
     c16:	80 ec       	ldi	r24, 0xC0	; 192
     c18:	0e 94 07 08 	call	0x100e	; 0x100e <LCD_sendComnd>
							 LCD_SendString("Try Again [");
     c1c:	c4 01       	movw	r24, r8
     c1e:	0e 94 d8 08 	call	0x11b0	; 0x11b0 <LCD_SendString>
							 LCD_SendIntegarNumber(WrongCounter);
     c22:	80 91 ab 00 	lds	r24, 0x00AB
     c26:	90 e0       	ldi	r25, 0x00	; 0
     c28:	0e 94 17 09 	call	0x122e	; 0x122e <LCD_SendIntegarNumber>
							 LCD_SendString("]");
     c2c:	c3 01       	movw	r24, r6
     c2e:	0e 94 d8 08 	call	0x11b0	; 0x11b0 <LCD_SendString>
							 SERVO_TurnON(Frequance,DutyCycle_0Angle);
     c32:	82 e3       	ldi	r24, 0x32	; 50
     c34:	90 e0       	ldi	r25, 0x00	; 0
     c36:	40 e0       	ldi	r20, 0x00	; 0
     c38:	50 e0       	ldi	r21, 0x00	; 0
     c3a:	60 ef       	ldi	r22, 0xF0	; 240
     c3c:	70 e4       	ldi	r23, 0x40	; 64
     c3e:	0e 94 01 0a 	call	0x1402	; 0x1402 <SERVO_TurnON>
							 LED_TurnOFF(OK_LED_PORT,OK_LED_PIN);
     c42:	81 e0       	ldi	r24, 0x01	; 1
     c44:	67 e0       	ldi	r22, 0x07	; 7
     c46:	0e 94 c3 09 	call	0x1386	; 0x1386 <LED_TurnOFF>
							 LED_TurnOFF(NOK_LED_PORT,NOK_LED_PIN);
     c4a:	81 e0       	ldi	r24, 0x01	; 1
     c4c:	66 e0       	ldi	r22, 0x06	; 6
     c4e:	0e 94 c3 09 	call	0x1386	; 0x1386 <LED_TurnOFF>
							 LED_TurnON(WARNING_LED_PORT,WARNING_LED_PIN);
     c52:	81 e0       	ldi	r24, 0x01	; 1
     c54:	65 e0       	ldi	r22, 0x05	; 5
     c56:	0e 94 bb 09 	call	0x1376	; 0x1376 <LED_TurnON>
							 RELAY_TurnOFF(RELAY_PORT,RELAY_PIN);
     c5a:	81 e0       	ldi	r24, 0x01	; 1
     c5c:	64 e0       	ldi	r22, 0x04	; 4
     c5e:	0e 94 e2 09 	call	0x13c4	; 0x13c4 <RELAY_TurnOFF>
							 LCD_GoToLocation(10,1);
     c62:	8a e0       	ldi	r24, 0x0A	; 10
     c64:	61 e0       	ldi	r22, 0x01	; 1
     c66:	0e 94 f4 08 	call	0x11e8	; 0x11e8 <LCD_GoToLocation>
							 LCD_SendString("   ");
     c6a:	c2 01       	movw	r24, r4
     c6c:	0e 94 d8 08 	call	0x11b0	; 0x11b0 <LCD_SendString>
							 LCD_GoToLocation(10,1);
     c70:	8a e0       	ldi	r24, 0x0A	; 10
     c72:	61 e0       	ldi	r22, 0x01	; 1
     c74:	0e 94 f4 08 	call	0x11e8	; 0x11e8 <LCD_GoToLocation>
							 WrongCounter--;
     c78:	80 91 ab 00 	lds	r24, 0x00AB
     c7c:	81 50       	subi	r24, 0x01	; 1
     c7e:	80 93 ab 00 	sts	0x00AB, r24
					 else
					 {
						 if(WrongCounter>0)
						 {
							 Index=0;
							 passwordSize=0;
     c82:	10 e0       	ldi	r17, 0x00	; 0
					 }
					 else
					 {
						 if(WrongCounter>0)
						 {
							 Index=0;
     c84:	00 e0       	ldi	r16, 0x00	; 0
     c86:	19 c0       	rjmp	.+50     	; 0xcba <__stack+0x45b>
							 LCD_GoToLocation(10,1);
							 WrongCounter--;
						 }
						 else
						 {
							 LCD_ClearDesplay();
     c88:	0e 94 e7 08 	call	0x11ce	; 0x11ce <LCD_ClearDesplay>
							 LCD_GoToLocation(5,1);
     c8c:	85 e0       	ldi	r24, 0x05	; 5
     c8e:	61 e0       	ldi	r22, 0x01	; 1
     c90:	0e 94 f4 08 	call	0x11e8	; 0x11e8 <LCD_GoToLocation>
							 LCD_SendString("WARMING");
     c94:	c5 01       	movw	r24, r10
     c96:	0e 94 d8 08 	call	0x11b0	; 0x11b0 <LCD_SendString>
							 LED_TurnOFF(OK_LED_PORT,OK_LED_PIN);
     c9a:	81 e0       	ldi	r24, 0x01	; 1
     c9c:	67 e0       	ldi	r22, 0x07	; 7
     c9e:	0e 94 c3 09 	call	0x1386	; 0x1386 <LED_TurnOFF>
							 LED_TurnON(NOK_LED_PORT,NOK_LED_PIN);
     ca2:	81 e0       	ldi	r24, 0x01	; 1
     ca4:	66 e0       	ldi	r22, 0x06	; 6
     ca6:	0e 94 bb 09 	call	0x1376	; 0x1376 <LED_TurnON>
							 LED_TurnOFF(WARNING_LED_PORT,WARNING_LED_PIN);
     caa:	81 e0       	ldi	r24, 0x01	; 1
     cac:	65 e0       	ldi	r22, 0x05	; 5
     cae:	0e 94 c3 09 	call	0x1386	; 0x1386 <LED_TurnOFF>
							 RELAY_TurnON(RELAY_PORT,RELAY_PIN);
     cb2:	81 e0       	ldi	r24, 0x01	; 1
     cb4:	64 e0       	ldi	r22, 0x04	; 4
     cb6:	0e 94 da 09 	call	0x13b4	; 0x13b4 <RELAY_TurnON>
						 }
					 }
				}
				if(KeypadValue== '#')
     cba:	8f 81       	ldd	r24, Y+7	; 0x07
     cbc:	83 32       	cpi	r24, 0x23	; 35
     cbe:	09 f0       	breq	.+2      	; 0xcc2 <__stack+0x463>
     cc0:	1c ce       	rjmp	.-968    	; 0x8fa <__stack+0x9b>
				{
					if (WrongCounter==0)
     cc2:	80 91 ab 00 	lds	r24, 0x00AB
     cc6:	88 23       	and	r24, r24
     cc8:	01 f5       	brne	.+64     	; 0xd0a <__stack+0x4ab>
					{
						Index=0;
						passwordSize=0;
						LED_TurnOFF(OK_LED_PORT,OK_LED_PIN);
     cca:	81 e0       	ldi	r24, 0x01	; 1
     ccc:	67 e0       	ldi	r22, 0x07	; 7
     cce:	0e 94 c3 09 	call	0x1386	; 0x1386 <LED_TurnOFF>
						LED_TurnON(NOK_LED_PORT,NOK_LED_PIN);
     cd2:	81 e0       	ldi	r24, 0x01	; 1
     cd4:	66 e0       	ldi	r22, 0x06	; 6
     cd6:	0e 94 bb 09 	call	0x1376	; 0x1376 <LED_TurnON>
						LED_TurnOFF(WARNING_LED_PORT,WARNING_LED_PIN);
     cda:	81 e0       	ldi	r24, 0x01	; 1
     cdc:	65 e0       	ldi	r22, 0x05	; 5
     cde:	0e 94 c3 09 	call	0x1386	; 0x1386 <LED_TurnOFF>
						RELAY_TurnON(RELAY_PORT,RELAY_PIN);
     ce2:	81 e0       	ldi	r24, 0x01	; 1
     ce4:	64 e0       	ldi	r22, 0x04	; 4
     ce6:	0e 94 da 09 	call	0x13b4	; 0x13b4 <RELAY_TurnON>
						SERVO_TurnON(Frequance,DutyCycle_0Angle);
     cea:	82 e3       	ldi	r24, 0x32	; 50
     cec:	90 e0       	ldi	r25, 0x00	; 0
     cee:	40 e0       	ldi	r20, 0x00	; 0
     cf0:	50 e0       	ldi	r21, 0x00	; 0
     cf2:	60 ef       	ldi	r22, 0xF0	; 240
     cf4:	70 e4       	ldi	r23, 0x40	; 64
     cf6:	0e 94 01 0a 	call	0x1402	; 0x1402 <SERVO_TurnON>
						LCD_ClearDesplay();
     cfa:	0e 94 e7 08 	call	0x11ce	; 0x11ce <LCD_ClearDesplay>
						LCD_SendString("PASSWORD:");
     cfe:	c7 01       	movw	r24, r14
     d00:	0e 94 d8 08 	call	0x11b0	; 0x11b0 <LCD_SendString>
				if(KeypadValue== '#')
				{
					if (WrongCounter==0)
					{
						Index=0;
						passwordSize=0;
     d04:	10 e0       	ldi	r17, 0x00	; 0
				}
				if(KeypadValue== '#')
				{
					if (WrongCounter==0)
					{
						Index=0;
     d06:	00 e0       	ldi	r16, 0x00	; 0
     d08:	f8 cd       	rjmp	.-1040   	; 0x8fa <__stack+0x9b>
					}
					else
					{
						Index=0;
						passwordSize=0;
						LED_TurnOFF(OK_LED_PORT,OK_LED_PIN);
     d0a:	81 e0       	ldi	r24, 0x01	; 1
     d0c:	67 e0       	ldi	r22, 0x07	; 7
     d0e:	0e 94 c3 09 	call	0x1386	; 0x1386 <LED_TurnOFF>
						LED_TurnOFF(NOK_LED_PORT,NOK_LED_PIN);
     d12:	81 e0       	ldi	r24, 0x01	; 1
     d14:	66 e0       	ldi	r22, 0x06	; 6
     d16:	0e 94 c3 09 	call	0x1386	; 0x1386 <LED_TurnOFF>
						LED_TurnOFF(WARNING_LED_PORT,WARNING_LED_PIN);
     d1a:	81 e0       	ldi	r24, 0x01	; 1
     d1c:	65 e0       	ldi	r22, 0x05	; 5
     d1e:	0e 94 c3 09 	call	0x1386	; 0x1386 <LED_TurnOFF>
						RELAY_TurnOFF(RELAY_PORT,RELAY_PIN);
     d22:	81 e0       	ldi	r24, 0x01	; 1
     d24:	64 e0       	ldi	r22, 0x04	; 4
     d26:	0e 94 e2 09 	call	0x13c4	; 0x13c4 <RELAY_TurnOFF>
						SERVO_TurnON(Frequance,DutyCycle_0Angle);
     d2a:	82 e3       	ldi	r24, 0x32	; 50
     d2c:	90 e0       	ldi	r25, 0x00	; 0
     d2e:	40 e0       	ldi	r20, 0x00	; 0
     d30:	50 e0       	ldi	r21, 0x00	; 0
     d32:	60 ef       	ldi	r22, 0xF0	; 240
     d34:	70 e4       	ldi	r23, 0x40	; 64
     d36:	0e 94 01 0a 	call	0x1402	; 0x1402 <SERVO_TurnON>
						LCD_ClearDesplay();
     d3a:	0e 94 e7 08 	call	0x11ce	; 0x11ce <LCD_ClearDesplay>
						LCD_SendString("PASSWORD:");
     d3e:	c7 01       	movw	r24, r14
     d40:	0e 94 d8 08 	call	0x11b0	; 0x11b0 <LCD_SendString>
						LCD_SendString("PASSWORD:");
					}
					else
					{
						Index=0;
						passwordSize=0;
     d44:	10 e0       	ldi	r17, 0x00	; 0
						LCD_ClearDesplay();
						LCD_SendString("PASSWORD:");
					}
					else
					{
						Index=0;
     d46:	00 e0       	ldi	r16, 0x00	; 0
     d48:	d8 cd       	rjmp	.-1104   	; 0x8fa <__stack+0x9b>
					Index++;
					passwordSize++;
					LCD_sendChar('*');
				}
				
				password =TakenPassword[0]*100+TakenPassword[1]*10+TakenPassword[2]*1;
     d4a:	89 81       	ldd	r24, Y+1	; 0x01
     d4c:	90 e0       	ldi	r25, 0x00	; 0
     d4e:	8c 9d       	mul	r24, r12
     d50:	a0 01       	movw	r20, r0
     d52:	8d 9d       	mul	r24, r13
     d54:	50 0d       	add	r21, r0
     d56:	9c 9d       	mul	r25, r12
     d58:	50 0d       	add	r21, r0
     d5a:	11 24       	eor	r1, r1
     d5c:	8a 81       	ldd	r24, Y+2	; 0x02
     d5e:	90 e0       	ldi	r25, 0x00	; 0
     d60:	88 0f       	add	r24, r24
     d62:	99 1f       	adc	r25, r25
     d64:	9c 01       	movw	r18, r24
     d66:	22 0f       	add	r18, r18
     d68:	33 1f       	adc	r19, r19
     d6a:	22 0f       	add	r18, r18
     d6c:	33 1f       	adc	r19, r19
     d6e:	82 0f       	add	r24, r18
     d70:	93 1f       	adc	r25, r19
     d72:	84 0f       	add	r24, r20
     d74:	95 1f       	adc	r25, r21
     d76:	2b 81       	ldd	r18, Y+3	; 0x03
     d78:	ac 01       	movw	r20, r24
     d7a:	42 0f       	add	r20, r18
     d7c:	51 1d       	adc	r21, r1
     d7e:	9a 01       	movw	r18, r20
     d80:	14 cf       	rjmp	.-472    	; 0xbaa <__stack+0x34b>

00000d82 <KEYPAD_init>:
     d82:	80 e0       	ldi	r24, 0x00	; 0
     d84:	60 e0       	ldi	r22, 0x00	; 0
     d86:	40 e0       	ldi	r20, 0x00	; 0
     d88:	0e 94 5f 00 	call	0xbe	; 0xbe <DIO_SetPinDirection>
     d8c:	80 e0       	ldi	r24, 0x00	; 0
     d8e:	61 e0       	ldi	r22, 0x01	; 1
     d90:	40 e0       	ldi	r20, 0x00	; 0
     d92:	0e 94 5f 00 	call	0xbe	; 0xbe <DIO_SetPinDirection>
     d96:	80 e0       	ldi	r24, 0x00	; 0
     d98:	62 e0       	ldi	r22, 0x02	; 2
     d9a:	40 e0       	ldi	r20, 0x00	; 0
     d9c:	0e 94 5f 00 	call	0xbe	; 0xbe <DIO_SetPinDirection>
     da0:	80 e0       	ldi	r24, 0x00	; 0
     da2:	63 e0       	ldi	r22, 0x03	; 3
     da4:	40 e0       	ldi	r20, 0x00	; 0
     da6:	0e 94 5f 00 	call	0xbe	; 0xbe <DIO_SetPinDirection>
     daa:	82 e0       	ldi	r24, 0x02	; 2
     dac:	64 e0       	ldi	r22, 0x04	; 4
     dae:	4f ef       	ldi	r20, 0xFF	; 255
     db0:	0e 94 5f 00 	call	0xbe	; 0xbe <DIO_SetPinDirection>
     db4:	82 e0       	ldi	r24, 0x02	; 2
     db6:	65 e0       	ldi	r22, 0x05	; 5
     db8:	4f ef       	ldi	r20, 0xFF	; 255
     dba:	0e 94 5f 00 	call	0xbe	; 0xbe <DIO_SetPinDirection>
     dbe:	82 e0       	ldi	r24, 0x02	; 2
     dc0:	66 e0       	ldi	r22, 0x06	; 6
     dc2:	4f ef       	ldi	r20, 0xFF	; 255
     dc4:	0e 94 5f 00 	call	0xbe	; 0xbe <DIO_SetPinDirection>
     dc8:	82 e0       	ldi	r24, 0x02	; 2
     dca:	67 e0       	ldi	r22, 0x07	; 7
     dcc:	4f ef       	ldi	r20, 0xFF	; 255
     dce:	0e 94 5f 00 	call	0xbe	; 0xbe <DIO_SetPinDirection>
     dd2:	82 e0       	ldi	r24, 0x02	; 2
     dd4:	64 e0       	ldi	r22, 0x04	; 4
     dd6:	41 e0       	ldi	r20, 0x01	; 1
     dd8:	0e 94 5f 00 	call	0xbe	; 0xbe <DIO_SetPinDirection>
     ddc:	82 e0       	ldi	r24, 0x02	; 2
     dde:	65 e0       	ldi	r22, 0x05	; 5
     de0:	41 e0       	ldi	r20, 0x01	; 1
     de2:	0e 94 5f 00 	call	0xbe	; 0xbe <DIO_SetPinDirection>
     de6:	82 e0       	ldi	r24, 0x02	; 2
     de8:	66 e0       	ldi	r22, 0x06	; 6
     dea:	41 e0       	ldi	r20, 0x01	; 1
     dec:	0e 94 5f 00 	call	0xbe	; 0xbe <DIO_SetPinDirection>
     df0:	82 e0       	ldi	r24, 0x02	; 2
     df2:	67 e0       	ldi	r22, 0x07	; 7
     df4:	41 e0       	ldi	r20, 0x01	; 1
     df6:	0e 94 5f 00 	call	0xbe	; 0xbe <DIO_SetPinDirection>
     dfa:	80 e0       	ldi	r24, 0x00	; 0
     dfc:	60 e0       	ldi	r22, 0x00	; 0
     dfe:	0e 94 2d 02 	call	0x45a	; 0x45a <DIO_activePinInPullUpResistance>
     e02:	80 e0       	ldi	r24, 0x00	; 0
     e04:	61 e0       	ldi	r22, 0x01	; 1
     e06:	0e 94 2d 02 	call	0x45a	; 0x45a <DIO_activePinInPullUpResistance>
     e0a:	80 e0       	ldi	r24, 0x00	; 0
     e0c:	62 e0       	ldi	r22, 0x02	; 2
     e0e:	0e 94 2d 02 	call	0x45a	; 0x45a <DIO_activePinInPullUpResistance>
     e12:	80 e0       	ldi	r24, 0x00	; 0
     e14:	63 e0       	ldi	r22, 0x03	; 3
     e16:	0e 94 2d 02 	call	0x45a	; 0x45a <DIO_activePinInPullUpResistance>
     e1a:	08 95       	ret

00000e1c <KEYPAD_GetValue>:
     e1c:	2f 92       	push	r2
     e1e:	3f 92       	push	r3
     e20:	4f 92       	push	r4
     e22:	5f 92       	push	r5
     e24:	6f 92       	push	r6
     e26:	7f 92       	push	r7
     e28:	9f 92       	push	r9
     e2a:	af 92       	push	r10
     e2c:	bf 92       	push	r11
     e2e:	cf 92       	push	r12
     e30:	df 92       	push	r13
     e32:	ef 92       	push	r14
     e34:	ff 92       	push	r15
     e36:	0f 93       	push	r16
     e38:	1f 93       	push	r17
     e3a:	cf 93       	push	r28
     e3c:	df 93       	push	r29
     e3e:	cd b7       	in	r28, 0x3d	; 61
     e40:	de b7       	in	r29, 0x3e	; 62
     e42:	a1 97       	sbiw	r28, 0x21	; 33
     e44:	0f b6       	in	r0, 0x3f	; 63
     e46:	f8 94       	cli
     e48:	de bf       	out	0x3e, r29	; 62
     e4a:	0f be       	out	0x3f, r0	; 63
     e4c:	cd bf       	out	0x3d, r28	; 61
     e4e:	99 a3       	lds	r25, 0x59
     e50:	88 a3       	lds	r24, 0x58
     e52:	00 97       	sbiw	r24, 0x00	; 0
     e54:	09 f4       	brne	.+2      	; 0xe58 <KEYPAD_GetValue+0x3c>
     e56:	83 c0       	rjmp	.+262    	; 0xf5e <KEYPAD_GetValue+0x142>
     e58:	8f ef       	ldi	r24, 0xFF	; 255
     e5a:	e8 a1       	lds	r30, 0x48
     e5c:	f9 a1       	lds	r31, 0x49
     e5e:	80 83       	st	Z, r24
     e60:	82 e0       	ldi	r24, 0x02	; 2
     e62:	8a 87       	std	Y+10, r24	; 0x0a
     e64:	8b 87       	std	Y+11, r24	; 0x0b
     e66:	8c 87       	std	Y+12, r24	; 0x0c
     e68:	8d 87       	std	Y+13, r24	; 0x0d
     e6a:	94 e0       	ldi	r25, 0x04	; 4
     e6c:	9e 83       	std	Y+6, r25	; 0x06
     e6e:	95 e0       	ldi	r25, 0x05	; 5
     e70:	9f 83       	std	Y+7, r25	; 0x07
     e72:	96 e0       	ldi	r25, 0x06	; 6
     e74:	98 87       	std	Y+8, r25	; 0x08
     e76:	97 e0       	ldi	r25, 0x07	; 7
     e78:	99 87       	std	Y+9, r25	; 0x09
     e7a:	1a 82       	std	Y+2, r1	; 0x02
     e7c:	91 e0       	ldi	r25, 0x01	; 1
     e7e:	9b 83       	std	Y+3, r25	; 0x03
     e80:	8c 83       	std	Y+4, r24	; 0x04
     e82:	83 e0       	ldi	r24, 0x03	; 3
     e84:	8d 83       	std	Y+5, r24	; 0x05
     e86:	de 01       	movw	r26, r28
     e88:	1e 96       	adiw	r26, 0x0e	; 14
     e8a:	ec ea       	ldi	r30, 0xAC	; 172
     e8c:	f0 e0       	ldi	r31, 0x00	; 0
     e8e:	80 e1       	ldi	r24, 0x10	; 16
     e90:	01 90       	ld	r0, Z+
     e92:	0d 92       	st	X+, r0
     e94:	81 50       	subi	r24, 0x01	; 1
     e96:	e1 f7       	brne	.-8      	; 0xe90 <KEYPAD_GetValue+0x74>
     e98:	0f 2e       	mov	r0, r31
     e9a:	fa e0       	ldi	r31, 0x0A	; 10
     e9c:	4f 2e       	mov	r4, r31
     e9e:	55 24       	eor	r5, r5
     ea0:	f0 2d       	mov	r31, r0
     ea2:	4c 0e       	add	r4, r28
     ea4:	5d 1e       	adc	r5, r29
     ea6:	0f 2e       	mov	r0, r31
     ea8:	f6 e0       	ldi	r31, 0x06	; 6
     eaa:	2f 2e       	mov	r2, r31
     eac:	33 24       	eor	r3, r3
     eae:	f0 2d       	mov	r31, r0
     eb0:	2c 0e       	add	r2, r28
     eb2:	3d 1e       	adc	r3, r29
     eb4:	aa 24       	eor	r10, r10
     eb6:	bb 24       	eor	r11, r11
     eb8:	bf 8e       	std	Y+31, r11	; 0x1f
     eba:	ae 8e       	std	Y+30, r10	; 0x1e
     ebc:	f2 01       	movw	r30, r4
     ebe:	e1 90       	ld	r14, Z+
     ec0:	2f 01       	movw	r4, r30
     ec2:	f1 01       	movw	r30, r2
     ec4:	91 90       	ld	r9, Z+
     ec6:	1f 01       	movw	r2, r30
     ec8:	8e 2d       	mov	r24, r14
     eca:	69 2d       	mov	r22, r9
     ecc:	40 e0       	ldi	r20, 0x00	; 0
     ece:	0e 94 f5 00 	call	0x1ea	; 0x1ea <DIO_SetPinValue>
     ed2:	cc 24       	eor	r12, r12
     ed4:	dd 24       	eor	r13, r13
     ed6:	68 94       	set
     ed8:	c1 f8       	bld	r12, 1
     eda:	cc 0e       	add	r12, r28
     edc:	dd 1e       	adc	r13, r29
     ede:	00 e0       	ldi	r16, 0x00	; 0
     ee0:	10 e0       	ldi	r17, 0x00	; 0
     ee2:	38 01       	movw	r6, r16
     ee4:	f6 01       	movw	r30, r12
     ee6:	f1 90       	ld	r15, Z+
     ee8:	6f 01       	movw	r12, r30
     eea:	80 e0       	ldi	r24, 0x00	; 0
     eec:	6f 2d       	mov	r22, r15
     eee:	ae 01       	movw	r20, r28
     ef0:	4f 5f       	subi	r20, 0xFF	; 255
     ef2:	5f 4f       	sbci	r21, 0xFF	; 255
     ef4:	0e 94 d9 01 	call	0x3b2	; 0x3b2 <DIO_ReadValue>
     ef8:	89 81       	ldd	r24, Y+1	; 0x01
     efa:	88 23       	and	r24, r24
     efc:	f1 f4       	brne	.+60     	; 0xf3a <KEYPAD_GetValue+0x11e>
     efe:	80 e0       	ldi	r24, 0x00	; 0
     f00:	6f 2d       	mov	r22, r15
     f02:	ae 01       	movw	r20, r28
     f04:	4f 5f       	subi	r20, 0xFF	; 255
     f06:	5f 4f       	sbci	r21, 0xFF	; 255
     f08:	0e 94 d9 01 	call	0x3b2	; 0x3b2 <DIO_ReadValue>
     f0c:	89 81       	ldd	r24, Y+1	; 0x01
     f0e:	88 23       	and	r24, r24
     f10:	b1 f3       	breq	.-20     	; 0xefe <KEYPAD_GetValue+0xe2>
     f12:	f3 01       	movw	r30, r6
     f14:	ee 0f       	add	r30, r30
     f16:	ff 1f       	adc	r31, r31
     f18:	ee 0f       	add	r30, r30
     f1a:	ff 1f       	adc	r31, r31
     f1c:	81 e0       	ldi	r24, 0x01	; 1
     f1e:	90 e0       	ldi	r25, 0x00	; 0
     f20:	8c 0f       	add	r24, r28
     f22:	9d 1f       	adc	r25, r29
     f24:	e8 0f       	add	r30, r24
     f26:	f9 1f       	adc	r31, r25
     f28:	8e 8d       	ldd	r24, Y+30	; 0x1e
     f2a:	9f 8d       	ldd	r25, Y+31	; 0x1f
     f2c:	e8 0f       	add	r30, r24
     f2e:	f9 1f       	adc	r31, r25
     f30:	85 85       	ldd	r24, Z+13	; 0x0d
     f32:	e8 a1       	lds	r30, 0x48
     f34:	f9 a1       	lds	r31, 0x49
     f36:	80 83       	st	Z, r24
     f38:	12 c0       	rjmp	.+36     	; 0xf5e <KEYPAD_GetValue+0x142>
     f3a:	0f 5f       	subi	r16, 0xFF	; 255
     f3c:	1f 4f       	sbci	r17, 0xFF	; 255
     f3e:	04 30       	cpi	r16, 0x04	; 4
     f40:	11 05       	cpc	r17, r1
     f42:	79 f6       	brne	.-98     	; 0xee2 <KEYPAD_GetValue+0xc6>
     f44:	8e 2d       	mov	r24, r14
     f46:	69 2d       	mov	r22, r9
     f48:	41 e0       	ldi	r20, 0x01	; 1
     f4a:	0e 94 f5 00 	call	0x1ea	; 0x1ea <DIO_SetPinValue>
     f4e:	08 94       	sec
     f50:	a1 1c       	adc	r10, r1
     f52:	b1 1c       	adc	r11, r1
     f54:	f4 e0       	ldi	r31, 0x04	; 4
     f56:	af 16       	cp	r10, r31
     f58:	b1 04       	cpc	r11, r1
     f5a:	09 f0       	breq	.+2      	; 0xf5e <KEYPAD_GetValue+0x142>
     f5c:	ad cf       	rjmp	.-166    	; 0xeb8 <KEYPAD_GetValue+0x9c>
     f5e:	a1 96       	adiw	r28, 0x21	; 33
     f60:	0f b6       	in	r0, 0x3f	; 63
     f62:	f8 94       	cli
     f64:	de bf       	out	0x3e, r29	; 62
     f66:	0f be       	out	0x3f, r0	; 63
     f68:	cd bf       	out	0x3d, r28	; 61
     f6a:	df 91       	pop	r29
     f6c:	cf 91       	pop	r28
     f6e:	1f 91       	pop	r17
     f70:	0f 91       	pop	r16
     f72:	ff 90       	pop	r15
     f74:	ef 90       	pop	r14
     f76:	df 90       	pop	r13
     f78:	cf 90       	pop	r12
     f7a:	bf 90       	pop	r11
     f7c:	af 90       	pop	r10
     f7e:	9f 90       	pop	r9
     f80:	7f 90       	pop	r7
     f82:	6f 90       	pop	r6
     f84:	5f 90       	pop	r5
     f86:	4f 90       	pop	r4
     f88:	3f 90       	pop	r3
     f8a:	2f 90       	pop	r2
     f8c:	08 95       	ret

00000f8e <private_WriteHalfPort>:
     f8e:	cf 93       	push	r28
     f90:	c8 2f       	mov	r28, r24
     f92:	80 fd       	sbrc	r24, 0
     f94:	06 c0       	rjmp	.+12     	; 0xfa2 <private_WriteHalfPort+0x14>
     f96:	80 e0       	ldi	r24, 0x00	; 0
     f98:	64 e0       	ldi	r22, 0x04	; 4
     f9a:	40 e0       	ldi	r20, 0x00	; 0
     f9c:	0e 94 f5 00 	call	0x1ea	; 0x1ea <DIO_SetPinValue>
     fa0:	05 c0       	rjmp	.+10     	; 0xfac <private_WriteHalfPort+0x1e>
     fa2:	80 e0       	ldi	r24, 0x00	; 0
     fa4:	64 e0       	ldi	r22, 0x04	; 4
     fa6:	41 e0       	ldi	r20, 0x01	; 1
     fa8:	0e 94 f5 00 	call	0x1ea	; 0x1ea <DIO_SetPinValue>
     fac:	8c 2f       	mov	r24, r28
     fae:	86 95       	lsr	r24
     fb0:	80 fd       	sbrc	r24, 0
     fb2:	06 c0       	rjmp	.+12     	; 0xfc0 <private_WriteHalfPort+0x32>
     fb4:	80 e0       	ldi	r24, 0x00	; 0
     fb6:	65 e0       	ldi	r22, 0x05	; 5
     fb8:	40 e0       	ldi	r20, 0x00	; 0
     fba:	0e 94 f5 00 	call	0x1ea	; 0x1ea <DIO_SetPinValue>
     fbe:	05 c0       	rjmp	.+10     	; 0xfca <private_WriteHalfPort+0x3c>
     fc0:	80 e0       	ldi	r24, 0x00	; 0
     fc2:	65 e0       	ldi	r22, 0x05	; 5
     fc4:	41 e0       	ldi	r20, 0x01	; 1
     fc6:	0e 94 f5 00 	call	0x1ea	; 0x1ea <DIO_SetPinValue>
     fca:	8c 2f       	mov	r24, r28
     fcc:	86 95       	lsr	r24
     fce:	86 95       	lsr	r24
     fd0:	80 fd       	sbrc	r24, 0
     fd2:	06 c0       	rjmp	.+12     	; 0xfe0 <private_WriteHalfPort+0x52>
     fd4:	80 e0       	ldi	r24, 0x00	; 0
     fd6:	66 e0       	ldi	r22, 0x06	; 6
     fd8:	40 e0       	ldi	r20, 0x00	; 0
     fda:	0e 94 f5 00 	call	0x1ea	; 0x1ea <DIO_SetPinValue>
     fde:	05 c0       	rjmp	.+10     	; 0xfea <private_WriteHalfPort+0x5c>
     fe0:	80 e0       	ldi	r24, 0x00	; 0
     fe2:	66 e0       	ldi	r22, 0x06	; 6
     fe4:	41 e0       	ldi	r20, 0x01	; 1
     fe6:	0e 94 f5 00 	call	0x1ea	; 0x1ea <DIO_SetPinValue>
     fea:	c6 95       	lsr	r28
     fec:	c6 95       	lsr	r28
     fee:	c6 95       	lsr	r28
     ff0:	c0 fd       	sbrc	r28, 0
     ff2:	06 c0       	rjmp	.+12     	; 0x1000 <private_WriteHalfPort+0x72>
     ff4:	80 e0       	ldi	r24, 0x00	; 0
     ff6:	67 e0       	ldi	r22, 0x07	; 7
     ff8:	40 e0       	ldi	r20, 0x00	; 0
     ffa:	0e 94 f5 00 	call	0x1ea	; 0x1ea <DIO_SetPinValue>
     ffe:	05 c0       	rjmp	.+10     	; 0x100a <private_WriteHalfPort+0x7c>
    1000:	80 e0       	ldi	r24, 0x00	; 0
    1002:	67 e0       	ldi	r22, 0x07	; 7
    1004:	41 e0       	ldi	r20, 0x01	; 1
    1006:	0e 94 f5 00 	call	0x1ea	; 0x1ea <DIO_SetPinValue>
    100a:	cf 91       	pop	r28
    100c:	08 95       	ret

0000100e <LCD_sendComnd>:
    100e:	cf 93       	push	r28
    1010:	c8 2f       	mov	r28, r24
    1012:	81 e0       	ldi	r24, 0x01	; 1
    1014:	61 e0       	ldi	r22, 0x01	; 1
    1016:	40 e0       	ldi	r20, 0x00	; 0
    1018:	0e 94 f5 00 	call	0x1ea	; 0x1ea <DIO_SetPinValue>
    101c:	81 e0       	ldi	r24, 0x01	; 1
    101e:	62 e0       	ldi	r22, 0x02	; 2
    1020:	40 e0       	ldi	r20, 0x00	; 0
    1022:	0e 94 f5 00 	call	0x1ea	; 0x1ea <DIO_SetPinValue>
    1026:	8c 2f       	mov	r24, r28
    1028:	82 95       	swap	r24
    102a:	8f 70       	andi	r24, 0x0F	; 15
    102c:	0e 94 c7 07 	call	0xf8e	; 0xf8e <private_WriteHalfPort>
    1030:	81 e0       	ldi	r24, 0x01	; 1
    1032:	63 e0       	ldi	r22, 0x03	; 3
    1034:	41 e0       	ldi	r20, 0x01	; 1
    1036:	0e 94 f5 00 	call	0x1ea	; 0x1ea <DIO_SetPinValue>
    103a:	8f e9       	ldi	r24, 0x9F	; 159
    103c:	9f e0       	ldi	r25, 0x0F	; 15
    103e:	01 97       	sbiw	r24, 0x01	; 1
    1040:	f1 f7       	brne	.-4      	; 0x103e <LCD_sendComnd+0x30>
    1042:	00 c0       	rjmp	.+0      	; 0x1044 <LCD_sendComnd+0x36>
    1044:	00 00       	nop
    1046:	81 e0       	ldi	r24, 0x01	; 1
    1048:	63 e0       	ldi	r22, 0x03	; 3
    104a:	40 e0       	ldi	r20, 0x00	; 0
    104c:	0e 94 f5 00 	call	0x1ea	; 0x1ea <DIO_SetPinValue>
    1050:	8c 2f       	mov	r24, r28
    1052:	0e 94 c7 07 	call	0xf8e	; 0xf8e <private_WriteHalfPort>
    1056:	81 e0       	ldi	r24, 0x01	; 1
    1058:	63 e0       	ldi	r22, 0x03	; 3
    105a:	41 e0       	ldi	r20, 0x01	; 1
    105c:	0e 94 f5 00 	call	0x1ea	; 0x1ea <DIO_SetPinValue>
    1060:	8f e9       	ldi	r24, 0x9F	; 159
    1062:	9f e0       	ldi	r25, 0x0F	; 15
    1064:	01 97       	sbiw	r24, 0x01	; 1
    1066:	f1 f7       	brne	.-4      	; 0x1064 <LCD_sendComnd+0x56>
    1068:	00 c0       	rjmp	.+0      	; 0x106a <LCD_sendComnd+0x5c>
    106a:	00 00       	nop
    106c:	81 e0       	ldi	r24, 0x01	; 1
    106e:	63 e0       	ldi	r22, 0x03	; 3
    1070:	40 e0       	ldi	r20, 0x00	; 0
    1072:	0e 94 f5 00 	call	0x1ea	; 0x1ea <DIO_SetPinValue>
    1076:	cf 91       	pop	r28
    1078:	08 95       	ret

0000107a <LCD_init>:
    107a:	81 e0       	ldi	r24, 0x01	; 1
    107c:	61 e0       	ldi	r22, 0x01	; 1
    107e:	41 e0       	ldi	r20, 0x01	; 1
    1080:	0e 94 5f 00 	call	0xbe	; 0xbe <DIO_SetPinDirection>
    1084:	81 e0       	ldi	r24, 0x01	; 1
    1086:	62 e0       	ldi	r22, 0x02	; 2
    1088:	41 e0       	ldi	r20, 0x01	; 1
    108a:	0e 94 5f 00 	call	0xbe	; 0xbe <DIO_SetPinDirection>
    108e:	81 e0       	ldi	r24, 0x01	; 1
    1090:	63 e0       	ldi	r22, 0x03	; 3
    1092:	41 e0       	ldi	r20, 0x01	; 1
    1094:	0e 94 5f 00 	call	0xbe	; 0xbe <DIO_SetPinDirection>
    1098:	80 e0       	ldi	r24, 0x00	; 0
    109a:	64 e0       	ldi	r22, 0x04	; 4
    109c:	41 e0       	ldi	r20, 0x01	; 1
    109e:	0e 94 5f 00 	call	0xbe	; 0xbe <DIO_SetPinDirection>
    10a2:	80 e0       	ldi	r24, 0x00	; 0
    10a4:	65 e0       	ldi	r22, 0x05	; 5
    10a6:	41 e0       	ldi	r20, 0x01	; 1
    10a8:	0e 94 5f 00 	call	0xbe	; 0xbe <DIO_SetPinDirection>
    10ac:	80 e0       	ldi	r24, 0x00	; 0
    10ae:	66 e0       	ldi	r22, 0x06	; 6
    10b0:	41 e0       	ldi	r20, 0x01	; 1
    10b2:	0e 94 5f 00 	call	0xbe	; 0xbe <DIO_SetPinDirection>
    10b6:	80 e0       	ldi	r24, 0x00	; 0
    10b8:	67 e0       	ldi	r22, 0x07	; 7
    10ba:	41 e0       	ldi	r20, 0x01	; 1
    10bc:	0e 94 5f 00 	call	0xbe	; 0xbe <DIO_SetPinDirection>
    10c0:	8f e7       	ldi	r24, 0x7F	; 127
    10c2:	95 eb       	ldi	r25, 0xB5	; 181
    10c4:	a1 e0       	ldi	r26, 0x01	; 1
    10c6:	81 50       	subi	r24, 0x01	; 1
    10c8:	90 40       	sbci	r25, 0x00	; 0
    10ca:	a0 40       	sbci	r26, 0x00	; 0
    10cc:	e1 f7       	brne	.-8      	; 0x10c6 <LCD_init+0x4c>
    10ce:	00 c0       	rjmp	.+0      	; 0x10d0 <LCD_init+0x56>
    10d0:	00 00       	nop
    10d2:	81 e0       	ldi	r24, 0x01	; 1
    10d4:	61 e0       	ldi	r22, 0x01	; 1
    10d6:	40 e0       	ldi	r20, 0x00	; 0
    10d8:	0e 94 f5 00 	call	0x1ea	; 0x1ea <DIO_SetPinValue>
    10dc:	81 e0       	ldi	r24, 0x01	; 1
    10de:	62 e0       	ldi	r22, 0x02	; 2
    10e0:	40 e0       	ldi	r20, 0x00	; 0
    10e2:	0e 94 f5 00 	call	0x1ea	; 0x1ea <DIO_SetPinValue>
    10e6:	82 e0       	ldi	r24, 0x02	; 2
    10e8:	0e 94 c7 07 	call	0xf8e	; 0xf8e <private_WriteHalfPort>
    10ec:	81 e0       	ldi	r24, 0x01	; 1
    10ee:	63 e0       	ldi	r22, 0x03	; 3
    10f0:	41 e0       	ldi	r20, 0x01	; 1
    10f2:	0e 94 f5 00 	call	0x1ea	; 0x1ea <DIO_SetPinValue>
    10f6:	af e9       	ldi	r26, 0x9F	; 159
    10f8:	bf e0       	ldi	r27, 0x0F	; 15
    10fa:	11 97       	sbiw	r26, 0x01	; 1
    10fc:	f1 f7       	brne	.-4      	; 0x10fa <LCD_init+0x80>
    10fe:	00 c0       	rjmp	.+0      	; 0x1100 <LCD_init+0x86>
    1100:	00 00       	nop
    1102:	81 e0       	ldi	r24, 0x01	; 1
    1104:	63 e0       	ldi	r22, 0x03	; 3
    1106:	40 e0       	ldi	r20, 0x00	; 0
    1108:	0e 94 f5 00 	call	0x1ea	; 0x1ea <DIO_SetPinValue>
    110c:	88 e2       	ldi	r24, 0x28	; 40
    110e:	0e 94 07 08 	call	0x100e	; 0x100e <LCD_sendComnd>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
    1112:	b0 ef       	ldi	r27, 0xF0	; 240
    1114:	ba 95       	dec	r27
    1116:	f1 f7       	brne	.-4      	; 0x1114 <LCD_init+0x9a>
    1118:	8c e0       	ldi	r24, 0x0C	; 12
    111a:	0e 94 07 08 	call	0x100e	; 0x100e <LCD_sendComnd>
    111e:	80 ef       	ldi	r24, 0xF0	; 240
    1120:	8a 95       	dec	r24
    1122:	f1 f7       	brne	.-4      	; 0x1120 <LCD_init+0xa6>
    1124:	81 e0       	ldi	r24, 0x01	; 1
    1126:	0e 94 07 08 	call	0x100e	; 0x100e <LCD_sendComnd>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
    112a:	af e3       	ldi	r26, 0x3F	; 63
    112c:	bf e1       	ldi	r27, 0x1F	; 31
    112e:	11 97       	sbiw	r26, 0x01	; 1
    1130:	f1 f7       	brne	.-4      	; 0x112e <LCD_init+0xb4>
    1132:	00 c0       	rjmp	.+0      	; 0x1134 <LCD_init+0xba>
    1134:	00 00       	nop
    1136:	86 e0       	ldi	r24, 0x06	; 6
    1138:	0e 94 07 08 	call	0x100e	; 0x100e <LCD_sendComnd>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
    113c:	b0 ef       	ldi	r27, 0xF0	; 240
    113e:	ba 95       	dec	r27
    1140:	f1 f7       	brne	.-4      	; 0x113e <LCD_init+0xc4>
    1142:	08 95       	ret

00001144 <LCD_sendChar>:
    1144:	cf 93       	push	r28
    1146:	c8 2f       	mov	r28, r24
    1148:	81 e0       	ldi	r24, 0x01	; 1
    114a:	61 e0       	ldi	r22, 0x01	; 1
    114c:	41 e0       	ldi	r20, 0x01	; 1
    114e:	0e 94 f5 00 	call	0x1ea	; 0x1ea <DIO_SetPinValue>
    1152:	81 e0       	ldi	r24, 0x01	; 1
    1154:	62 e0       	ldi	r22, 0x02	; 2
    1156:	40 e0       	ldi	r20, 0x00	; 0
    1158:	0e 94 f5 00 	call	0x1ea	; 0x1ea <DIO_SetPinValue>
    115c:	8c 2f       	mov	r24, r28
    115e:	82 95       	swap	r24
    1160:	8f 70       	andi	r24, 0x0F	; 15
    1162:	0e 94 c7 07 	call	0xf8e	; 0xf8e <private_WriteHalfPort>
    1166:	81 e0       	ldi	r24, 0x01	; 1
    1168:	63 e0       	ldi	r22, 0x03	; 3
    116a:	41 e0       	ldi	r20, 0x01	; 1
    116c:	0e 94 f5 00 	call	0x1ea	; 0x1ea <DIO_SetPinValue>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
    1170:	8f e9       	ldi	r24, 0x9F	; 159
    1172:	9f e0       	ldi	r25, 0x0F	; 15
    1174:	01 97       	sbiw	r24, 0x01	; 1
    1176:	f1 f7       	brne	.-4      	; 0x1174 <LCD_sendChar+0x30>
    1178:	00 c0       	rjmp	.+0      	; 0x117a <LCD_sendChar+0x36>
    117a:	00 00       	nop
    117c:	81 e0       	ldi	r24, 0x01	; 1
    117e:	63 e0       	ldi	r22, 0x03	; 3
    1180:	40 e0       	ldi	r20, 0x00	; 0
    1182:	0e 94 f5 00 	call	0x1ea	; 0x1ea <DIO_SetPinValue>
    1186:	8c 2f       	mov	r24, r28
    1188:	0e 94 c7 07 	call	0xf8e	; 0xf8e <private_WriteHalfPort>
    118c:	81 e0       	ldi	r24, 0x01	; 1
    118e:	63 e0       	ldi	r22, 0x03	; 3
    1190:	41 e0       	ldi	r20, 0x01	; 1
    1192:	0e 94 f5 00 	call	0x1ea	; 0x1ea <DIO_SetPinValue>
    1196:	8f e9       	ldi	r24, 0x9F	; 159
    1198:	9f e0       	ldi	r25, 0x0F	; 15
    119a:	01 97       	sbiw	r24, 0x01	; 1
    119c:	f1 f7       	brne	.-4      	; 0x119a <LCD_sendChar+0x56>
    119e:	00 c0       	rjmp	.+0      	; 0x11a0 <LCD_sendChar+0x5c>
    11a0:	00 00       	nop
    11a2:	81 e0       	ldi	r24, 0x01	; 1
    11a4:	63 e0       	ldi	r22, 0x03	; 3
    11a6:	40 e0       	ldi	r20, 0x00	; 0
    11a8:	0e 94 f5 00 	call	0x1ea	; 0x1ea <DIO_SetPinValue>
    11ac:	cf 91       	pop	r28
    11ae:	08 95       	ret

000011b0 <LCD_SendString>:
    11b0:	cf 93       	push	r28
    11b2:	df 93       	push	r29
    11b4:	ec 01       	movw	r28, r24
    11b6:	88 81       	ld	r24, Y
    11b8:	88 23       	and	r24, r24
    11ba:	31 f0       	breq	.+12     	; 0x11c8 <LCD_SendString+0x18>
    11bc:	21 96       	adiw	r28, 0x01	; 1
    11be:	0e 94 a2 08 	call	0x1144	; 0x1144 <LCD_sendChar>
    11c2:	89 91       	ld	r24, Y+
    11c4:	88 23       	and	r24, r24
    11c6:	d9 f7       	brne	.-10     	; 0x11be <LCD_SendString+0xe>
    11c8:	df 91       	pop	r29
    11ca:	cf 91       	pop	r28
    11cc:	08 95       	ret

000011ce <LCD_ClearDesplay>:
    11ce:	81 e0       	ldi	r24, 0x01	; 1
    11d0:	0e 94 07 08 	call	0x100e	; 0x100e <LCD_sendComnd>
    11d4:	8f e3       	ldi	r24, 0x3F	; 63
    11d6:	9f e1       	ldi	r25, 0x1F	; 31
    11d8:	01 97       	sbiw	r24, 0x01	; 1
    11da:	f1 f7       	brne	.-4      	; 0x11d8 <LCD_ClearDesplay+0xa>
    11dc:	00 c0       	rjmp	.+0      	; 0x11de <LCD_ClearDesplay+0x10>
    11de:	00 00       	nop
    11e0:	80 e8       	ldi	r24, 0x80	; 128
    11e2:	0e 94 07 08 	call	0x100e	; 0x100e <LCD_sendComnd>
    11e6:	08 95       	ret

000011e8 <LCD_GoToLocation>:
    11e8:	cf 93       	push	r28
    11ea:	df 93       	push	r29
    11ec:	00 d0       	rcall	.+0      	; 0x11ee <LCD_GoToLocation+0x6>
    11ee:	00 d0       	rcall	.+0      	; 0x11f0 <LCD_GoToLocation+0x8>
    11f0:	cd b7       	in	r28, 0x3d	; 61
    11f2:	de b7       	in	r29, 0x3e	; 62
    11f4:	90 e8       	ldi	r25, 0x80	; 128
    11f6:	99 83       	std	Y+1, r25	; 0x01
    11f8:	90 ec       	ldi	r25, 0xC0	; 192
    11fa:	9a 83       	std	Y+2, r25	; 0x02
    11fc:	94 e9       	ldi	r25, 0x94	; 148
    11fe:	9b 83       	std	Y+3, r25	; 0x03
    1200:	94 ed       	ldi	r25, 0xD4	; 212
    1202:	9c 83       	std	Y+4, r25	; 0x04
    1204:	81 50       	subi	r24, 0x01	; 1
    1206:	fe 01       	movw	r30, r28
    1208:	e6 0f       	add	r30, r22
    120a:	f1 1d       	adc	r31, r1
    120c:	90 81       	ld	r25, Z
    120e:	89 0f       	add	r24, r25
    1210:	0e 94 07 08 	call	0x100e	; 0x100e <LCD_sendComnd>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
    1214:	8f e9       	ldi	r24, 0x9F	; 159
    1216:	9f e0       	ldi	r25, 0x0F	; 15
    1218:	01 97       	sbiw	r24, 0x01	; 1
    121a:	f1 f7       	brne	.-4      	; 0x1218 <LCD_GoToLocation+0x30>
    121c:	00 c0       	rjmp	.+0      	; 0x121e <LCD_GoToLocation+0x36>
    121e:	00 00       	nop
    1220:	0f 90       	pop	r0
    1222:	0f 90       	pop	r0
    1224:	0f 90       	pop	r0
    1226:	0f 90       	pop	r0
    1228:	df 91       	pop	r29
    122a:	cf 91       	pop	r28
    122c:	08 95       	ret

0000122e <LCD_SendIntegarNumber>:
    122e:	0f 93       	push	r16
    1230:	1f 93       	push	r17
    1232:	cf 93       	push	r28
    1234:	df 93       	push	r29
    1236:	cd b7       	in	r28, 0x3d	; 61
    1238:	de b7       	in	r29, 0x3e	; 62
    123a:	a0 97       	sbiw	r28, 0x20	; 32
    123c:	0f b6       	in	r0, 0x3f	; 63
    123e:	f8 94       	cli
    1240:	de bf       	out	0x3e, r29	; 62
    1242:	0f be       	out	0x3f, r0	; 63
    1244:	cd bf       	out	0x3d, r28	; 61
    1246:	2d b7       	in	r18, 0x3d	; 61
    1248:	3e b7       	in	r19, 0x3e	; 62
    124a:	28 50       	subi	r18, 0x08	; 8
    124c:	30 40       	sbci	r19, 0x00	; 0
    124e:	0f b6       	in	r0, 0x3f	; 63
    1250:	f8 94       	cli
    1252:	3e bf       	out	0x3e, r19	; 62
    1254:	0f be       	out	0x3f, r0	; 63
    1256:	2d bf       	out	0x3d, r18	; 61
    1258:	ed b7       	in	r30, 0x3d	; 61
    125a:	fe b7       	in	r31, 0x3e	; 62
    125c:	31 96       	adiw	r30, 0x01	; 1
    125e:	8e 01       	movw	r16, r28
    1260:	0f 5f       	subi	r16, 0xFF	; 255
    1262:	1f 4f       	sbci	r17, 0xFF	; 255
    1264:	ad b7       	in	r26, 0x3d	; 61
    1266:	be b7       	in	r27, 0x3e	; 62
    1268:	12 96       	adiw	r26, 0x02	; 2
    126a:	1c 93       	st	X, r17
    126c:	0e 93       	st	-X, r16
    126e:	11 97       	sbiw	r26, 0x01	; 1
    1270:	21 e1       	ldi	r18, 0x11	; 17
    1272:	30 e0       	ldi	r19, 0x00	; 0
    1274:	33 83       	std	Z+3, r19	; 0x03
    1276:	22 83       	std	Z+2, r18	; 0x02
    1278:	2c eb       	ldi	r18, 0xBC	; 188
    127a:	30 e0       	ldi	r19, 0x00	; 0
    127c:	35 83       	std	Z+5, r19	; 0x05
    127e:	24 83       	std	Z+4, r18	; 0x04
    1280:	97 83       	std	Z+7, r25	; 0x07
    1282:	86 83       	std	Z+6, r24	; 0x06
    1284:	0e 94 7d 0d 	call	0x1afa	; 0x1afa <snprintf>
    1288:	2d b7       	in	r18, 0x3d	; 61
    128a:	3e b7       	in	r19, 0x3e	; 62
    128c:	28 5f       	subi	r18, 0xF8	; 248
    128e:	3f 4f       	sbci	r19, 0xFF	; 255
    1290:	0f b6       	in	r0, 0x3f	; 63
    1292:	f8 94       	cli
    1294:	3e bf       	out	0x3e, r19	; 62
    1296:	0f be       	out	0x3f, r0	; 63
    1298:	2d bf       	out	0x3d, r18	; 61
    129a:	c8 01       	movw	r24, r16
    129c:	0e 94 d8 08 	call	0x11b0	; 0x11b0 <LCD_SendString>
    12a0:	a0 96       	adiw	r28, 0x20	; 32
    12a2:	0f b6       	in	r0, 0x3f	; 63
    12a4:	f8 94       	cli
    12a6:	de bf       	out	0x3e, r29	; 62
    12a8:	0f be       	out	0x3f, r0	; 63
    12aa:	cd bf       	out	0x3d, r28	; 61
    12ac:	df 91       	pop	r29
    12ae:	cf 91       	pop	r28
    12b0:	1f 91       	pop	r17
    12b2:	0f 91       	pop	r16
    12b4:	08 95       	ret

000012b6 <LCD_SendNumberToLocation>:
    12b6:	cf 93       	push	r28
    12b8:	df 93       	push	r29
    12ba:	ec 01       	movw	r28, r24
    12bc:	86 2f       	mov	r24, r22
    12be:	64 2f       	mov	r22, r20
    12c0:	0e 94 f4 08 	call	0x11e8	; 0x11e8 <LCD_GoToLocation>
    12c4:	ce 01       	movw	r24, r28
    12c6:	0e 94 17 09 	call	0x122e	; 0x122e <LCD_SendIntegarNumber>
    12ca:	df 91       	pop	r29
    12cc:	cf 91       	pop	r28
    12ce:	08 95       	ret

000012d0 <LCD_SendFloatNumber>:
    12d0:	0f 93       	push	r16
    12d2:	1f 93       	push	r17
    12d4:	cf 93       	push	r28
    12d6:	df 93       	push	r29
    12d8:	cd b7       	in	r28, 0x3d	; 61
    12da:	de b7       	in	r29, 0x3e	; 62
    12dc:	a0 97       	sbiw	r28, 0x20	; 32
    12de:	0f b6       	in	r0, 0x3f	; 63
    12e0:	f8 94       	cli
    12e2:	de bf       	out	0x3e, r29	; 62
    12e4:	0f be       	out	0x3f, r0	; 63
    12e6:	cd bf       	out	0x3d, r28	; 61
    12e8:	dc 01       	movw	r26, r24
    12ea:	cb 01       	movw	r24, r22
    12ec:	2d b7       	in	r18, 0x3d	; 61
    12ee:	3e b7       	in	r19, 0x3e	; 62
    12f0:	2a 50       	subi	r18, 0x0A	; 10
    12f2:	30 40       	sbci	r19, 0x00	; 0
    12f4:	0f b6       	in	r0, 0x3f	; 63
    12f6:	f8 94       	cli
    12f8:	3e bf       	out	0x3e, r19	; 62
    12fa:	0f be       	out	0x3f, r0	; 63
    12fc:	2d bf       	out	0x3d, r18	; 61
    12fe:	4d b7       	in	r20, 0x3d	; 61
    1300:	5e b7       	in	r21, 0x3e	; 62
    1302:	4f 5f       	subi	r20, 0xFF	; 255
    1304:	5f 4f       	sbci	r21, 0xFF	; 255
    1306:	8e 01       	movw	r16, r28
    1308:	0f 5f       	subi	r16, 0xFF	; 255
    130a:	1f 4f       	sbci	r17, 0xFF	; 255
    130c:	ed b7       	in	r30, 0x3d	; 61
    130e:	fe b7       	in	r31, 0x3e	; 62
    1310:	12 83       	std	Z+2, r17	; 0x02
    1312:	01 83       	std	Z+1, r16	; 0x01
    1314:	21 e1       	ldi	r18, 0x11	; 17
    1316:	30 e0       	ldi	r19, 0x00	; 0
    1318:	fa 01       	movw	r30, r20
    131a:	33 83       	std	Z+3, r19	; 0x03
    131c:	22 83       	std	Z+2, r18	; 0x02
    131e:	2f eb       	ldi	r18, 0xBF	; 191
    1320:	30 e0       	ldi	r19, 0x00	; 0
    1322:	35 83       	std	Z+5, r19	; 0x05
    1324:	24 83       	std	Z+4, r18	; 0x04
    1326:	86 83       	std	Z+6, r24	; 0x06
    1328:	97 83       	std	Z+7, r25	; 0x07
    132a:	a0 87       	std	Z+8, r26	; 0x08
    132c:	b1 87       	std	Z+9, r27	; 0x09
    132e:	0e 94 7d 0d 	call	0x1afa	; 0x1afa <snprintf>
    1332:	2d b7       	in	r18, 0x3d	; 61
    1334:	3e b7       	in	r19, 0x3e	; 62
    1336:	26 5f       	subi	r18, 0xF6	; 246
    1338:	3f 4f       	sbci	r19, 0xFF	; 255
    133a:	0f b6       	in	r0, 0x3f	; 63
    133c:	f8 94       	cli
    133e:	3e bf       	out	0x3e, r19	; 62
    1340:	0f be       	out	0x3f, r0	; 63
    1342:	2d bf       	out	0x3d, r18	; 61
    1344:	c8 01       	movw	r24, r16
    1346:	0e 94 d8 08 	call	0x11b0	; 0x11b0 <LCD_SendString>
    134a:	a0 96       	adiw	r28, 0x20	; 32
    134c:	0f b6       	in	r0, 0x3f	; 63
    134e:	f8 94       	cli
    1350:	de bf       	out	0x3e, r29	; 62
    1352:	0f be       	out	0x3f, r0	; 63
    1354:	cd bf       	out	0x3d, r28	; 61
    1356:	df 91       	pop	r29
    1358:	cf 91       	pop	r28
    135a:	1f 91       	pop	r17
    135c:	0f 91       	pop	r16
    135e:	08 95       	ret

00001360 <LCD_Shift>:
    1360:	0e 94 07 08 	call	0x100e	; 0x100e <LCD_sendComnd>
    1364:	08 95       	ret

00001366 <LED_init>:
    1366:	84 30       	cpi	r24, 0x04	; 4
    1368:	28 f4       	brcc	.+10     	; 0x1374 <LED_init+0xe>
    136a:	68 30       	cpi	r22, 0x08	; 8
    136c:	18 f4       	brcc	.+6      	; 0x1374 <LED_init+0xe>
    136e:	41 e0       	ldi	r20, 0x01	; 1
    1370:	0e 94 5f 00 	call	0xbe	; 0xbe <DIO_SetPinDirection>
    1374:	08 95       	ret

00001376 <LED_TurnON>:
    1376:	84 30       	cpi	r24, 0x04	; 4
    1378:	28 f4       	brcc	.+10     	; 0x1384 <LED_TurnON+0xe>
    137a:	68 30       	cpi	r22, 0x08	; 8
    137c:	18 f4       	brcc	.+6      	; 0x1384 <LED_TurnON+0xe>
    137e:	41 e0       	ldi	r20, 0x01	; 1
    1380:	0e 94 f5 00 	call	0x1ea	; 0x1ea <DIO_SetPinValue>
    1384:	08 95       	ret

00001386 <LED_TurnOFF>:
    1386:	84 30       	cpi	r24, 0x04	; 4
    1388:	28 f4       	brcc	.+10     	; 0x1394 <LED_TurnOFF+0xe>
    138a:	68 30       	cpi	r22, 0x08	; 8
    138c:	18 f4       	brcc	.+6      	; 0x1394 <LED_TurnOFF+0xe>
    138e:	40 e0       	ldi	r20, 0x00	; 0
    1390:	0e 94 f5 00 	call	0x1ea	; 0x1ea <DIO_SetPinValue>
    1394:	08 95       	ret

00001396 <LED_Toggle>:
    1396:	84 30       	cpi	r24, 0x04	; 4
    1398:	20 f4       	brcc	.+8      	; 0x13a2 <LED_Toggle+0xc>
    139a:	68 30       	cpi	r22, 0x08	; 8
    139c:	10 f4       	brcc	.+4      	; 0x13a2 <LED_Toggle+0xc>
    139e:	0e 94 8b 01 	call	0x316	; 0x316 <DIO_TogglePinValue>
    13a2:	08 95       	ret

000013a4 <RELAY_init>:
    13a4:	84 30       	cpi	r24, 0x04	; 4
    13a6:	28 f4       	brcc	.+10     	; 0x13b2 <RELAY_init+0xe>
    13a8:	68 30       	cpi	r22, 0x08	; 8
    13aa:	18 f4       	brcc	.+6      	; 0x13b2 <RELAY_init+0xe>
    13ac:	41 e0       	ldi	r20, 0x01	; 1
    13ae:	0e 94 5f 00 	call	0xbe	; 0xbe <DIO_SetPinDirection>
    13b2:	08 95       	ret

000013b4 <RELAY_TurnON>:
    13b4:	84 30       	cpi	r24, 0x04	; 4
    13b6:	28 f4       	brcc	.+10     	; 0x13c2 <RELAY_TurnON+0xe>
    13b8:	68 30       	cpi	r22, 0x08	; 8
    13ba:	18 f4       	brcc	.+6      	; 0x13c2 <RELAY_TurnON+0xe>
    13bc:	41 e0       	ldi	r20, 0x01	; 1
    13be:	0e 94 f5 00 	call	0x1ea	; 0x1ea <DIO_SetPinValue>
    13c2:	08 95       	ret

000013c4 <RELAY_TurnOFF>:
    13c4:	84 30       	cpi	r24, 0x04	; 4
    13c6:	28 f4       	brcc	.+10     	; 0x13d2 <RELAY_TurnOFF+0xe>
    13c8:	68 30       	cpi	r22, 0x08	; 8
    13ca:	18 f4       	brcc	.+6      	; 0x13d2 <RELAY_TurnOFF+0xe>
    13cc:	40 e0       	ldi	r20, 0x00	; 0
    13ce:	0e 94 f5 00 	call	0x1ea	; 0x1ea <DIO_SetPinValue>
    13d2:	08 95       	ret

000013d4 <RELAY_Toggle>:
    13d4:	84 30       	cpi	r24, 0x04	; 4
    13d6:	20 f4       	brcc	.+8      	; 0x13e0 <RELAY_Toggle+0xc>
    13d8:	68 30       	cpi	r22, 0x08	; 8
    13da:	10 f4       	brcc	.+4      	; 0x13e0 <RELAY_Toggle+0xc>
    13dc:	0e 94 8b 01 	call	0x316	; 0x316 <DIO_TogglePinValue>
    13e0:	08 95       	ret

000013e2 <SERVO_init>:
#include "SERVO_private.h"


void SERVO_init(void)
{
	DIO_SetPinDirection(SERVO_PORT,SERVO_PIN,DIO_PIN_INPUT);
    13e2:	83 e0       	ldi	r24, 0x03	; 3
    13e4:	67 e0       	ldi	r22, 0x07	; 7
    13e6:	40 e0       	ldi	r20, 0x00	; 0
    13e8:	0e 94 5f 00 	call	0xbe	; 0xbe <DIO_SetPinDirection>
	DIO_SetPinDirection(TMR1_OC1A_PORT,TMR1_OC1A_PIN,DIO_PIN_OUTPUT);
    13ec:	83 e0       	ldi	r24, 0x03	; 3
    13ee:	65 e0       	ldi	r22, 0x05	; 5
    13f0:	41 e0       	ldi	r20, 0x01	; 1
    13f2:	0e 94 5f 00 	call	0xbe	; 0xbe <DIO_SetPinDirection>
	DIO_SetPinDirection(TMR1_OC1B_PORT,TMR1_OC1B_PIN,DIO_PIN_OUTPUT);
    13f6:	83 e0       	ldi	r24, 0x03	; 3
    13f8:	64 e0       	ldi	r22, 0x04	; 4
    13fa:	41 e0       	ldi	r20, 0x01	; 1
    13fc:	0e 94 5f 00 	call	0xbe	; 0xbe <DIO_SetPinDirection>
}
    1400:	08 95       	ret

00001402 <SERVO_TurnON>:

void SERVO_TurnON(u16 freq ,f32 Duty)
{	
    1402:	cf 92       	push	r12
    1404:	df 92       	push	r13
    1406:	ef 92       	push	r14
    1408:	ff 92       	push	r15
    140a:	cf 93       	push	r28
    140c:	df 93       	push	r29
    140e:	ec 01       	movw	r28, r24
    1410:	6a 01       	movw	r12, r20
    1412:	7b 01       	movw	r14, r22
	TMR1_init();
    1414:	0e 94 1d 0a 	call	0x143a	; 0x143a <TMR1_init>
	TMR1_SetDutyCycle_And_Freq_Value(freq,Duty);
    1418:	ce 01       	movw	r24, r28
    141a:	b7 01       	movw	r22, r14
    141c:	a6 01       	movw	r20, r12
    141e:	0e 94 4a 0a 	call	0x1494	; 0x1494 <TMR1_SetDutyCycle_And_Freq_Value>
	TMR1_Start();
    1422:	0e 94 36 0a 	call	0x146c	; 0x146c <TMR1_Start>
}
    1426:	df 91       	pop	r29
    1428:	cf 91       	pop	r28
    142a:	ff 90       	pop	r15
    142c:	ef 90       	pop	r14
    142e:	df 90       	pop	r13
    1430:	cf 90       	pop	r12
    1432:	08 95       	ret

00001434 <SERVO_TurnOFF>:

void SERVO_TurnOFF()
{
	TMR1_Stop();	
    1434:	0e 94 40 0a 	call	0x1480	; 0x1480 <TMR1_Stop>
}
    1438:	08 95       	ret

0000143a <TMR1_init>:


void TMR1_init(void)
{
	/*Select Mode : mode 14  */
	CLR_BIT(TCCR1A,WGM10);
    143a:	8f b5       	in	r24, 0x2f	; 47
    143c:	8e 7f       	andi	r24, 0xFE	; 254
    143e:	8f bd       	out	0x2f, r24	; 47
	SET_BIT(TCCR1A,WGM11);
    1440:	8f b5       	in	r24, 0x2f	; 47
    1442:	82 60       	ori	r24, 0x02	; 2
    1444:	8f bd       	out	0x2f, r24	; 47
	SET_BIT(TCCR1B,WGM12);
    1446:	8e b5       	in	r24, 0x2e	; 46
    1448:	88 60       	ori	r24, 0x08	; 8
    144a:	8e bd       	out	0x2e, r24	; 46
	SET_BIT(TCCR1B,WGM13);
    144c:	8e b5       	in	r24, 0x2e	; 46
    144e:	80 61       	ori	r24, 0x10	; 16
    1450:	8e bd       	out	0x2e, r24	; 46
	
	CLR_BIT(TCCR1A,COM1A0);
    1452:	8f b5       	in	r24, 0x2f	; 47
    1454:	8f 7b       	andi	r24, 0xBF	; 191
    1456:	8f bd       	out	0x2f, r24	; 47
	SET_BIT(TCCR1A,COM1A1);
    1458:	8f b5       	in	r24, 0x2f	; 47
    145a:	80 68       	ori	r24, 0x80	; 128
    145c:	8f bd       	out	0x2f, r24	; 47
	
	CLR_BIT(TCCR1A,COM1B0);
    145e:	8f b5       	in	r24, 0x2f	; 47
    1460:	8f 7e       	andi	r24, 0xEF	; 239
    1462:	8f bd       	out	0x2f, r24	; 47
	SET_BIT(TCCR1A,COM1B1);
    1464:	8f b5       	in	r24, 0x2f	; 47
    1466:	80 62       	ori	r24, 0x20	; 32
    1468:	8f bd       	out	0x2f, r24	; 47
}
    146a:	08 95       	ret

0000146c <TMR1_Start>:

void TMR1_Start(void)
{
	/*select prescaler : 64*/
	
	SET_BIT(TCCR1B,CS10);
    146c:	8e b5       	in	r24, 0x2e	; 46
    146e:	81 60       	ori	r24, 0x01	; 1
    1470:	8e bd       	out	0x2e, r24	; 46
	SET_BIT(TCCR1B,CS11);
    1472:	8e b5       	in	r24, 0x2e	; 46
    1474:	82 60       	ori	r24, 0x02	; 2
    1476:	8e bd       	out	0x2e, r24	; 46
	CLR_BIT(TCCR1B,CS12);
    1478:	8e b5       	in	r24, 0x2e	; 46
    147a:	8b 7f       	andi	r24, 0xFB	; 251
    147c:	8e bd       	out	0x2e, r24	; 46
}
    147e:	08 95       	ret

00001480 <TMR1_Stop>:


void TMR1_Stop(void)
{
	CLR_BIT(TCCR1B,CS10);
    1480:	8e b5       	in	r24, 0x2e	; 46
    1482:	8e 7f       	andi	r24, 0xFE	; 254
    1484:	8e bd       	out	0x2e, r24	; 46
	CLR_BIT(TCCR1B,CS11);
    1486:	8e b5       	in	r24, 0x2e	; 46
    1488:	8d 7f       	andi	r24, 0xFD	; 253
    148a:	8e bd       	out	0x2e, r24	; 46
	CLR_BIT(TCCR1B,CS12);
    148c:	8e b5       	in	r24, 0x2e	; 46
    148e:	8b 7f       	andi	r24, 0xFB	; 251
    1490:	8e bd       	out	0x2e, r24	; 46
}
    1492:	08 95       	ret

00001494 <TMR1_SetDutyCycle_And_Freq_Value>:


void TMR1_SetDutyCycle_And_Freq_Value(u16 Freq ,f32 Duty)
{	
    1494:	cf 92       	push	r12
    1496:	df 92       	push	r13
    1498:	ef 92       	push	r14
    149a:	ff 92       	push	r15
    149c:	cf 93       	push	r28
    149e:	df 93       	push	r29
    14a0:	ec 01       	movw	r28, r24
    14a2:	6a 01       	movw	r12, r20
    14a4:	7b 01       	movw	r14, r22
// 	OCR1BL=Duty;  
	if(Duty<=100)
    14a6:	cb 01       	movw	r24, r22
    14a8:	ba 01       	movw	r22, r20
    14aa:	20 e0       	ldi	r18, 0x00	; 0
    14ac:	30 e0       	ldi	r19, 0x00	; 0
    14ae:	48 ec       	ldi	r20, 0xC8	; 200
    14b0:	52 e4       	ldi	r21, 0x42	; 66
    14b2:	0e 94 ae 0b 	call	0x175c	; 0x175c <__cmpsf2>
    14b6:	18 16       	cp	r1, r24
    14b8:	5c f1       	brlt	.+86     	; 0x1510 <TMR1_SetDutyCycle_And_Freq_Value+0x7c>
	{
		ICR1L =((1000000UL/Freq)/4)-1;
    14ba:	9e 01       	movw	r18, r28
    14bc:	40 e0       	ldi	r20, 0x00	; 0
    14be:	50 e0       	ldi	r21, 0x00	; 0
    14c0:	60 e9       	ldi	r22, 0x90	; 144
    14c2:	70 ed       	ldi	r23, 0xD0	; 208
    14c4:	83 e0       	ldi	r24, 0x03	; 3
    14c6:	90 e0       	ldi	r25, 0x00	; 0
    14c8:	0e 94 5b 0d 	call	0x1ab6	; 0x1ab6 <__udivmodsi4>
    14cc:	21 50       	subi	r18, 0x01	; 1
    14ce:	30 40       	sbci	r19, 0x00	; 0
    14d0:	37 bd       	out	0x27, r19	; 39
    14d2:	26 bd       	out	0x26, r18	; 38
		OCR1AL=((Duty*(ICR1L+1))/100.0)-1;
    14d4:	66 b5       	in	r22, 0x26	; 38
    14d6:	77 b5       	in	r23, 0x27	; 39
    14d8:	6f 5f       	subi	r22, 0xFF	; 255
    14da:	7f 4f       	sbci	r23, 0xFF	; 255
    14dc:	80 e0       	ldi	r24, 0x00	; 0
    14de:	90 e0       	ldi	r25, 0x00	; 0
    14e0:	0e 94 46 0c 	call	0x188c	; 0x188c <__floatunsisf>
    14e4:	a7 01       	movw	r20, r14
    14e6:	96 01       	movw	r18, r12
    14e8:	0e 94 f8 0c 	call	0x19f0	; 0x19f0 <__mulsf3>
    14ec:	20 e0       	ldi	r18, 0x00	; 0
    14ee:	30 e0       	ldi	r19, 0x00	; 0
    14f0:	48 ec       	ldi	r20, 0xC8	; 200
    14f2:	52 e4       	ldi	r21, 0x42	; 66
    14f4:	0e 94 b2 0b 	call	0x1764	; 0x1764 <__divsf3>
    14f8:	20 e0       	ldi	r18, 0x00	; 0
    14fa:	30 e0       	ldi	r19, 0x00	; 0
    14fc:	40 e8       	ldi	r20, 0x80	; 128
    14fe:	5f e3       	ldi	r21, 0x3F	; 63
    1500:	0e 94 49 0b 	call	0x1692	; 0x1692 <__subsf3>
    1504:	0e 94 1a 0c 	call	0x1834	; 0x1834 <__fixunssfsi>
    1508:	dc 01       	movw	r26, r24
    150a:	cb 01       	movw	r24, r22
    150c:	9b bd       	out	0x2b, r25	; 43
    150e:	8a bd       	out	0x2a, r24	; 42
	}		 
}
    1510:	df 91       	pop	r29
    1512:	cf 91       	pop	r28
    1514:	ff 90       	pop	r15
    1516:	ef 90       	pop	r14
    1518:	df 90       	pop	r13
    151a:	cf 90       	pop	r12
    151c:	08 95       	ret

0000151e <UART_init>:
    151e:	52 98       	cbi	0x0a, 2	; 10
    1520:	86 e8       	ldi	r24, 0x86	; 134
    1522:	80 bd       	out	0x20, r24	; 32
    1524:	87 e6       	ldi	r24, 0x67	; 103
    1526:	89 b9       	out	0x09, r24	; 9
    1528:	10 bc       	out	0x20, r1	; 32
    152a:	59 98       	cbi	0x0b, 1	; 11
    152c:	57 9a       	sbi	0x0a, 7	; 10
    152e:	56 9a       	sbi	0x0a, 6	; 10
    1530:	55 9a       	sbi	0x0a, 5	; 10
    1532:	53 9a       	sbi	0x0a, 3	; 10
    1534:	54 9a       	sbi	0x0a, 4	; 10
    1536:	08 95       	ret

00001538 <UART_ReceiveChar>:
    1538:	00 97       	sbiw	r24, 0x00	; 0
    153a:	29 f0       	breq	.+10     	; 0x1546 <UART_ReceiveChar+0xe>
    153c:	5f 9b       	sbis	0x0b, 7	; 11
    153e:	fe cf       	rjmp	.-4      	; 0x153c <UART_ReceiveChar+0x4>
    1540:	2c b1       	in	r18, 0x0c	; 12
    1542:	fc 01       	movw	r30, r24
    1544:	20 83       	st	Z, r18
    1546:	08 95       	ret

00001548 <UART_TransmiteChar>:
    1548:	8c b9       	out	0x0c, r24	; 12
    154a:	8b b1       	in	r24, 0x0b	; 11
    154c:	85 ff       	sbrs	r24, 5
    154e:	fd cf       	rjmp	.-6      	; 0x154a <UART_TransmiteChar+0x2>
    1550:	08 95       	ret

00001552 <UART_TransmiteString>:
    1552:	0f 93       	push	r16
    1554:	1f 93       	push	r17
    1556:	cf 93       	push	r28
    1558:	8c 01       	movw	r16, r24
    155a:	fc 01       	movw	r30, r24
    155c:	80 81       	ld	r24, Z
    155e:	88 23       	and	r24, r24
    1560:	51 f0       	breq	.+20     	; 0x1576 <UART_TransmiteString+0x24>
    1562:	c0 e0       	ldi	r28, 0x00	; 0
    1564:	0e 94 a4 0a 	call	0x1548	; 0x1548 <UART_TransmiteChar>
    1568:	cf 5f       	subi	r28, 0xFF	; 255
    156a:	f8 01       	movw	r30, r16
    156c:	ec 0f       	add	r30, r28
    156e:	f1 1d       	adc	r31, r1
    1570:	80 81       	ld	r24, Z
    1572:	88 23       	and	r24, r24
    1574:	b9 f7       	brne	.-18     	; 0x1564 <UART_TransmiteString+0x12>
    1576:	cf 91       	pop	r28
    1578:	1f 91       	pop	r17
    157a:	0f 91       	pop	r16
    157c:	08 95       	ret

0000157e <UART_CallBack_RXC>:
    157e:	90 93 c3 00 	sts	0x00C3, r25
    1582:	80 93 c2 00 	sts	0x00C2, r24
    1586:	08 95       	ret

00001588 <UART_CallBack_UDRE>:
    1588:	90 93 c5 00 	sts	0x00C5, r25
    158c:	80 93 c4 00 	sts	0x00C4, r24
    1590:	08 95       	ret

00001592 <UART_CallBack_TXC>:
    1592:	90 93 c7 00 	sts	0x00C7, r25
    1596:	80 93 c6 00 	sts	0x00C6, r24
    159a:	08 95       	ret

0000159c <__vector_13>:
    159c:	1f 92       	push	r1
    159e:	0f 92       	push	r0
    15a0:	0f b6       	in	r0, 0x3f	; 63
    15a2:	0f 92       	push	r0
    15a4:	11 24       	eor	r1, r1
    15a6:	2f 93       	push	r18
    15a8:	3f 93       	push	r19
    15aa:	4f 93       	push	r20
    15ac:	5f 93       	push	r21
    15ae:	6f 93       	push	r22
    15b0:	7f 93       	push	r23
    15b2:	8f 93       	push	r24
    15b4:	9f 93       	push	r25
    15b6:	af 93       	push	r26
    15b8:	bf 93       	push	r27
    15ba:	ef 93       	push	r30
    15bc:	ff 93       	push	r31
    15be:	e0 91 c2 00 	lds	r30, 0x00C2
    15c2:	f0 91 c3 00 	lds	r31, 0x00C3
    15c6:	30 97       	sbiw	r30, 0x00	; 0
    15c8:	09 f0       	breq	.+2      	; 0x15cc <__vector_13+0x30>
    15ca:	09 95       	icall
    15cc:	ff 91       	pop	r31
    15ce:	ef 91       	pop	r30
    15d0:	bf 91       	pop	r27
    15d2:	af 91       	pop	r26
    15d4:	9f 91       	pop	r25
    15d6:	8f 91       	pop	r24
    15d8:	7f 91       	pop	r23
    15da:	6f 91       	pop	r22
    15dc:	5f 91       	pop	r21
    15de:	4f 91       	pop	r20
    15e0:	3f 91       	pop	r19
    15e2:	2f 91       	pop	r18
    15e4:	0f 90       	pop	r0
    15e6:	0f be       	out	0x3f, r0	; 63
    15e8:	0f 90       	pop	r0
    15ea:	1f 90       	pop	r1
    15ec:	18 95       	reti

000015ee <__vector_14>:
    15ee:	1f 92       	push	r1
    15f0:	0f 92       	push	r0
    15f2:	0f b6       	in	r0, 0x3f	; 63
    15f4:	0f 92       	push	r0
    15f6:	11 24       	eor	r1, r1
    15f8:	2f 93       	push	r18
    15fa:	3f 93       	push	r19
    15fc:	4f 93       	push	r20
    15fe:	5f 93       	push	r21
    1600:	6f 93       	push	r22
    1602:	7f 93       	push	r23
    1604:	8f 93       	push	r24
    1606:	9f 93       	push	r25
    1608:	af 93       	push	r26
    160a:	bf 93       	push	r27
    160c:	ef 93       	push	r30
    160e:	ff 93       	push	r31
    1610:	e0 91 c4 00 	lds	r30, 0x00C4
    1614:	f0 91 c5 00 	lds	r31, 0x00C5
    1618:	30 97       	sbiw	r30, 0x00	; 0
    161a:	09 f0       	breq	.+2      	; 0x161e <__vector_14+0x30>
    161c:	09 95       	icall
    161e:	ff 91       	pop	r31
    1620:	ef 91       	pop	r30
    1622:	bf 91       	pop	r27
    1624:	af 91       	pop	r26
    1626:	9f 91       	pop	r25
    1628:	8f 91       	pop	r24
    162a:	7f 91       	pop	r23
    162c:	6f 91       	pop	r22
    162e:	5f 91       	pop	r21
    1630:	4f 91       	pop	r20
    1632:	3f 91       	pop	r19
    1634:	2f 91       	pop	r18
    1636:	0f 90       	pop	r0
    1638:	0f be       	out	0x3f, r0	; 63
    163a:	0f 90       	pop	r0
    163c:	1f 90       	pop	r1
    163e:	18 95       	reti

00001640 <__vector_15>:
    1640:	1f 92       	push	r1
    1642:	0f 92       	push	r0
    1644:	0f b6       	in	r0, 0x3f	; 63
    1646:	0f 92       	push	r0
    1648:	11 24       	eor	r1, r1
    164a:	2f 93       	push	r18
    164c:	3f 93       	push	r19
    164e:	4f 93       	push	r20
    1650:	5f 93       	push	r21
    1652:	6f 93       	push	r22
    1654:	7f 93       	push	r23
    1656:	8f 93       	push	r24
    1658:	9f 93       	push	r25
    165a:	af 93       	push	r26
    165c:	bf 93       	push	r27
    165e:	ef 93       	push	r30
    1660:	ff 93       	push	r31
    1662:	e0 91 c6 00 	lds	r30, 0x00C6
    1666:	f0 91 c7 00 	lds	r31, 0x00C7
    166a:	30 97       	sbiw	r30, 0x00	; 0
    166c:	09 f0       	breq	.+2      	; 0x1670 <__vector_15+0x30>
    166e:	09 95       	icall
    1670:	ff 91       	pop	r31
    1672:	ef 91       	pop	r30
    1674:	bf 91       	pop	r27
    1676:	af 91       	pop	r26
    1678:	9f 91       	pop	r25
    167a:	8f 91       	pop	r24
    167c:	7f 91       	pop	r23
    167e:	6f 91       	pop	r22
    1680:	5f 91       	pop	r21
    1682:	4f 91       	pop	r20
    1684:	3f 91       	pop	r19
    1686:	2f 91       	pop	r18
    1688:	0f 90       	pop	r0
    168a:	0f be       	out	0x3f, r0	; 63
    168c:	0f 90       	pop	r0
    168e:	1f 90       	pop	r1
    1690:	18 95       	reti

00001692 <__subsf3>:
    1692:	50 58       	subi	r21, 0x80	; 128

00001694 <__addsf3>:
    1694:	bb 27       	eor	r27, r27
    1696:	aa 27       	eor	r26, r26
    1698:	0e d0       	rcall	.+28     	; 0x16b6 <__addsf3x>
    169a:	70 c1       	rjmp	.+736    	; 0x197c <__fp_round>
    169c:	61 d1       	rcall	.+706    	; 0x1960 <__fp_pscA>
    169e:	30 f0       	brcs	.+12     	; 0x16ac <__addsf3+0x18>
    16a0:	66 d1       	rcall	.+716    	; 0x196e <__fp_pscB>
    16a2:	20 f0       	brcs	.+8      	; 0x16ac <__addsf3+0x18>
    16a4:	31 f4       	brne	.+12     	; 0x16b2 <__addsf3+0x1e>
    16a6:	9f 3f       	cpi	r25, 0xFF	; 255
    16a8:	11 f4       	brne	.+4      	; 0x16ae <__addsf3+0x1a>
    16aa:	1e f4       	brtc	.+6      	; 0x16b2 <__addsf3+0x1e>
    16ac:	56 c1       	rjmp	.+684    	; 0x195a <__fp_nan>
    16ae:	0e f4       	brtc	.+2      	; 0x16b2 <__addsf3+0x1e>
    16b0:	e0 95       	com	r30
    16b2:	e7 fb       	bst	r30, 7
    16b4:	4c c1       	rjmp	.+664    	; 0x194e <__fp_inf>

000016b6 <__addsf3x>:
    16b6:	e9 2f       	mov	r30, r25
    16b8:	72 d1       	rcall	.+740    	; 0x199e <__fp_split3>
    16ba:	80 f3       	brcs	.-32     	; 0x169c <__addsf3+0x8>
    16bc:	ba 17       	cp	r27, r26
    16be:	62 07       	cpc	r22, r18
    16c0:	73 07       	cpc	r23, r19
    16c2:	84 07       	cpc	r24, r20
    16c4:	95 07       	cpc	r25, r21
    16c6:	18 f0       	brcs	.+6      	; 0x16ce <__addsf3x+0x18>
    16c8:	71 f4       	brne	.+28     	; 0x16e6 <__addsf3x+0x30>
    16ca:	9e f5       	brtc	.+102    	; 0x1732 <__addsf3x+0x7c>
    16cc:	8a c1       	rjmp	.+788    	; 0x19e2 <__fp_zero>
    16ce:	0e f4       	brtc	.+2      	; 0x16d2 <__addsf3x+0x1c>
    16d0:	e0 95       	com	r30
    16d2:	0b 2e       	mov	r0, r27
    16d4:	ba 2f       	mov	r27, r26
    16d6:	a0 2d       	mov	r26, r0
    16d8:	0b 01       	movw	r0, r22
    16da:	b9 01       	movw	r22, r18
    16dc:	90 01       	movw	r18, r0
    16de:	0c 01       	movw	r0, r24
    16e0:	ca 01       	movw	r24, r20
    16e2:	a0 01       	movw	r20, r0
    16e4:	11 24       	eor	r1, r1
    16e6:	ff 27       	eor	r31, r31
    16e8:	59 1b       	sub	r21, r25
    16ea:	99 f0       	breq	.+38     	; 0x1712 <__addsf3x+0x5c>
    16ec:	59 3f       	cpi	r21, 0xF9	; 249
    16ee:	50 f4       	brcc	.+20     	; 0x1704 <__addsf3x+0x4e>
    16f0:	50 3e       	cpi	r21, 0xE0	; 224
    16f2:	68 f1       	brcs	.+90     	; 0x174e <__addsf3x+0x98>
    16f4:	1a 16       	cp	r1, r26
    16f6:	f0 40       	sbci	r31, 0x00	; 0
    16f8:	a2 2f       	mov	r26, r18
    16fa:	23 2f       	mov	r18, r19
    16fc:	34 2f       	mov	r19, r20
    16fe:	44 27       	eor	r20, r20
    1700:	58 5f       	subi	r21, 0xF8	; 248
    1702:	f3 cf       	rjmp	.-26     	; 0x16ea <__addsf3x+0x34>
    1704:	46 95       	lsr	r20
    1706:	37 95       	ror	r19
    1708:	27 95       	ror	r18
    170a:	a7 95       	ror	r26
    170c:	f0 40       	sbci	r31, 0x00	; 0
    170e:	53 95       	inc	r21
    1710:	c9 f7       	brne	.-14     	; 0x1704 <__addsf3x+0x4e>
    1712:	7e f4       	brtc	.+30     	; 0x1732 <__addsf3x+0x7c>
    1714:	1f 16       	cp	r1, r31
    1716:	ba 0b       	sbc	r27, r26
    1718:	62 0b       	sbc	r22, r18
    171a:	73 0b       	sbc	r23, r19
    171c:	84 0b       	sbc	r24, r20
    171e:	ba f0       	brmi	.+46     	; 0x174e <__addsf3x+0x98>
    1720:	91 50       	subi	r25, 0x01	; 1
    1722:	a1 f0       	breq	.+40     	; 0x174c <__addsf3x+0x96>
    1724:	ff 0f       	add	r31, r31
    1726:	bb 1f       	adc	r27, r27
    1728:	66 1f       	adc	r22, r22
    172a:	77 1f       	adc	r23, r23
    172c:	88 1f       	adc	r24, r24
    172e:	c2 f7       	brpl	.-16     	; 0x1720 <__addsf3x+0x6a>
    1730:	0e c0       	rjmp	.+28     	; 0x174e <__addsf3x+0x98>
    1732:	ba 0f       	add	r27, r26
    1734:	62 1f       	adc	r22, r18
    1736:	73 1f       	adc	r23, r19
    1738:	84 1f       	adc	r24, r20
    173a:	48 f4       	brcc	.+18     	; 0x174e <__addsf3x+0x98>
    173c:	87 95       	ror	r24
    173e:	77 95       	ror	r23
    1740:	67 95       	ror	r22
    1742:	b7 95       	ror	r27
    1744:	f7 95       	ror	r31
    1746:	9e 3f       	cpi	r25, 0xFE	; 254
    1748:	08 f0       	brcs	.+2      	; 0x174c <__addsf3x+0x96>
    174a:	b3 cf       	rjmp	.-154    	; 0x16b2 <__addsf3+0x1e>
    174c:	93 95       	inc	r25
    174e:	88 0f       	add	r24, r24
    1750:	08 f0       	brcs	.+2      	; 0x1754 <__addsf3x+0x9e>
    1752:	99 27       	eor	r25, r25
    1754:	ee 0f       	add	r30, r30
    1756:	97 95       	ror	r25
    1758:	87 95       	ror	r24
    175a:	08 95       	ret

0000175c <__cmpsf2>:
    175c:	d4 d0       	rcall	.+424    	; 0x1906 <__fp_cmp>
    175e:	08 f4       	brcc	.+2      	; 0x1762 <__cmpsf2+0x6>
    1760:	81 e0       	ldi	r24, 0x01	; 1
    1762:	08 95       	ret

00001764 <__divsf3>:
    1764:	0c d0       	rcall	.+24     	; 0x177e <__divsf3x>
    1766:	0a c1       	rjmp	.+532    	; 0x197c <__fp_round>
    1768:	02 d1       	rcall	.+516    	; 0x196e <__fp_pscB>
    176a:	40 f0       	brcs	.+16     	; 0x177c <__divsf3+0x18>
    176c:	f9 d0       	rcall	.+498    	; 0x1960 <__fp_pscA>
    176e:	30 f0       	brcs	.+12     	; 0x177c <__divsf3+0x18>
    1770:	21 f4       	brne	.+8      	; 0x177a <__divsf3+0x16>
    1772:	5f 3f       	cpi	r21, 0xFF	; 255
    1774:	19 f0       	breq	.+6      	; 0x177c <__divsf3+0x18>
    1776:	eb c0       	rjmp	.+470    	; 0x194e <__fp_inf>
    1778:	51 11       	cpse	r21, r1
    177a:	34 c1       	rjmp	.+616    	; 0x19e4 <__fp_szero>
    177c:	ee c0       	rjmp	.+476    	; 0x195a <__fp_nan>

0000177e <__divsf3x>:
    177e:	0f d1       	rcall	.+542    	; 0x199e <__fp_split3>
    1780:	98 f3       	brcs	.-26     	; 0x1768 <__divsf3+0x4>

00001782 <__divsf3_pse>:
    1782:	99 23       	and	r25, r25
    1784:	c9 f3       	breq	.-14     	; 0x1778 <__divsf3+0x14>
    1786:	55 23       	and	r21, r21
    1788:	b1 f3       	breq	.-20     	; 0x1776 <__divsf3+0x12>
    178a:	95 1b       	sub	r25, r21
    178c:	55 0b       	sbc	r21, r21
    178e:	bb 27       	eor	r27, r27
    1790:	aa 27       	eor	r26, r26
    1792:	62 17       	cp	r22, r18
    1794:	73 07       	cpc	r23, r19
    1796:	84 07       	cpc	r24, r20
    1798:	38 f0       	brcs	.+14     	; 0x17a8 <__divsf3_pse+0x26>
    179a:	9f 5f       	subi	r25, 0xFF	; 255
    179c:	5f 4f       	sbci	r21, 0xFF	; 255
    179e:	22 0f       	add	r18, r18
    17a0:	33 1f       	adc	r19, r19
    17a2:	44 1f       	adc	r20, r20
    17a4:	aa 1f       	adc	r26, r26
    17a6:	a9 f3       	breq	.-22     	; 0x1792 <__divsf3_pse+0x10>
    17a8:	33 d0       	rcall	.+102    	; 0x1810 <__divsf3_pse+0x8e>
    17aa:	0e 2e       	mov	r0, r30
    17ac:	3a f0       	brmi	.+14     	; 0x17bc <__divsf3_pse+0x3a>
    17ae:	e0 e8       	ldi	r30, 0x80	; 128
    17b0:	30 d0       	rcall	.+96     	; 0x1812 <__divsf3_pse+0x90>
    17b2:	91 50       	subi	r25, 0x01	; 1
    17b4:	50 40       	sbci	r21, 0x00	; 0
    17b6:	e6 95       	lsr	r30
    17b8:	00 1c       	adc	r0, r0
    17ba:	ca f7       	brpl	.-14     	; 0x17ae <__divsf3_pse+0x2c>
    17bc:	29 d0       	rcall	.+82     	; 0x1810 <__divsf3_pse+0x8e>
    17be:	fe 2f       	mov	r31, r30
    17c0:	27 d0       	rcall	.+78     	; 0x1810 <__divsf3_pse+0x8e>
    17c2:	66 0f       	add	r22, r22
    17c4:	77 1f       	adc	r23, r23
    17c6:	88 1f       	adc	r24, r24
    17c8:	bb 1f       	adc	r27, r27
    17ca:	26 17       	cp	r18, r22
    17cc:	37 07       	cpc	r19, r23
    17ce:	48 07       	cpc	r20, r24
    17d0:	ab 07       	cpc	r26, r27
    17d2:	b0 e8       	ldi	r27, 0x80	; 128
    17d4:	09 f0       	breq	.+2      	; 0x17d8 <__divsf3_pse+0x56>
    17d6:	bb 0b       	sbc	r27, r27
    17d8:	80 2d       	mov	r24, r0
    17da:	bf 01       	movw	r22, r30
    17dc:	ff 27       	eor	r31, r31
    17de:	93 58       	subi	r25, 0x83	; 131
    17e0:	5f 4f       	sbci	r21, 0xFF	; 255
    17e2:	2a f0       	brmi	.+10     	; 0x17ee <__divsf3_pse+0x6c>
    17e4:	9e 3f       	cpi	r25, 0xFE	; 254
    17e6:	51 05       	cpc	r21, r1
    17e8:	68 f0       	brcs	.+26     	; 0x1804 <__divsf3_pse+0x82>
    17ea:	b1 c0       	rjmp	.+354    	; 0x194e <__fp_inf>
    17ec:	fb c0       	rjmp	.+502    	; 0x19e4 <__fp_szero>
    17ee:	5f 3f       	cpi	r21, 0xFF	; 255
    17f0:	ec f3       	brlt	.-6      	; 0x17ec <__divsf3_pse+0x6a>
    17f2:	98 3e       	cpi	r25, 0xE8	; 232
    17f4:	dc f3       	brlt	.-10     	; 0x17ec <__divsf3_pse+0x6a>
    17f6:	86 95       	lsr	r24
    17f8:	77 95       	ror	r23
    17fa:	67 95       	ror	r22
    17fc:	b7 95       	ror	r27
    17fe:	f7 95       	ror	r31
    1800:	9f 5f       	subi	r25, 0xFF	; 255
    1802:	c9 f7       	brne	.-14     	; 0x17f6 <__divsf3_pse+0x74>
    1804:	88 0f       	add	r24, r24
    1806:	91 1d       	adc	r25, r1
    1808:	96 95       	lsr	r25
    180a:	87 95       	ror	r24
    180c:	97 f9       	bld	r25, 7
    180e:	08 95       	ret
    1810:	e1 e0       	ldi	r30, 0x01	; 1
    1812:	66 0f       	add	r22, r22
    1814:	77 1f       	adc	r23, r23
    1816:	88 1f       	adc	r24, r24
    1818:	bb 1f       	adc	r27, r27
    181a:	62 17       	cp	r22, r18
    181c:	73 07       	cpc	r23, r19
    181e:	84 07       	cpc	r24, r20
    1820:	ba 07       	cpc	r27, r26
    1822:	20 f0       	brcs	.+8      	; 0x182c <__divsf3_pse+0xaa>
    1824:	62 1b       	sub	r22, r18
    1826:	73 0b       	sbc	r23, r19
    1828:	84 0b       	sbc	r24, r20
    182a:	ba 0b       	sbc	r27, r26
    182c:	ee 1f       	adc	r30, r30
    182e:	88 f7       	brcc	.-30     	; 0x1812 <__divsf3_pse+0x90>
    1830:	e0 95       	com	r30
    1832:	08 95       	ret

00001834 <__fixunssfsi>:
    1834:	bc d0       	rcall	.+376    	; 0x19ae <__fp_splitA>
    1836:	88 f0       	brcs	.+34     	; 0x185a <__fixunssfsi+0x26>
    1838:	9f 57       	subi	r25, 0x7F	; 127
    183a:	90 f0       	brcs	.+36     	; 0x1860 <__fixunssfsi+0x2c>
    183c:	b9 2f       	mov	r27, r25
    183e:	99 27       	eor	r25, r25
    1840:	b7 51       	subi	r27, 0x17	; 23
    1842:	a0 f0       	brcs	.+40     	; 0x186c <__fixunssfsi+0x38>
    1844:	d1 f0       	breq	.+52     	; 0x187a <__fixunssfsi+0x46>
    1846:	66 0f       	add	r22, r22
    1848:	77 1f       	adc	r23, r23
    184a:	88 1f       	adc	r24, r24
    184c:	99 1f       	adc	r25, r25
    184e:	1a f0       	brmi	.+6      	; 0x1856 <__fixunssfsi+0x22>
    1850:	ba 95       	dec	r27
    1852:	c9 f7       	brne	.-14     	; 0x1846 <__fixunssfsi+0x12>
    1854:	12 c0       	rjmp	.+36     	; 0x187a <__fixunssfsi+0x46>
    1856:	b1 30       	cpi	r27, 0x01	; 1
    1858:	81 f0       	breq	.+32     	; 0x187a <__fixunssfsi+0x46>
    185a:	c3 d0       	rcall	.+390    	; 0x19e2 <__fp_zero>
    185c:	b1 e0       	ldi	r27, 0x01	; 1
    185e:	08 95       	ret
    1860:	c0 c0       	rjmp	.+384    	; 0x19e2 <__fp_zero>
    1862:	67 2f       	mov	r22, r23
    1864:	78 2f       	mov	r23, r24
    1866:	88 27       	eor	r24, r24
    1868:	b8 5f       	subi	r27, 0xF8	; 248
    186a:	39 f0       	breq	.+14     	; 0x187a <__fixunssfsi+0x46>
    186c:	b9 3f       	cpi	r27, 0xF9	; 249
    186e:	cc f3       	brlt	.-14     	; 0x1862 <__fixunssfsi+0x2e>
    1870:	86 95       	lsr	r24
    1872:	77 95       	ror	r23
    1874:	67 95       	ror	r22
    1876:	b3 95       	inc	r27
    1878:	d9 f7       	brne	.-10     	; 0x1870 <__fixunssfsi+0x3c>
    187a:	3e f4       	brtc	.+14     	; 0x188a <__fixunssfsi+0x56>
    187c:	90 95       	com	r25
    187e:	80 95       	com	r24
    1880:	70 95       	com	r23
    1882:	61 95       	neg	r22
    1884:	7f 4f       	sbci	r23, 0xFF	; 255
    1886:	8f 4f       	sbci	r24, 0xFF	; 255
    1888:	9f 4f       	sbci	r25, 0xFF	; 255
    188a:	08 95       	ret

0000188c <__floatunsisf>:
    188c:	e8 94       	clt
    188e:	09 c0       	rjmp	.+18     	; 0x18a2 <__floatsisf+0x12>

00001890 <__floatsisf>:
    1890:	97 fb       	bst	r25, 7
    1892:	3e f4       	brtc	.+14     	; 0x18a2 <__floatsisf+0x12>
    1894:	90 95       	com	r25
    1896:	80 95       	com	r24
    1898:	70 95       	com	r23
    189a:	61 95       	neg	r22
    189c:	7f 4f       	sbci	r23, 0xFF	; 255
    189e:	8f 4f       	sbci	r24, 0xFF	; 255
    18a0:	9f 4f       	sbci	r25, 0xFF	; 255
    18a2:	99 23       	and	r25, r25
    18a4:	a9 f0       	breq	.+42     	; 0x18d0 <__floatsisf+0x40>
    18a6:	f9 2f       	mov	r31, r25
    18a8:	96 e9       	ldi	r25, 0x96	; 150
    18aa:	bb 27       	eor	r27, r27
    18ac:	93 95       	inc	r25
    18ae:	f6 95       	lsr	r31
    18b0:	87 95       	ror	r24
    18b2:	77 95       	ror	r23
    18b4:	67 95       	ror	r22
    18b6:	b7 95       	ror	r27
    18b8:	f1 11       	cpse	r31, r1
    18ba:	f8 cf       	rjmp	.-16     	; 0x18ac <__floatsisf+0x1c>
    18bc:	fa f4       	brpl	.+62     	; 0x18fc <__floatsisf+0x6c>
    18be:	bb 0f       	add	r27, r27
    18c0:	11 f4       	brne	.+4      	; 0x18c6 <__floatsisf+0x36>
    18c2:	60 ff       	sbrs	r22, 0
    18c4:	1b c0       	rjmp	.+54     	; 0x18fc <__floatsisf+0x6c>
    18c6:	6f 5f       	subi	r22, 0xFF	; 255
    18c8:	7f 4f       	sbci	r23, 0xFF	; 255
    18ca:	8f 4f       	sbci	r24, 0xFF	; 255
    18cc:	9f 4f       	sbci	r25, 0xFF	; 255
    18ce:	16 c0       	rjmp	.+44     	; 0x18fc <__floatsisf+0x6c>
    18d0:	88 23       	and	r24, r24
    18d2:	11 f0       	breq	.+4      	; 0x18d8 <__floatsisf+0x48>
    18d4:	96 e9       	ldi	r25, 0x96	; 150
    18d6:	11 c0       	rjmp	.+34     	; 0x18fa <__floatsisf+0x6a>
    18d8:	77 23       	and	r23, r23
    18da:	21 f0       	breq	.+8      	; 0x18e4 <__floatsisf+0x54>
    18dc:	9e e8       	ldi	r25, 0x8E	; 142
    18de:	87 2f       	mov	r24, r23
    18e0:	76 2f       	mov	r23, r22
    18e2:	05 c0       	rjmp	.+10     	; 0x18ee <__floatsisf+0x5e>
    18e4:	66 23       	and	r22, r22
    18e6:	71 f0       	breq	.+28     	; 0x1904 <__floatsisf+0x74>
    18e8:	96 e8       	ldi	r25, 0x86	; 134
    18ea:	86 2f       	mov	r24, r22
    18ec:	70 e0       	ldi	r23, 0x00	; 0
    18ee:	60 e0       	ldi	r22, 0x00	; 0
    18f0:	2a f0       	brmi	.+10     	; 0x18fc <__floatsisf+0x6c>
    18f2:	9a 95       	dec	r25
    18f4:	66 0f       	add	r22, r22
    18f6:	77 1f       	adc	r23, r23
    18f8:	88 1f       	adc	r24, r24
    18fa:	da f7       	brpl	.-10     	; 0x18f2 <__floatsisf+0x62>
    18fc:	88 0f       	add	r24, r24
    18fe:	96 95       	lsr	r25
    1900:	87 95       	ror	r24
    1902:	97 f9       	bld	r25, 7
    1904:	08 95       	ret

00001906 <__fp_cmp>:
    1906:	99 0f       	add	r25, r25
    1908:	00 08       	sbc	r0, r0
    190a:	55 0f       	add	r21, r21
    190c:	aa 0b       	sbc	r26, r26
    190e:	e0 e8       	ldi	r30, 0x80	; 128
    1910:	fe ef       	ldi	r31, 0xFE	; 254
    1912:	16 16       	cp	r1, r22
    1914:	17 06       	cpc	r1, r23
    1916:	e8 07       	cpc	r30, r24
    1918:	f9 07       	cpc	r31, r25
    191a:	c0 f0       	brcs	.+48     	; 0x194c <__fp_cmp+0x46>
    191c:	12 16       	cp	r1, r18
    191e:	13 06       	cpc	r1, r19
    1920:	e4 07       	cpc	r30, r20
    1922:	f5 07       	cpc	r31, r21
    1924:	98 f0       	brcs	.+38     	; 0x194c <__fp_cmp+0x46>
    1926:	62 1b       	sub	r22, r18
    1928:	73 0b       	sbc	r23, r19
    192a:	84 0b       	sbc	r24, r20
    192c:	95 0b       	sbc	r25, r21
    192e:	39 f4       	brne	.+14     	; 0x193e <__fp_cmp+0x38>
    1930:	0a 26       	eor	r0, r26
    1932:	61 f0       	breq	.+24     	; 0x194c <__fp_cmp+0x46>
    1934:	23 2b       	or	r18, r19
    1936:	24 2b       	or	r18, r20
    1938:	25 2b       	or	r18, r21
    193a:	21 f4       	brne	.+8      	; 0x1944 <__fp_cmp+0x3e>
    193c:	08 95       	ret
    193e:	0a 26       	eor	r0, r26
    1940:	09 f4       	brne	.+2      	; 0x1944 <__fp_cmp+0x3e>
    1942:	a1 40       	sbci	r26, 0x01	; 1
    1944:	a6 95       	lsr	r26
    1946:	8f ef       	ldi	r24, 0xFF	; 255
    1948:	81 1d       	adc	r24, r1
    194a:	81 1d       	adc	r24, r1
    194c:	08 95       	ret

0000194e <__fp_inf>:
    194e:	97 f9       	bld	r25, 7
    1950:	9f 67       	ori	r25, 0x7F	; 127
    1952:	80 e8       	ldi	r24, 0x80	; 128
    1954:	70 e0       	ldi	r23, 0x00	; 0
    1956:	60 e0       	ldi	r22, 0x00	; 0
    1958:	08 95       	ret

0000195a <__fp_nan>:
    195a:	9f ef       	ldi	r25, 0xFF	; 255
    195c:	80 ec       	ldi	r24, 0xC0	; 192
    195e:	08 95       	ret

00001960 <__fp_pscA>:
    1960:	00 24       	eor	r0, r0
    1962:	0a 94       	dec	r0
    1964:	16 16       	cp	r1, r22
    1966:	17 06       	cpc	r1, r23
    1968:	18 06       	cpc	r1, r24
    196a:	09 06       	cpc	r0, r25
    196c:	08 95       	ret

0000196e <__fp_pscB>:
    196e:	00 24       	eor	r0, r0
    1970:	0a 94       	dec	r0
    1972:	12 16       	cp	r1, r18
    1974:	13 06       	cpc	r1, r19
    1976:	14 06       	cpc	r1, r20
    1978:	05 06       	cpc	r0, r21
    197a:	08 95       	ret

0000197c <__fp_round>:
    197c:	09 2e       	mov	r0, r25
    197e:	03 94       	inc	r0
    1980:	00 0c       	add	r0, r0
    1982:	11 f4       	brne	.+4      	; 0x1988 <__fp_round+0xc>
    1984:	88 23       	and	r24, r24
    1986:	52 f0       	brmi	.+20     	; 0x199c <__fp_round+0x20>
    1988:	bb 0f       	add	r27, r27
    198a:	40 f4       	brcc	.+16     	; 0x199c <__fp_round+0x20>
    198c:	bf 2b       	or	r27, r31
    198e:	11 f4       	brne	.+4      	; 0x1994 <__fp_round+0x18>
    1990:	60 ff       	sbrs	r22, 0
    1992:	04 c0       	rjmp	.+8      	; 0x199c <__fp_round+0x20>
    1994:	6f 5f       	subi	r22, 0xFF	; 255
    1996:	7f 4f       	sbci	r23, 0xFF	; 255
    1998:	8f 4f       	sbci	r24, 0xFF	; 255
    199a:	9f 4f       	sbci	r25, 0xFF	; 255
    199c:	08 95       	ret

0000199e <__fp_split3>:
    199e:	57 fd       	sbrc	r21, 7
    19a0:	90 58       	subi	r25, 0x80	; 128
    19a2:	44 0f       	add	r20, r20
    19a4:	55 1f       	adc	r21, r21
    19a6:	59 f0       	breq	.+22     	; 0x19be <__fp_splitA+0x10>
    19a8:	5f 3f       	cpi	r21, 0xFF	; 255
    19aa:	71 f0       	breq	.+28     	; 0x19c8 <__fp_splitA+0x1a>
    19ac:	47 95       	ror	r20

000019ae <__fp_splitA>:
    19ae:	88 0f       	add	r24, r24
    19b0:	97 fb       	bst	r25, 7
    19b2:	99 1f       	adc	r25, r25
    19b4:	61 f0       	breq	.+24     	; 0x19ce <__fp_splitA+0x20>
    19b6:	9f 3f       	cpi	r25, 0xFF	; 255
    19b8:	79 f0       	breq	.+30     	; 0x19d8 <__fp_splitA+0x2a>
    19ba:	87 95       	ror	r24
    19bc:	08 95       	ret
    19be:	12 16       	cp	r1, r18
    19c0:	13 06       	cpc	r1, r19
    19c2:	14 06       	cpc	r1, r20
    19c4:	55 1f       	adc	r21, r21
    19c6:	f2 cf       	rjmp	.-28     	; 0x19ac <__fp_split3+0xe>
    19c8:	46 95       	lsr	r20
    19ca:	f1 df       	rcall	.-30     	; 0x19ae <__fp_splitA>
    19cc:	08 c0       	rjmp	.+16     	; 0x19de <__fp_splitA+0x30>
    19ce:	16 16       	cp	r1, r22
    19d0:	17 06       	cpc	r1, r23
    19d2:	18 06       	cpc	r1, r24
    19d4:	99 1f       	adc	r25, r25
    19d6:	f1 cf       	rjmp	.-30     	; 0x19ba <__fp_splitA+0xc>
    19d8:	86 95       	lsr	r24
    19da:	71 05       	cpc	r23, r1
    19dc:	61 05       	cpc	r22, r1
    19de:	08 94       	sec
    19e0:	08 95       	ret

000019e2 <__fp_zero>:
    19e2:	e8 94       	clt

000019e4 <__fp_szero>:
    19e4:	bb 27       	eor	r27, r27
    19e6:	66 27       	eor	r22, r22
    19e8:	77 27       	eor	r23, r23
    19ea:	cb 01       	movw	r24, r22
    19ec:	97 f9       	bld	r25, 7
    19ee:	08 95       	ret

000019f0 <__mulsf3>:
    19f0:	0b d0       	rcall	.+22     	; 0x1a08 <__mulsf3x>
    19f2:	c4 cf       	rjmp	.-120    	; 0x197c <__fp_round>
    19f4:	b5 df       	rcall	.-150    	; 0x1960 <__fp_pscA>
    19f6:	28 f0       	brcs	.+10     	; 0x1a02 <__mulsf3+0x12>
    19f8:	ba df       	rcall	.-140    	; 0x196e <__fp_pscB>
    19fa:	18 f0       	brcs	.+6      	; 0x1a02 <__mulsf3+0x12>
    19fc:	95 23       	and	r25, r21
    19fe:	09 f0       	breq	.+2      	; 0x1a02 <__mulsf3+0x12>
    1a00:	a6 cf       	rjmp	.-180    	; 0x194e <__fp_inf>
    1a02:	ab cf       	rjmp	.-170    	; 0x195a <__fp_nan>
    1a04:	11 24       	eor	r1, r1
    1a06:	ee cf       	rjmp	.-36     	; 0x19e4 <__fp_szero>

00001a08 <__mulsf3x>:
    1a08:	ca df       	rcall	.-108    	; 0x199e <__fp_split3>
    1a0a:	a0 f3       	brcs	.-24     	; 0x19f4 <__mulsf3+0x4>

00001a0c <__mulsf3_pse>:
    1a0c:	95 9f       	mul	r25, r21
    1a0e:	d1 f3       	breq	.-12     	; 0x1a04 <__mulsf3+0x14>
    1a10:	95 0f       	add	r25, r21
    1a12:	50 e0       	ldi	r21, 0x00	; 0
    1a14:	55 1f       	adc	r21, r21
    1a16:	62 9f       	mul	r22, r18
    1a18:	f0 01       	movw	r30, r0
    1a1a:	72 9f       	mul	r23, r18
    1a1c:	bb 27       	eor	r27, r27
    1a1e:	f0 0d       	add	r31, r0
    1a20:	b1 1d       	adc	r27, r1
    1a22:	63 9f       	mul	r22, r19
    1a24:	aa 27       	eor	r26, r26
    1a26:	f0 0d       	add	r31, r0
    1a28:	b1 1d       	adc	r27, r1
    1a2a:	aa 1f       	adc	r26, r26
    1a2c:	64 9f       	mul	r22, r20
    1a2e:	66 27       	eor	r22, r22
    1a30:	b0 0d       	add	r27, r0
    1a32:	a1 1d       	adc	r26, r1
    1a34:	66 1f       	adc	r22, r22
    1a36:	82 9f       	mul	r24, r18
    1a38:	22 27       	eor	r18, r18
    1a3a:	b0 0d       	add	r27, r0
    1a3c:	a1 1d       	adc	r26, r1
    1a3e:	62 1f       	adc	r22, r18
    1a40:	73 9f       	mul	r23, r19
    1a42:	b0 0d       	add	r27, r0
    1a44:	a1 1d       	adc	r26, r1
    1a46:	62 1f       	adc	r22, r18
    1a48:	83 9f       	mul	r24, r19
    1a4a:	a0 0d       	add	r26, r0
    1a4c:	61 1d       	adc	r22, r1
    1a4e:	22 1f       	adc	r18, r18
    1a50:	74 9f       	mul	r23, r20
    1a52:	33 27       	eor	r19, r19
    1a54:	a0 0d       	add	r26, r0
    1a56:	61 1d       	adc	r22, r1
    1a58:	23 1f       	adc	r18, r19
    1a5a:	84 9f       	mul	r24, r20
    1a5c:	60 0d       	add	r22, r0
    1a5e:	21 1d       	adc	r18, r1
    1a60:	82 2f       	mov	r24, r18
    1a62:	76 2f       	mov	r23, r22
    1a64:	6a 2f       	mov	r22, r26
    1a66:	11 24       	eor	r1, r1
    1a68:	9f 57       	subi	r25, 0x7F	; 127
    1a6a:	50 40       	sbci	r21, 0x00	; 0
    1a6c:	8a f0       	brmi	.+34     	; 0x1a90 <__mulsf3_pse+0x84>
    1a6e:	e1 f0       	breq	.+56     	; 0x1aa8 <__mulsf3_pse+0x9c>
    1a70:	88 23       	and	r24, r24
    1a72:	4a f0       	brmi	.+18     	; 0x1a86 <__mulsf3_pse+0x7a>
    1a74:	ee 0f       	add	r30, r30
    1a76:	ff 1f       	adc	r31, r31
    1a78:	bb 1f       	adc	r27, r27
    1a7a:	66 1f       	adc	r22, r22
    1a7c:	77 1f       	adc	r23, r23
    1a7e:	88 1f       	adc	r24, r24
    1a80:	91 50       	subi	r25, 0x01	; 1
    1a82:	50 40       	sbci	r21, 0x00	; 0
    1a84:	a9 f7       	brne	.-22     	; 0x1a70 <__mulsf3_pse+0x64>
    1a86:	9e 3f       	cpi	r25, 0xFE	; 254
    1a88:	51 05       	cpc	r21, r1
    1a8a:	70 f0       	brcs	.+28     	; 0x1aa8 <__mulsf3_pse+0x9c>
    1a8c:	60 cf       	rjmp	.-320    	; 0x194e <__fp_inf>
    1a8e:	aa cf       	rjmp	.-172    	; 0x19e4 <__fp_szero>
    1a90:	5f 3f       	cpi	r21, 0xFF	; 255
    1a92:	ec f3       	brlt	.-6      	; 0x1a8e <__mulsf3_pse+0x82>
    1a94:	98 3e       	cpi	r25, 0xE8	; 232
    1a96:	dc f3       	brlt	.-10     	; 0x1a8e <__mulsf3_pse+0x82>
    1a98:	86 95       	lsr	r24
    1a9a:	77 95       	ror	r23
    1a9c:	67 95       	ror	r22
    1a9e:	b7 95       	ror	r27
    1aa0:	f7 95       	ror	r31
    1aa2:	e7 95       	ror	r30
    1aa4:	9f 5f       	subi	r25, 0xFF	; 255
    1aa6:	c1 f7       	brne	.-16     	; 0x1a98 <__mulsf3_pse+0x8c>
    1aa8:	fe 2b       	or	r31, r30
    1aaa:	88 0f       	add	r24, r24
    1aac:	91 1d       	adc	r25, r1
    1aae:	96 95       	lsr	r25
    1ab0:	87 95       	ror	r24
    1ab2:	97 f9       	bld	r25, 7
    1ab4:	08 95       	ret

00001ab6 <__udivmodsi4>:
    1ab6:	a1 e2       	ldi	r26, 0x21	; 33
    1ab8:	1a 2e       	mov	r1, r26
    1aba:	aa 1b       	sub	r26, r26
    1abc:	bb 1b       	sub	r27, r27
    1abe:	fd 01       	movw	r30, r26
    1ac0:	0d c0       	rjmp	.+26     	; 0x1adc <__udivmodsi4_ep>

00001ac2 <__udivmodsi4_loop>:
    1ac2:	aa 1f       	adc	r26, r26
    1ac4:	bb 1f       	adc	r27, r27
    1ac6:	ee 1f       	adc	r30, r30
    1ac8:	ff 1f       	adc	r31, r31
    1aca:	a2 17       	cp	r26, r18
    1acc:	b3 07       	cpc	r27, r19
    1ace:	e4 07       	cpc	r30, r20
    1ad0:	f5 07       	cpc	r31, r21
    1ad2:	20 f0       	brcs	.+8      	; 0x1adc <__udivmodsi4_ep>
    1ad4:	a2 1b       	sub	r26, r18
    1ad6:	b3 0b       	sbc	r27, r19
    1ad8:	e4 0b       	sbc	r30, r20
    1ada:	f5 0b       	sbc	r31, r21

00001adc <__udivmodsi4_ep>:
    1adc:	66 1f       	adc	r22, r22
    1ade:	77 1f       	adc	r23, r23
    1ae0:	88 1f       	adc	r24, r24
    1ae2:	99 1f       	adc	r25, r25
    1ae4:	1a 94       	dec	r1
    1ae6:	69 f7       	brne	.-38     	; 0x1ac2 <__udivmodsi4_loop>
    1ae8:	60 95       	com	r22
    1aea:	70 95       	com	r23
    1aec:	80 95       	com	r24
    1aee:	90 95       	com	r25
    1af0:	9b 01       	movw	r18, r22
    1af2:	ac 01       	movw	r20, r24
    1af4:	bd 01       	movw	r22, r26
    1af6:	cf 01       	movw	r24, r30
    1af8:	08 95       	ret

00001afa <snprintf>:
    1afa:	ae e0       	ldi	r26, 0x0E	; 14
    1afc:	b0 e0       	ldi	r27, 0x00	; 0
    1afe:	e3 e8       	ldi	r30, 0x83	; 131
    1b00:	fd e0       	ldi	r31, 0x0D	; 13
    1b02:	0c 94 39 10 	jmp	0x2072	; 0x2072 <__prologue_saves__+0x1c>
    1b06:	0d 89       	ldd	r16, Y+21	; 0x15
    1b08:	1e 89       	ldd	r17, Y+22	; 0x16
    1b0a:	8f 89       	ldd	r24, Y+23	; 0x17
    1b0c:	98 8d       	ldd	r25, Y+24	; 0x18
    1b0e:	26 e0       	ldi	r18, 0x06	; 6
    1b10:	2c 83       	std	Y+4, r18	; 0x04
    1b12:	1a 83       	std	Y+2, r17	; 0x02
    1b14:	09 83       	std	Y+1, r16	; 0x01
    1b16:	97 ff       	sbrs	r25, 7
    1b18:	02 c0       	rjmp	.+4      	; 0x1b1e <snprintf+0x24>
    1b1a:	80 e0       	ldi	r24, 0x00	; 0
    1b1c:	90 e8       	ldi	r25, 0x80	; 128
    1b1e:	01 97       	sbiw	r24, 0x01	; 1
    1b20:	9e 83       	std	Y+6, r25	; 0x06
    1b22:	8d 83       	std	Y+5, r24	; 0x05
    1b24:	ae 01       	movw	r20, r28
    1b26:	45 5e       	subi	r20, 0xE5	; 229
    1b28:	5f 4f       	sbci	r21, 0xFF	; 255
    1b2a:	ce 01       	movw	r24, r28
    1b2c:	01 96       	adiw	r24, 0x01	; 1
    1b2e:	69 8d       	ldd	r22, Y+25	; 0x19
    1b30:	7a 8d       	ldd	r23, Y+26	; 0x1a
    1b32:	0e 94 ad 0d 	call	0x1b5a	; 0x1b5a <vfprintf>
    1b36:	4d 81       	ldd	r20, Y+5	; 0x05
    1b38:	5e 81       	ldd	r21, Y+6	; 0x06
    1b3a:	57 fd       	sbrc	r21, 7
    1b3c:	0a c0       	rjmp	.+20     	; 0x1b52 <snprintf+0x58>
    1b3e:	2f 81       	ldd	r18, Y+7	; 0x07
    1b40:	38 85       	ldd	r19, Y+8	; 0x08
    1b42:	42 17       	cp	r20, r18
    1b44:	53 07       	cpc	r21, r19
    1b46:	0c f4       	brge	.+2      	; 0x1b4a <snprintf+0x50>
    1b48:	9a 01       	movw	r18, r20
    1b4a:	02 0f       	add	r16, r18
    1b4c:	13 1f       	adc	r17, r19
    1b4e:	f8 01       	movw	r30, r16
    1b50:	10 82       	st	Z, r1
    1b52:	2e 96       	adiw	r28, 0x0e	; 14
    1b54:	e4 e0       	ldi	r30, 0x04	; 4
    1b56:	0c 94 55 10 	jmp	0x20aa	; 0x20aa <__epilogue_restores__+0x1c>

00001b5a <vfprintf>:
    1b5a:	ad e0       	ldi	r26, 0x0D	; 13
    1b5c:	b0 e0       	ldi	r27, 0x00	; 0
    1b5e:	e3 eb       	ldi	r30, 0xB3	; 179
    1b60:	fd e0       	ldi	r31, 0x0D	; 13
    1b62:	0c 94 2b 10 	jmp	0x2056	; 0x2056 <__prologue_saves__>
    1b66:	3c 01       	movw	r6, r24
    1b68:	7d 87       	std	Y+13, r23	; 0x0d
    1b6a:	6c 87       	std	Y+12, r22	; 0x0c
    1b6c:	5a 01       	movw	r10, r20
    1b6e:	fc 01       	movw	r30, r24
    1b70:	17 82       	std	Z+7, r1	; 0x07
    1b72:	16 82       	std	Z+6, r1	; 0x06
    1b74:	83 81       	ldd	r24, Z+3	; 0x03
    1b76:	81 ff       	sbrs	r24, 1
    1b78:	c8 c1       	rjmp	.+912    	; 0x1f0a <vfprintf+0x3b0>
    1b7a:	2e 01       	movw	r4, r28
    1b7c:	08 94       	sec
    1b7e:	41 1c       	adc	r4, r1
    1b80:	51 1c       	adc	r5, r1
    1b82:	f3 01       	movw	r30, r6
    1b84:	93 81       	ldd	r25, Z+3	; 0x03
    1b86:	ec 85       	ldd	r30, Y+12	; 0x0c
    1b88:	fd 85       	ldd	r31, Y+13	; 0x0d
    1b8a:	93 fd       	sbrc	r25, 3
    1b8c:	85 91       	lpm	r24, Z+
    1b8e:	93 ff       	sbrs	r25, 3
    1b90:	81 91       	ld	r24, Z+
    1b92:	fd 87       	std	Y+13, r31	; 0x0d
    1b94:	ec 87       	std	Y+12, r30	; 0x0c
    1b96:	88 23       	and	r24, r24
    1b98:	09 f4       	brne	.+2      	; 0x1b9c <vfprintf+0x42>
    1b9a:	b3 c1       	rjmp	.+870    	; 0x1f02 <vfprintf+0x3a8>
    1b9c:	85 32       	cpi	r24, 0x25	; 37
    1b9e:	41 f4       	brne	.+16     	; 0x1bb0 <vfprintf+0x56>
    1ba0:	93 fd       	sbrc	r25, 3
    1ba2:	85 91       	lpm	r24, Z+
    1ba4:	93 ff       	sbrs	r25, 3
    1ba6:	81 91       	ld	r24, Z+
    1ba8:	fd 87       	std	Y+13, r31	; 0x0d
    1baa:	ec 87       	std	Y+12, r30	; 0x0c
    1bac:	85 32       	cpi	r24, 0x25	; 37
    1bae:	29 f4       	brne	.+10     	; 0x1bba <vfprintf+0x60>
    1bb0:	90 e0       	ldi	r25, 0x00	; 0
    1bb2:	b3 01       	movw	r22, r6
    1bb4:	0e 94 a1 0f 	call	0x1f42	; 0x1f42 <fputc>
    1bb8:	e4 cf       	rjmp	.-56     	; 0x1b82 <vfprintf+0x28>
    1bba:	ff 24       	eor	r15, r15
    1bbc:	ee 24       	eor	r14, r14
    1bbe:	10 e0       	ldi	r17, 0x00	; 0
    1bc0:	10 32       	cpi	r17, 0x20	; 32
    1bc2:	b0 f4       	brcc	.+44     	; 0x1bf0 <vfprintf+0x96>
    1bc4:	8b 32       	cpi	r24, 0x2B	; 43
    1bc6:	69 f0       	breq	.+26     	; 0x1be2 <vfprintf+0x88>
    1bc8:	8c 32       	cpi	r24, 0x2C	; 44
    1bca:	28 f4       	brcc	.+10     	; 0x1bd6 <vfprintf+0x7c>
    1bcc:	80 32       	cpi	r24, 0x20	; 32
    1bce:	51 f0       	breq	.+20     	; 0x1be4 <vfprintf+0x8a>
    1bd0:	83 32       	cpi	r24, 0x23	; 35
    1bd2:	71 f4       	brne	.+28     	; 0x1bf0 <vfprintf+0x96>
    1bd4:	0b c0       	rjmp	.+22     	; 0x1bec <vfprintf+0x92>
    1bd6:	8d 32       	cpi	r24, 0x2D	; 45
    1bd8:	39 f0       	breq	.+14     	; 0x1be8 <vfprintf+0x8e>
    1bda:	80 33       	cpi	r24, 0x30	; 48
    1bdc:	49 f4       	brne	.+18     	; 0x1bf0 <vfprintf+0x96>
    1bde:	11 60       	ori	r17, 0x01	; 1
    1be0:	2c c0       	rjmp	.+88     	; 0x1c3a <vfprintf+0xe0>
    1be2:	12 60       	ori	r17, 0x02	; 2
    1be4:	14 60       	ori	r17, 0x04	; 4
    1be6:	29 c0       	rjmp	.+82     	; 0x1c3a <vfprintf+0xe0>
    1be8:	18 60       	ori	r17, 0x08	; 8
    1bea:	27 c0       	rjmp	.+78     	; 0x1c3a <vfprintf+0xe0>
    1bec:	10 61       	ori	r17, 0x10	; 16
    1bee:	25 c0       	rjmp	.+74     	; 0x1c3a <vfprintf+0xe0>
    1bf0:	17 fd       	sbrc	r17, 7
    1bf2:	2e c0       	rjmp	.+92     	; 0x1c50 <vfprintf+0xf6>
    1bf4:	28 2f       	mov	r18, r24
    1bf6:	20 53       	subi	r18, 0x30	; 48
    1bf8:	2a 30       	cpi	r18, 0x0A	; 10
    1bfa:	98 f4       	brcc	.+38     	; 0x1c22 <vfprintf+0xc8>
    1bfc:	16 ff       	sbrs	r17, 6
    1bfe:	08 c0       	rjmp	.+16     	; 0x1c10 <vfprintf+0xb6>
    1c00:	8f 2d       	mov	r24, r15
    1c02:	88 0f       	add	r24, r24
    1c04:	f8 2e       	mov	r15, r24
    1c06:	ff 0c       	add	r15, r15
    1c08:	ff 0c       	add	r15, r15
    1c0a:	f8 0e       	add	r15, r24
    1c0c:	f2 0e       	add	r15, r18
    1c0e:	15 c0       	rjmp	.+42     	; 0x1c3a <vfprintf+0xe0>
    1c10:	8e 2d       	mov	r24, r14
    1c12:	88 0f       	add	r24, r24
    1c14:	e8 2e       	mov	r14, r24
    1c16:	ee 0c       	add	r14, r14
    1c18:	ee 0c       	add	r14, r14
    1c1a:	e8 0e       	add	r14, r24
    1c1c:	e2 0e       	add	r14, r18
    1c1e:	10 62       	ori	r17, 0x20	; 32
    1c20:	0c c0       	rjmp	.+24     	; 0x1c3a <vfprintf+0xe0>
    1c22:	8e 32       	cpi	r24, 0x2E	; 46
    1c24:	21 f4       	brne	.+8      	; 0x1c2e <vfprintf+0xd4>
    1c26:	16 fd       	sbrc	r17, 6
    1c28:	6c c1       	rjmp	.+728    	; 0x1f02 <vfprintf+0x3a8>
    1c2a:	10 64       	ori	r17, 0x40	; 64
    1c2c:	06 c0       	rjmp	.+12     	; 0x1c3a <vfprintf+0xe0>
    1c2e:	8c 36       	cpi	r24, 0x6C	; 108
    1c30:	11 f4       	brne	.+4      	; 0x1c36 <vfprintf+0xdc>
    1c32:	10 68       	ori	r17, 0x80	; 128
    1c34:	02 c0       	rjmp	.+4      	; 0x1c3a <vfprintf+0xe0>
    1c36:	88 36       	cpi	r24, 0x68	; 104
    1c38:	59 f4       	brne	.+22     	; 0x1c50 <vfprintf+0xf6>
    1c3a:	ec 85       	ldd	r30, Y+12	; 0x0c
    1c3c:	fd 85       	ldd	r31, Y+13	; 0x0d
    1c3e:	93 fd       	sbrc	r25, 3
    1c40:	85 91       	lpm	r24, Z+
    1c42:	93 ff       	sbrs	r25, 3
    1c44:	81 91       	ld	r24, Z+
    1c46:	fd 87       	std	Y+13, r31	; 0x0d
    1c48:	ec 87       	std	Y+12, r30	; 0x0c
    1c4a:	88 23       	and	r24, r24
    1c4c:	09 f0       	breq	.+2      	; 0x1c50 <vfprintf+0xf6>
    1c4e:	b8 cf       	rjmp	.-144    	; 0x1bc0 <vfprintf+0x66>
    1c50:	98 2f       	mov	r25, r24
    1c52:	95 54       	subi	r25, 0x45	; 69
    1c54:	93 30       	cpi	r25, 0x03	; 3
    1c56:	18 f0       	brcs	.+6      	; 0x1c5e <vfprintf+0x104>
    1c58:	90 52       	subi	r25, 0x20	; 32
    1c5a:	93 30       	cpi	r25, 0x03	; 3
    1c5c:	38 f4       	brcc	.+14     	; 0x1c6c <vfprintf+0x112>
    1c5e:	24 e0       	ldi	r18, 0x04	; 4
    1c60:	30 e0       	ldi	r19, 0x00	; 0
    1c62:	a2 0e       	add	r10, r18
    1c64:	b3 1e       	adc	r11, r19
    1c66:	3f e3       	ldi	r19, 0x3F	; 63
    1c68:	39 83       	std	Y+1, r19	; 0x01
    1c6a:	0f c0       	rjmp	.+30     	; 0x1c8a <vfprintf+0x130>
    1c6c:	83 36       	cpi	r24, 0x63	; 99
    1c6e:	31 f0       	breq	.+12     	; 0x1c7c <vfprintf+0x122>
    1c70:	83 37       	cpi	r24, 0x73	; 115
    1c72:	81 f0       	breq	.+32     	; 0x1c94 <vfprintf+0x13a>
    1c74:	83 35       	cpi	r24, 0x53	; 83
    1c76:	09 f0       	breq	.+2      	; 0x1c7a <vfprintf+0x120>
    1c78:	5a c0       	rjmp	.+180    	; 0x1d2e <vfprintf+0x1d4>
    1c7a:	22 c0       	rjmp	.+68     	; 0x1cc0 <vfprintf+0x166>
    1c7c:	f5 01       	movw	r30, r10
    1c7e:	80 81       	ld	r24, Z
    1c80:	89 83       	std	Y+1, r24	; 0x01
    1c82:	22 e0       	ldi	r18, 0x02	; 2
    1c84:	30 e0       	ldi	r19, 0x00	; 0
    1c86:	a2 0e       	add	r10, r18
    1c88:	b3 1e       	adc	r11, r19
    1c8a:	21 e0       	ldi	r18, 0x01	; 1
    1c8c:	c2 2e       	mov	r12, r18
    1c8e:	d1 2c       	mov	r13, r1
    1c90:	42 01       	movw	r8, r4
    1c92:	14 c0       	rjmp	.+40     	; 0x1cbc <vfprintf+0x162>
    1c94:	92 e0       	ldi	r25, 0x02	; 2
    1c96:	29 2e       	mov	r2, r25
    1c98:	31 2c       	mov	r3, r1
    1c9a:	2a 0c       	add	r2, r10
    1c9c:	3b 1c       	adc	r3, r11
    1c9e:	f5 01       	movw	r30, r10
    1ca0:	80 80       	ld	r8, Z
    1ca2:	91 80       	ldd	r9, Z+1	; 0x01
    1ca4:	16 ff       	sbrs	r17, 6
    1ca6:	03 c0       	rjmp	.+6      	; 0x1cae <vfprintf+0x154>
    1ca8:	6f 2d       	mov	r22, r15
    1caa:	70 e0       	ldi	r23, 0x00	; 0
    1cac:	02 c0       	rjmp	.+4      	; 0x1cb2 <vfprintf+0x158>
    1cae:	6f ef       	ldi	r22, 0xFF	; 255
    1cb0:	7f ef       	ldi	r23, 0xFF	; 255
    1cb2:	c4 01       	movw	r24, r8
    1cb4:	0e 94 96 0f 	call	0x1f2c	; 0x1f2c <strnlen>
    1cb8:	6c 01       	movw	r12, r24
    1cba:	51 01       	movw	r10, r2
    1cbc:	1f 77       	andi	r17, 0x7F	; 127
    1cbe:	15 c0       	rjmp	.+42     	; 0x1cea <vfprintf+0x190>
    1cc0:	82 e0       	ldi	r24, 0x02	; 2
    1cc2:	28 2e       	mov	r2, r24
    1cc4:	31 2c       	mov	r3, r1
    1cc6:	2a 0c       	add	r2, r10
    1cc8:	3b 1c       	adc	r3, r11
    1cca:	f5 01       	movw	r30, r10
    1ccc:	80 80       	ld	r8, Z
    1cce:	91 80       	ldd	r9, Z+1	; 0x01
    1cd0:	16 ff       	sbrs	r17, 6
    1cd2:	03 c0       	rjmp	.+6      	; 0x1cda <vfprintf+0x180>
    1cd4:	6f 2d       	mov	r22, r15
    1cd6:	70 e0       	ldi	r23, 0x00	; 0
    1cd8:	02 c0       	rjmp	.+4      	; 0x1cde <vfprintf+0x184>
    1cda:	6f ef       	ldi	r22, 0xFF	; 255
    1cdc:	7f ef       	ldi	r23, 0xFF	; 255
    1cde:	c4 01       	movw	r24, r8
    1ce0:	0e 94 8b 0f 	call	0x1f16	; 0x1f16 <strnlen_P>
    1ce4:	6c 01       	movw	r12, r24
    1ce6:	10 68       	ori	r17, 0x80	; 128
    1ce8:	51 01       	movw	r10, r2
    1cea:	13 fd       	sbrc	r17, 3
    1cec:	1c c0       	rjmp	.+56     	; 0x1d26 <vfprintf+0x1cc>
    1cee:	06 c0       	rjmp	.+12     	; 0x1cfc <vfprintf+0x1a2>
    1cf0:	80 e2       	ldi	r24, 0x20	; 32
    1cf2:	90 e0       	ldi	r25, 0x00	; 0
    1cf4:	b3 01       	movw	r22, r6
    1cf6:	0e 94 a1 0f 	call	0x1f42	; 0x1f42 <fputc>
    1cfa:	ea 94       	dec	r14
    1cfc:	8e 2d       	mov	r24, r14
    1cfe:	90 e0       	ldi	r25, 0x00	; 0
    1d00:	c8 16       	cp	r12, r24
    1d02:	d9 06       	cpc	r13, r25
    1d04:	a8 f3       	brcs	.-22     	; 0x1cf0 <vfprintf+0x196>
    1d06:	0f c0       	rjmp	.+30     	; 0x1d26 <vfprintf+0x1cc>
    1d08:	f4 01       	movw	r30, r8
    1d0a:	17 fd       	sbrc	r17, 7
    1d0c:	85 91       	lpm	r24, Z+
    1d0e:	17 ff       	sbrs	r17, 7
    1d10:	81 91       	ld	r24, Z+
    1d12:	4f 01       	movw	r8, r30
    1d14:	90 e0       	ldi	r25, 0x00	; 0
    1d16:	b3 01       	movw	r22, r6
    1d18:	0e 94 a1 0f 	call	0x1f42	; 0x1f42 <fputc>
    1d1c:	e1 10       	cpse	r14, r1
    1d1e:	ea 94       	dec	r14
    1d20:	08 94       	sec
    1d22:	c1 08       	sbc	r12, r1
    1d24:	d1 08       	sbc	r13, r1
    1d26:	c1 14       	cp	r12, r1
    1d28:	d1 04       	cpc	r13, r1
    1d2a:	71 f7       	brne	.-36     	; 0x1d08 <vfprintf+0x1ae>
    1d2c:	e7 c0       	rjmp	.+462    	; 0x1efc <vfprintf+0x3a2>
    1d2e:	84 36       	cpi	r24, 0x64	; 100
    1d30:	11 f0       	breq	.+4      	; 0x1d36 <vfprintf+0x1dc>
    1d32:	89 36       	cpi	r24, 0x69	; 105
    1d34:	51 f5       	brne	.+84     	; 0x1d8a <vfprintf+0x230>
    1d36:	f5 01       	movw	r30, r10
    1d38:	17 ff       	sbrs	r17, 7
    1d3a:	07 c0       	rjmp	.+14     	; 0x1d4a <vfprintf+0x1f0>
    1d3c:	80 81       	ld	r24, Z
    1d3e:	91 81       	ldd	r25, Z+1	; 0x01
    1d40:	a2 81       	ldd	r26, Z+2	; 0x02
    1d42:	b3 81       	ldd	r27, Z+3	; 0x03
    1d44:	24 e0       	ldi	r18, 0x04	; 4
    1d46:	30 e0       	ldi	r19, 0x00	; 0
    1d48:	08 c0       	rjmp	.+16     	; 0x1d5a <vfprintf+0x200>
    1d4a:	80 81       	ld	r24, Z
    1d4c:	91 81       	ldd	r25, Z+1	; 0x01
    1d4e:	aa 27       	eor	r26, r26
    1d50:	97 fd       	sbrc	r25, 7
    1d52:	a0 95       	com	r26
    1d54:	ba 2f       	mov	r27, r26
    1d56:	22 e0       	ldi	r18, 0x02	; 2
    1d58:	30 e0       	ldi	r19, 0x00	; 0
    1d5a:	a2 0e       	add	r10, r18
    1d5c:	b3 1e       	adc	r11, r19
    1d5e:	01 2f       	mov	r16, r17
    1d60:	0f 76       	andi	r16, 0x6F	; 111
    1d62:	b7 ff       	sbrs	r27, 7
    1d64:	08 c0       	rjmp	.+16     	; 0x1d76 <vfprintf+0x21c>
    1d66:	b0 95       	com	r27
    1d68:	a0 95       	com	r26
    1d6a:	90 95       	com	r25
    1d6c:	81 95       	neg	r24
    1d6e:	9f 4f       	sbci	r25, 0xFF	; 255
    1d70:	af 4f       	sbci	r26, 0xFF	; 255
    1d72:	bf 4f       	sbci	r27, 0xFF	; 255
    1d74:	00 68       	ori	r16, 0x80	; 128
    1d76:	bc 01       	movw	r22, r24
    1d78:	cd 01       	movw	r24, r26
    1d7a:	a2 01       	movw	r20, r4
    1d7c:	2a e0       	ldi	r18, 0x0A	; 10
    1d7e:	30 e0       	ldi	r19, 0x00	; 0
    1d80:	0e 94 cd 0f 	call	0x1f9a	; 0x1f9a <__ultoa_invert>
    1d84:	d8 2e       	mov	r13, r24
    1d86:	d4 18       	sub	r13, r4
    1d88:	3f c0       	rjmp	.+126    	; 0x1e08 <vfprintf+0x2ae>
    1d8a:	85 37       	cpi	r24, 0x75	; 117
    1d8c:	21 f4       	brne	.+8      	; 0x1d96 <vfprintf+0x23c>
    1d8e:	1f 7e       	andi	r17, 0xEF	; 239
    1d90:	2a e0       	ldi	r18, 0x0A	; 10
    1d92:	30 e0       	ldi	r19, 0x00	; 0
    1d94:	20 c0       	rjmp	.+64     	; 0x1dd6 <vfprintf+0x27c>
    1d96:	19 7f       	andi	r17, 0xF9	; 249
    1d98:	8f 36       	cpi	r24, 0x6F	; 111
    1d9a:	a9 f0       	breq	.+42     	; 0x1dc6 <vfprintf+0x26c>
    1d9c:	80 37       	cpi	r24, 0x70	; 112
    1d9e:	20 f4       	brcc	.+8      	; 0x1da8 <vfprintf+0x24e>
    1da0:	88 35       	cpi	r24, 0x58	; 88
    1da2:	09 f0       	breq	.+2      	; 0x1da6 <vfprintf+0x24c>
    1da4:	ae c0       	rjmp	.+348    	; 0x1f02 <vfprintf+0x3a8>
    1da6:	0b c0       	rjmp	.+22     	; 0x1dbe <vfprintf+0x264>
    1da8:	80 37       	cpi	r24, 0x70	; 112
    1daa:	21 f0       	breq	.+8      	; 0x1db4 <vfprintf+0x25a>
    1dac:	88 37       	cpi	r24, 0x78	; 120
    1dae:	09 f0       	breq	.+2      	; 0x1db2 <vfprintf+0x258>
    1db0:	a8 c0       	rjmp	.+336    	; 0x1f02 <vfprintf+0x3a8>
    1db2:	01 c0       	rjmp	.+2      	; 0x1db6 <vfprintf+0x25c>
    1db4:	10 61       	ori	r17, 0x10	; 16
    1db6:	14 ff       	sbrs	r17, 4
    1db8:	09 c0       	rjmp	.+18     	; 0x1dcc <vfprintf+0x272>
    1dba:	14 60       	ori	r17, 0x04	; 4
    1dbc:	07 c0       	rjmp	.+14     	; 0x1dcc <vfprintf+0x272>
    1dbe:	14 ff       	sbrs	r17, 4
    1dc0:	08 c0       	rjmp	.+16     	; 0x1dd2 <vfprintf+0x278>
    1dc2:	16 60       	ori	r17, 0x06	; 6
    1dc4:	06 c0       	rjmp	.+12     	; 0x1dd2 <vfprintf+0x278>
    1dc6:	28 e0       	ldi	r18, 0x08	; 8
    1dc8:	30 e0       	ldi	r19, 0x00	; 0
    1dca:	05 c0       	rjmp	.+10     	; 0x1dd6 <vfprintf+0x27c>
    1dcc:	20 e1       	ldi	r18, 0x10	; 16
    1dce:	30 e0       	ldi	r19, 0x00	; 0
    1dd0:	02 c0       	rjmp	.+4      	; 0x1dd6 <vfprintf+0x27c>
    1dd2:	20 e1       	ldi	r18, 0x10	; 16
    1dd4:	32 e0       	ldi	r19, 0x02	; 2
    1dd6:	f5 01       	movw	r30, r10
    1dd8:	17 ff       	sbrs	r17, 7
    1dda:	07 c0       	rjmp	.+14     	; 0x1dea <vfprintf+0x290>
    1ddc:	60 81       	ld	r22, Z
    1dde:	71 81       	ldd	r23, Z+1	; 0x01
    1de0:	82 81       	ldd	r24, Z+2	; 0x02
    1de2:	93 81       	ldd	r25, Z+3	; 0x03
    1de4:	44 e0       	ldi	r20, 0x04	; 4
    1de6:	50 e0       	ldi	r21, 0x00	; 0
    1de8:	06 c0       	rjmp	.+12     	; 0x1df6 <vfprintf+0x29c>
    1dea:	60 81       	ld	r22, Z
    1dec:	71 81       	ldd	r23, Z+1	; 0x01
    1dee:	80 e0       	ldi	r24, 0x00	; 0
    1df0:	90 e0       	ldi	r25, 0x00	; 0
    1df2:	42 e0       	ldi	r20, 0x02	; 2
    1df4:	50 e0       	ldi	r21, 0x00	; 0
    1df6:	a4 0e       	add	r10, r20
    1df8:	b5 1e       	adc	r11, r21
    1dfa:	a2 01       	movw	r20, r4
    1dfc:	0e 94 cd 0f 	call	0x1f9a	; 0x1f9a <__ultoa_invert>
    1e00:	d8 2e       	mov	r13, r24
    1e02:	d4 18       	sub	r13, r4
    1e04:	01 2f       	mov	r16, r17
    1e06:	0f 77       	andi	r16, 0x7F	; 127
    1e08:	06 ff       	sbrs	r16, 6
    1e0a:	09 c0       	rjmp	.+18     	; 0x1e1e <vfprintf+0x2c4>
    1e0c:	0e 7f       	andi	r16, 0xFE	; 254
    1e0e:	df 14       	cp	r13, r15
    1e10:	30 f4       	brcc	.+12     	; 0x1e1e <vfprintf+0x2c4>
    1e12:	04 ff       	sbrs	r16, 4
    1e14:	06 c0       	rjmp	.+12     	; 0x1e22 <vfprintf+0x2c8>
    1e16:	02 fd       	sbrc	r16, 2
    1e18:	04 c0       	rjmp	.+8      	; 0x1e22 <vfprintf+0x2c8>
    1e1a:	0f 7e       	andi	r16, 0xEF	; 239
    1e1c:	02 c0       	rjmp	.+4      	; 0x1e22 <vfprintf+0x2c8>
    1e1e:	1d 2d       	mov	r17, r13
    1e20:	01 c0       	rjmp	.+2      	; 0x1e24 <vfprintf+0x2ca>
    1e22:	1f 2d       	mov	r17, r15
    1e24:	80 2f       	mov	r24, r16
    1e26:	90 e0       	ldi	r25, 0x00	; 0
    1e28:	04 ff       	sbrs	r16, 4
    1e2a:	0c c0       	rjmp	.+24     	; 0x1e44 <vfprintf+0x2ea>
    1e2c:	fe 01       	movw	r30, r28
    1e2e:	ed 0d       	add	r30, r13
    1e30:	f1 1d       	adc	r31, r1
    1e32:	20 81       	ld	r18, Z
    1e34:	20 33       	cpi	r18, 0x30	; 48
    1e36:	11 f4       	brne	.+4      	; 0x1e3c <vfprintf+0x2e2>
    1e38:	09 7e       	andi	r16, 0xE9	; 233
    1e3a:	09 c0       	rjmp	.+18     	; 0x1e4e <vfprintf+0x2f4>
    1e3c:	02 ff       	sbrs	r16, 2
    1e3e:	06 c0       	rjmp	.+12     	; 0x1e4c <vfprintf+0x2f2>
    1e40:	1e 5f       	subi	r17, 0xFE	; 254
    1e42:	05 c0       	rjmp	.+10     	; 0x1e4e <vfprintf+0x2f4>
    1e44:	86 78       	andi	r24, 0x86	; 134
    1e46:	90 70       	andi	r25, 0x00	; 0
    1e48:	00 97       	sbiw	r24, 0x00	; 0
    1e4a:	09 f0       	breq	.+2      	; 0x1e4e <vfprintf+0x2f4>
    1e4c:	1f 5f       	subi	r17, 0xFF	; 255
    1e4e:	80 2e       	mov	r8, r16
    1e50:	99 24       	eor	r9, r9
    1e52:	03 fd       	sbrc	r16, 3
    1e54:	12 c0       	rjmp	.+36     	; 0x1e7a <vfprintf+0x320>
    1e56:	00 ff       	sbrs	r16, 0
    1e58:	0d c0       	rjmp	.+26     	; 0x1e74 <vfprintf+0x31a>
    1e5a:	fd 2c       	mov	r15, r13
    1e5c:	1e 15       	cp	r17, r14
    1e5e:	50 f4       	brcc	.+20     	; 0x1e74 <vfprintf+0x31a>
    1e60:	fe 0c       	add	r15, r14
    1e62:	f1 1a       	sub	r15, r17
    1e64:	1e 2d       	mov	r17, r14
    1e66:	06 c0       	rjmp	.+12     	; 0x1e74 <vfprintf+0x31a>
    1e68:	80 e2       	ldi	r24, 0x20	; 32
    1e6a:	90 e0       	ldi	r25, 0x00	; 0
    1e6c:	b3 01       	movw	r22, r6
    1e6e:	0e 94 a1 0f 	call	0x1f42	; 0x1f42 <fputc>
    1e72:	1f 5f       	subi	r17, 0xFF	; 255
    1e74:	1e 15       	cp	r17, r14
    1e76:	c0 f3       	brcs	.-16     	; 0x1e68 <vfprintf+0x30e>
    1e78:	04 c0       	rjmp	.+8      	; 0x1e82 <vfprintf+0x328>
    1e7a:	1e 15       	cp	r17, r14
    1e7c:	10 f4       	brcc	.+4      	; 0x1e82 <vfprintf+0x328>
    1e7e:	e1 1a       	sub	r14, r17
    1e80:	01 c0       	rjmp	.+2      	; 0x1e84 <vfprintf+0x32a>
    1e82:	ee 24       	eor	r14, r14
    1e84:	84 fe       	sbrs	r8, 4
    1e86:	0f c0       	rjmp	.+30     	; 0x1ea6 <vfprintf+0x34c>
    1e88:	80 e3       	ldi	r24, 0x30	; 48
    1e8a:	90 e0       	ldi	r25, 0x00	; 0
    1e8c:	b3 01       	movw	r22, r6
    1e8e:	0e 94 a1 0f 	call	0x1f42	; 0x1f42 <fputc>
    1e92:	82 fe       	sbrs	r8, 2
    1e94:	1f c0       	rjmp	.+62     	; 0x1ed4 <vfprintf+0x37a>
    1e96:	81 fe       	sbrs	r8, 1
    1e98:	03 c0       	rjmp	.+6      	; 0x1ea0 <vfprintf+0x346>
    1e9a:	88 e5       	ldi	r24, 0x58	; 88
    1e9c:	90 e0       	ldi	r25, 0x00	; 0
    1e9e:	10 c0       	rjmp	.+32     	; 0x1ec0 <vfprintf+0x366>
    1ea0:	88 e7       	ldi	r24, 0x78	; 120
    1ea2:	90 e0       	ldi	r25, 0x00	; 0
    1ea4:	0d c0       	rjmp	.+26     	; 0x1ec0 <vfprintf+0x366>
    1ea6:	c4 01       	movw	r24, r8
    1ea8:	86 78       	andi	r24, 0x86	; 134
    1eaa:	90 70       	andi	r25, 0x00	; 0
    1eac:	00 97       	sbiw	r24, 0x00	; 0
    1eae:	91 f0       	breq	.+36     	; 0x1ed4 <vfprintf+0x37a>
    1eb0:	81 fc       	sbrc	r8, 1
    1eb2:	02 c0       	rjmp	.+4      	; 0x1eb8 <vfprintf+0x35e>
    1eb4:	80 e2       	ldi	r24, 0x20	; 32
    1eb6:	01 c0       	rjmp	.+2      	; 0x1eba <vfprintf+0x360>
    1eb8:	8b e2       	ldi	r24, 0x2B	; 43
    1eba:	07 fd       	sbrc	r16, 7
    1ebc:	8d e2       	ldi	r24, 0x2D	; 45
    1ebe:	90 e0       	ldi	r25, 0x00	; 0
    1ec0:	b3 01       	movw	r22, r6
    1ec2:	0e 94 a1 0f 	call	0x1f42	; 0x1f42 <fputc>
    1ec6:	06 c0       	rjmp	.+12     	; 0x1ed4 <vfprintf+0x37a>
    1ec8:	80 e3       	ldi	r24, 0x30	; 48
    1eca:	90 e0       	ldi	r25, 0x00	; 0
    1ecc:	b3 01       	movw	r22, r6
    1ece:	0e 94 a1 0f 	call	0x1f42	; 0x1f42 <fputc>
    1ed2:	fa 94       	dec	r15
    1ed4:	df 14       	cp	r13, r15
    1ed6:	c0 f3       	brcs	.-16     	; 0x1ec8 <vfprintf+0x36e>
    1ed8:	da 94       	dec	r13
    1eda:	f2 01       	movw	r30, r4
    1edc:	ed 0d       	add	r30, r13
    1ede:	f1 1d       	adc	r31, r1
    1ee0:	80 81       	ld	r24, Z
    1ee2:	90 e0       	ldi	r25, 0x00	; 0
    1ee4:	b3 01       	movw	r22, r6
    1ee6:	0e 94 a1 0f 	call	0x1f42	; 0x1f42 <fputc>
    1eea:	dd 20       	and	r13, r13
    1eec:	a9 f7       	brne	.-22     	; 0x1ed8 <vfprintf+0x37e>
    1eee:	06 c0       	rjmp	.+12     	; 0x1efc <vfprintf+0x3a2>
    1ef0:	80 e2       	ldi	r24, 0x20	; 32
    1ef2:	90 e0       	ldi	r25, 0x00	; 0
    1ef4:	b3 01       	movw	r22, r6
    1ef6:	0e 94 a1 0f 	call	0x1f42	; 0x1f42 <fputc>
    1efa:	ea 94       	dec	r14
    1efc:	ee 20       	and	r14, r14
    1efe:	c1 f7       	brne	.-16     	; 0x1ef0 <vfprintf+0x396>
    1f00:	40 ce       	rjmp	.-896    	; 0x1b82 <vfprintf+0x28>
    1f02:	f3 01       	movw	r30, r6
    1f04:	86 81       	ldd	r24, Z+6	; 0x06
    1f06:	97 81       	ldd	r25, Z+7	; 0x07
    1f08:	02 c0       	rjmp	.+4      	; 0x1f0e <vfprintf+0x3b4>
    1f0a:	8f ef       	ldi	r24, 0xFF	; 255
    1f0c:	9f ef       	ldi	r25, 0xFF	; 255
    1f0e:	2d 96       	adiw	r28, 0x0d	; 13
    1f10:	e2 e1       	ldi	r30, 0x12	; 18
    1f12:	0c 94 47 10 	jmp	0x208e	; 0x208e <__epilogue_restores__>

00001f16 <strnlen_P>:
    1f16:	fc 01       	movw	r30, r24
    1f18:	05 90       	lpm	r0, Z+
    1f1a:	61 50       	subi	r22, 0x01	; 1
    1f1c:	70 40       	sbci	r23, 0x00	; 0
    1f1e:	01 10       	cpse	r0, r1
    1f20:	d8 f7       	brcc	.-10     	; 0x1f18 <strnlen_P+0x2>
    1f22:	80 95       	com	r24
    1f24:	90 95       	com	r25
    1f26:	8e 0f       	add	r24, r30
    1f28:	9f 1f       	adc	r25, r31
    1f2a:	08 95       	ret

00001f2c <strnlen>:
    1f2c:	fc 01       	movw	r30, r24
    1f2e:	61 50       	subi	r22, 0x01	; 1
    1f30:	70 40       	sbci	r23, 0x00	; 0
    1f32:	01 90       	ld	r0, Z+
    1f34:	01 10       	cpse	r0, r1
    1f36:	d8 f7       	brcc	.-10     	; 0x1f2e <strnlen+0x2>
    1f38:	80 95       	com	r24
    1f3a:	90 95       	com	r25
    1f3c:	8e 0f       	add	r24, r30
    1f3e:	9f 1f       	adc	r25, r31
    1f40:	08 95       	ret

00001f42 <fputc>:
    1f42:	0f 93       	push	r16
    1f44:	1f 93       	push	r17
    1f46:	cf 93       	push	r28
    1f48:	df 93       	push	r29
    1f4a:	8c 01       	movw	r16, r24
    1f4c:	eb 01       	movw	r28, r22
    1f4e:	8b 81       	ldd	r24, Y+3	; 0x03
    1f50:	81 ff       	sbrs	r24, 1
    1f52:	1b c0       	rjmp	.+54     	; 0x1f8a <fputc+0x48>
    1f54:	82 ff       	sbrs	r24, 2
    1f56:	0d c0       	rjmp	.+26     	; 0x1f72 <fputc+0x30>
    1f58:	2e 81       	ldd	r18, Y+6	; 0x06
    1f5a:	3f 81       	ldd	r19, Y+7	; 0x07
    1f5c:	8c 81       	ldd	r24, Y+4	; 0x04
    1f5e:	9d 81       	ldd	r25, Y+5	; 0x05
    1f60:	28 17       	cp	r18, r24
    1f62:	39 07       	cpc	r19, r25
    1f64:	64 f4       	brge	.+24     	; 0x1f7e <fputc+0x3c>
    1f66:	e8 81       	ld	r30, Y
    1f68:	f9 81       	ldd	r31, Y+1	; 0x01
    1f6a:	01 93       	st	Z+, r16
    1f6c:	f9 83       	std	Y+1, r31	; 0x01
    1f6e:	e8 83       	st	Y, r30
    1f70:	06 c0       	rjmp	.+12     	; 0x1f7e <fputc+0x3c>
    1f72:	e8 85       	ldd	r30, Y+8	; 0x08
    1f74:	f9 85       	ldd	r31, Y+9	; 0x09
    1f76:	80 2f       	mov	r24, r16
    1f78:	09 95       	icall
    1f7a:	00 97       	sbiw	r24, 0x00	; 0
    1f7c:	31 f4       	brne	.+12     	; 0x1f8a <fputc+0x48>
    1f7e:	8e 81       	ldd	r24, Y+6	; 0x06
    1f80:	9f 81       	ldd	r25, Y+7	; 0x07
    1f82:	01 96       	adiw	r24, 0x01	; 1
    1f84:	9f 83       	std	Y+7, r25	; 0x07
    1f86:	8e 83       	std	Y+6, r24	; 0x06
    1f88:	02 c0       	rjmp	.+4      	; 0x1f8e <fputc+0x4c>
    1f8a:	0f ef       	ldi	r16, 0xFF	; 255
    1f8c:	1f ef       	ldi	r17, 0xFF	; 255
    1f8e:	c8 01       	movw	r24, r16
    1f90:	df 91       	pop	r29
    1f92:	cf 91       	pop	r28
    1f94:	1f 91       	pop	r17
    1f96:	0f 91       	pop	r16
    1f98:	08 95       	ret

00001f9a <__ultoa_invert>:
    1f9a:	fa 01       	movw	r30, r20
    1f9c:	aa 27       	eor	r26, r26
    1f9e:	28 30       	cpi	r18, 0x08	; 8
    1fa0:	51 f1       	breq	.+84     	; 0x1ff6 <__ultoa_invert+0x5c>
    1fa2:	20 31       	cpi	r18, 0x10	; 16
    1fa4:	81 f1       	breq	.+96     	; 0x2006 <__ultoa_invert+0x6c>
    1fa6:	e8 94       	clt
    1fa8:	6f 93       	push	r22
    1faa:	6e 7f       	andi	r22, 0xFE	; 254
    1fac:	6e 5f       	subi	r22, 0xFE	; 254
    1fae:	7f 4f       	sbci	r23, 0xFF	; 255
    1fb0:	8f 4f       	sbci	r24, 0xFF	; 255
    1fb2:	9f 4f       	sbci	r25, 0xFF	; 255
    1fb4:	af 4f       	sbci	r26, 0xFF	; 255
    1fb6:	b1 e0       	ldi	r27, 0x01	; 1
    1fb8:	3e d0       	rcall	.+124    	; 0x2036 <__ultoa_invert+0x9c>
    1fba:	b4 e0       	ldi	r27, 0x04	; 4
    1fbc:	3c d0       	rcall	.+120    	; 0x2036 <__ultoa_invert+0x9c>
    1fbe:	67 0f       	add	r22, r23
    1fc0:	78 1f       	adc	r23, r24
    1fc2:	89 1f       	adc	r24, r25
    1fc4:	9a 1f       	adc	r25, r26
    1fc6:	a1 1d       	adc	r26, r1
    1fc8:	68 0f       	add	r22, r24
    1fca:	79 1f       	adc	r23, r25
    1fcc:	8a 1f       	adc	r24, r26
    1fce:	91 1d       	adc	r25, r1
    1fd0:	a1 1d       	adc	r26, r1
    1fd2:	6a 0f       	add	r22, r26
    1fd4:	71 1d       	adc	r23, r1
    1fd6:	81 1d       	adc	r24, r1
    1fd8:	91 1d       	adc	r25, r1
    1fda:	a1 1d       	adc	r26, r1
    1fdc:	20 d0       	rcall	.+64     	; 0x201e <__ultoa_invert+0x84>
    1fde:	09 f4       	brne	.+2      	; 0x1fe2 <__ultoa_invert+0x48>
    1fe0:	68 94       	set
    1fe2:	3f 91       	pop	r19
    1fe4:	2a e0       	ldi	r18, 0x0A	; 10
    1fe6:	26 9f       	mul	r18, r22
    1fe8:	11 24       	eor	r1, r1
    1fea:	30 19       	sub	r19, r0
    1fec:	30 5d       	subi	r19, 0xD0	; 208
    1fee:	31 93       	st	Z+, r19
    1ff0:	de f6       	brtc	.-74     	; 0x1fa8 <__ultoa_invert+0xe>
    1ff2:	cf 01       	movw	r24, r30
    1ff4:	08 95       	ret
    1ff6:	46 2f       	mov	r20, r22
    1ff8:	47 70       	andi	r20, 0x07	; 7
    1ffa:	40 5d       	subi	r20, 0xD0	; 208
    1ffc:	41 93       	st	Z+, r20
    1ffe:	b3 e0       	ldi	r27, 0x03	; 3
    2000:	0f d0       	rcall	.+30     	; 0x2020 <__ultoa_invert+0x86>
    2002:	c9 f7       	brne	.-14     	; 0x1ff6 <__ultoa_invert+0x5c>
    2004:	f6 cf       	rjmp	.-20     	; 0x1ff2 <__ultoa_invert+0x58>
    2006:	46 2f       	mov	r20, r22
    2008:	4f 70       	andi	r20, 0x0F	; 15
    200a:	40 5d       	subi	r20, 0xD0	; 208
    200c:	4a 33       	cpi	r20, 0x3A	; 58
    200e:	18 f0       	brcs	.+6      	; 0x2016 <__ultoa_invert+0x7c>
    2010:	49 5d       	subi	r20, 0xD9	; 217
    2012:	31 fd       	sbrc	r19, 1
    2014:	40 52       	subi	r20, 0x20	; 32
    2016:	41 93       	st	Z+, r20
    2018:	02 d0       	rcall	.+4      	; 0x201e <__ultoa_invert+0x84>
    201a:	a9 f7       	brne	.-22     	; 0x2006 <__ultoa_invert+0x6c>
    201c:	ea cf       	rjmp	.-44     	; 0x1ff2 <__ultoa_invert+0x58>
    201e:	b4 e0       	ldi	r27, 0x04	; 4
    2020:	a6 95       	lsr	r26
    2022:	97 95       	ror	r25
    2024:	87 95       	ror	r24
    2026:	77 95       	ror	r23
    2028:	67 95       	ror	r22
    202a:	ba 95       	dec	r27
    202c:	c9 f7       	brne	.-14     	; 0x2020 <__ultoa_invert+0x86>
    202e:	00 97       	sbiw	r24, 0x00	; 0
    2030:	61 05       	cpc	r22, r1
    2032:	71 05       	cpc	r23, r1
    2034:	08 95       	ret
    2036:	9b 01       	movw	r18, r22
    2038:	ac 01       	movw	r20, r24
    203a:	0a 2e       	mov	r0, r26
    203c:	06 94       	lsr	r0
    203e:	57 95       	ror	r21
    2040:	47 95       	ror	r20
    2042:	37 95       	ror	r19
    2044:	27 95       	ror	r18
    2046:	ba 95       	dec	r27
    2048:	c9 f7       	brne	.-14     	; 0x203c <__ultoa_invert+0xa2>
    204a:	62 0f       	add	r22, r18
    204c:	73 1f       	adc	r23, r19
    204e:	84 1f       	adc	r24, r20
    2050:	95 1f       	adc	r25, r21
    2052:	a0 1d       	adc	r26, r0
    2054:	08 95       	ret

00002056 <__prologue_saves__>:
    2056:	2f 92       	push	r2
    2058:	3f 92       	push	r3
    205a:	4f 92       	push	r4
    205c:	5f 92       	push	r5
    205e:	6f 92       	push	r6
    2060:	7f 92       	push	r7
    2062:	8f 92       	push	r8
    2064:	9f 92       	push	r9
    2066:	af 92       	push	r10
    2068:	bf 92       	push	r11
    206a:	cf 92       	push	r12
    206c:	df 92       	push	r13
    206e:	ef 92       	push	r14
    2070:	ff 92       	push	r15
    2072:	0f 93       	push	r16
    2074:	1f 93       	push	r17
    2076:	cf 93       	push	r28
    2078:	df 93       	push	r29
    207a:	cd b7       	in	r28, 0x3d	; 61
    207c:	de b7       	in	r29, 0x3e	; 62
    207e:	ca 1b       	sub	r28, r26
    2080:	db 0b       	sbc	r29, r27
    2082:	0f b6       	in	r0, 0x3f	; 63
    2084:	f8 94       	cli
    2086:	de bf       	out	0x3e, r29	; 62
    2088:	0f be       	out	0x3f, r0	; 63
    208a:	cd bf       	out	0x3d, r28	; 61
    208c:	09 94       	ijmp

0000208e <__epilogue_restores__>:
    208e:	2a 88       	ldd	r2, Y+18	; 0x12
    2090:	39 88       	ldd	r3, Y+17	; 0x11
    2092:	48 88       	ldd	r4, Y+16	; 0x10
    2094:	5f 84       	ldd	r5, Y+15	; 0x0f
    2096:	6e 84       	ldd	r6, Y+14	; 0x0e
    2098:	7d 84       	ldd	r7, Y+13	; 0x0d
    209a:	8c 84       	ldd	r8, Y+12	; 0x0c
    209c:	9b 84       	ldd	r9, Y+11	; 0x0b
    209e:	aa 84       	ldd	r10, Y+10	; 0x0a
    20a0:	b9 84       	ldd	r11, Y+9	; 0x09
    20a2:	c8 84       	ldd	r12, Y+8	; 0x08
    20a4:	df 80       	ldd	r13, Y+7	; 0x07
    20a6:	ee 80       	ldd	r14, Y+6	; 0x06
    20a8:	fd 80       	ldd	r15, Y+5	; 0x05
    20aa:	0c 81       	ldd	r16, Y+4	; 0x04
    20ac:	1b 81       	ldd	r17, Y+3	; 0x03
    20ae:	aa 81       	ldd	r26, Y+2	; 0x02
    20b0:	b9 81       	ldd	r27, Y+1	; 0x01
    20b2:	ce 0f       	add	r28, r30
    20b4:	d1 1d       	adc	r29, r1
    20b6:	0f b6       	in	r0, 0x3f	; 63
    20b8:	f8 94       	cli
    20ba:	de bf       	out	0x3e, r29	; 62
    20bc:	0f be       	out	0x3f, r0	; 63
    20be:	cd bf       	out	0x3d, r28	; 61
    20c0:	ed 01       	movw	r28, r26
    20c2:	08 95       	ret

000020c4 <_exit>:
    20c4:	f8 94       	cli

000020c6 <__stop_program>:
    20c6:	ff cf       	rjmp	.-2      	; 0x20c6 <__stop_program>
