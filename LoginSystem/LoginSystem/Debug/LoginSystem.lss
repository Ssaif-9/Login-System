
LoginSystem.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00001bb4  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000062  00800060  00001bb4  00001c48  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000006  008000c2  008000c2  00001caa  2**0
                  ALLOC
  3 .stab         00000c84  00000000  00000000  00001cac  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      000001b6  00000000  00000000  00002930  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_aranges 00000280  00000000  00000000  00002ae8  2**3
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00002458  00000000  00000000  00002d68  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000c95  00000000  00000000  000051c0  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00001587  00000000  00000000  00005e55  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000007a0  00000000  00000000  000073dc  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000afb  00000000  00000000  00007b7c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00001a81  00000000  00000000  00008677  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000030  00000000  00000000  0000a0f8  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
       4:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
       8:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
       c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      18:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      1c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      24:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      28:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      2c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      34:	0c 94 78 0a 	jmp	0x14f0	; 0x14f0 <__vector_13>
      38:	0c 94 a1 0a 	jmp	0x1542	; 0x1542 <__vector_14>
      3c:	0c 94 ca 0a 	jmp	0x1594	; 0x1594 <__vector_15>
      40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
      54:	11 24       	eor	r1, r1
      56:	1f be       	out	0x3f, r1	; 63
      58:	cf e5       	ldi	r28, 0x5F	; 95
      5a:	d8 e0       	ldi	r29, 0x08	; 8
      5c:	de bf       	out	0x3e, r29	; 62
      5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
      60:	10 e0       	ldi	r17, 0x00	; 0
      62:	a0 e6       	ldi	r26, 0x60	; 96
      64:	b0 e0       	ldi	r27, 0x00	; 0
      66:	e4 eb       	ldi	r30, 0xB4	; 180
      68:	fb e1       	ldi	r31, 0x1B	; 27
      6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
      6c:	05 90       	lpm	r0, Z+
      6e:	0d 92       	st	X+, r0
      70:	a2 3c       	cpi	r26, 0xC2	; 194
      72:	b1 07       	cpc	r27, r17
      74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>

00000076 <__do_clear_bss>:
      76:	10 e0       	ldi	r17, 0x00	; 0
      78:	a2 ec       	ldi	r26, 0xC2	; 194
      7a:	b0 e0       	ldi	r27, 0x00	; 0
      7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
      7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
      80:	a8 3c       	cpi	r26, 0xC8	; 200
      82:	b1 07       	cpc	r27, r17
      84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
      86:	0e 94 f7 03 	call	0x7ee	; 0x7ee <main>
      8a:	0c 94 d8 0d 	jmp	0x1bb0	; 0x1bb0 <_exit>

0000008e <__bad_interrupt>:
      8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <BUTTON_init>:
      92:	84 30       	cpi	r24, 0x04	; 4
      94:	28 f4       	brcc	.+10     	; 0xa0 <BUTTON_init+0xe>
      96:	68 30       	cpi	r22, 0x08	; 8
      98:	18 f4       	brcc	.+6      	; 0xa0 <BUTTON_init+0xe>
      9a:	40 e0       	ldi	r20, 0x00	; 0
      9c:	0e 94 5f 00 	call	0xbe	; 0xbe <DIO_SetPinDirection>
      a0:	08 95       	ret

000000a2 <BUTTON_ActivePullUp>:
      a2:	84 30       	cpi	r24, 0x04	; 4
      a4:	20 f4       	brcc	.+8      	; 0xae <BUTTON_ActivePullUp+0xc>
      a6:	68 30       	cpi	r22, 0x08	; 8
      a8:	10 f4       	brcc	.+4      	; 0xae <BUTTON_ActivePullUp+0xc>
      aa:	0e 94 2d 02 	call	0x45a	; 0x45a <DIO_activePinInPullUpResistance>
      ae:	08 95       	ret

000000b0 <BUTTON_ReadValue>:
      b0:	84 30       	cpi	r24, 0x04	; 4
      b2:	20 f4       	brcc	.+8      	; 0xbc <BUTTON_ReadValue+0xc>
      b4:	68 30       	cpi	r22, 0x08	; 8
      b6:	10 f4       	brcc	.+4      	; 0xbc <BUTTON_ReadValue+0xc>
      b8:	0e 94 d9 01 	call	0x3b2	; 0x3b2 <DIO_ReadValue>
      bc:	08 95       	ret

000000be <DIO_SetPinDirection>:
      be:	84 30       	cpi	r24, 0x04	; 4
      c0:	08 f0       	brcs	.+2      	; 0xc4 <DIO_SetPinDirection+0x6>
      c2:	8b c0       	rjmp	.+278    	; 0x1da <DIO_SetPinDirection+0x11c>
      c4:	68 30       	cpi	r22, 0x08	; 8
      c6:	08 f0       	brcs	.+2      	; 0xca <DIO_SetPinDirection+0xc>
      c8:	8a c0       	rjmp	.+276    	; 0x1de <DIO_SetPinDirection+0x120>
      ca:	42 30       	cpi	r20, 0x02	; 2
      cc:	08 f0       	brcs	.+2      	; 0xd0 <DIO_SetPinDirection+0x12>
      ce:	89 c0       	rjmp	.+274    	; 0x1e2 <DIO_SetPinDirection+0x124>
      d0:	81 30       	cpi	r24, 0x01	; 1
      d2:	41 f1       	breq	.+80     	; 0x124 <DIO_SetPinDirection+0x66>
      d4:	81 30       	cpi	r24, 0x01	; 1
      d6:	38 f0       	brcs	.+14     	; 0xe6 <DIO_SetPinDirection+0x28>
      d8:	82 30       	cpi	r24, 0x02	; 2
      da:	09 f4       	brne	.+2      	; 0xde <DIO_SetPinDirection+0x20>
      dc:	41 c0       	rjmp	.+130    	; 0x160 <DIO_SetPinDirection+0xa2>
      de:	83 30       	cpi	r24, 0x03	; 3
      e0:	09 f0       	breq	.+2      	; 0xe4 <DIO_SetPinDirection+0x26>
      e2:	81 c0       	rjmp	.+258    	; 0x1e6 <DIO_SetPinDirection+0x128>
      e4:	5b c0       	rjmp	.+182    	; 0x19c <DIO_SetPinDirection+0xde>
      e6:	41 30       	cpi	r20, 0x01	; 1
      e8:	71 f4       	brne	.+28     	; 0x106 <DIO_SetPinDirection+0x48>
      ea:	2a b3       	in	r18, 0x1a	; 26
      ec:	81 e0       	ldi	r24, 0x01	; 1
      ee:	90 e0       	ldi	r25, 0x00	; 0
      f0:	ac 01       	movw	r20, r24
      f2:	02 c0       	rjmp	.+4      	; 0xf8 <DIO_SetPinDirection+0x3a>
      f4:	44 0f       	add	r20, r20
      f6:	55 1f       	adc	r21, r21
      f8:	6a 95       	dec	r22
      fa:	e2 f7       	brpl	.-8      	; 0xf4 <DIO_SetPinDirection+0x36>
      fc:	ba 01       	movw	r22, r20
      fe:	62 2b       	or	r22, r18
     100:	6a bb       	out	0x1a, r22	; 26
     102:	80 e0       	ldi	r24, 0x00	; 0
     104:	08 95       	ret
     106:	2a b3       	in	r18, 0x1a	; 26
     108:	81 e0       	ldi	r24, 0x01	; 1
     10a:	90 e0       	ldi	r25, 0x00	; 0
     10c:	ac 01       	movw	r20, r24
     10e:	02 c0       	rjmp	.+4      	; 0x114 <DIO_SetPinDirection+0x56>
     110:	44 0f       	add	r20, r20
     112:	55 1f       	adc	r21, r21
     114:	6a 95       	dec	r22
     116:	e2 f7       	brpl	.-8      	; 0x110 <DIO_SetPinDirection+0x52>
     118:	ba 01       	movw	r22, r20
     11a:	60 95       	com	r22
     11c:	62 23       	and	r22, r18
     11e:	6a bb       	out	0x1a, r22	; 26
     120:	80 e0       	ldi	r24, 0x00	; 0
     122:	08 95       	ret
     124:	41 30       	cpi	r20, 0x01	; 1
     126:	69 f4       	brne	.+26     	; 0x142 <DIO_SetPinDirection+0x84>
     128:	47 b3       	in	r20, 0x17	; 23
     12a:	21 e0       	ldi	r18, 0x01	; 1
     12c:	30 e0       	ldi	r19, 0x00	; 0
     12e:	c9 01       	movw	r24, r18
     130:	02 c0       	rjmp	.+4      	; 0x136 <DIO_SetPinDirection+0x78>
     132:	88 0f       	add	r24, r24
     134:	99 1f       	adc	r25, r25
     136:	6a 95       	dec	r22
     138:	e2 f7       	brpl	.-8      	; 0x132 <DIO_SetPinDirection+0x74>
     13a:	84 2b       	or	r24, r20
     13c:	87 bb       	out	0x17, r24	; 23
     13e:	80 e0       	ldi	r24, 0x00	; 0
     140:	08 95       	ret
     142:	27 b3       	in	r18, 0x17	; 23
     144:	81 e0       	ldi	r24, 0x01	; 1
     146:	90 e0       	ldi	r25, 0x00	; 0
     148:	ac 01       	movw	r20, r24
     14a:	02 c0       	rjmp	.+4      	; 0x150 <DIO_SetPinDirection+0x92>
     14c:	44 0f       	add	r20, r20
     14e:	55 1f       	adc	r21, r21
     150:	6a 95       	dec	r22
     152:	e2 f7       	brpl	.-8      	; 0x14c <DIO_SetPinDirection+0x8e>
     154:	ba 01       	movw	r22, r20
     156:	60 95       	com	r22
     158:	62 23       	and	r22, r18
     15a:	67 bb       	out	0x17, r22	; 23
     15c:	80 e0       	ldi	r24, 0x00	; 0
     15e:	08 95       	ret
     160:	41 30       	cpi	r20, 0x01	; 1
     162:	69 f4       	brne	.+26     	; 0x17e <DIO_SetPinDirection+0xc0>
     164:	44 b3       	in	r20, 0x14	; 20
     166:	21 e0       	ldi	r18, 0x01	; 1
     168:	30 e0       	ldi	r19, 0x00	; 0
     16a:	c9 01       	movw	r24, r18
     16c:	02 c0       	rjmp	.+4      	; 0x172 <DIO_SetPinDirection+0xb4>
     16e:	88 0f       	add	r24, r24
     170:	99 1f       	adc	r25, r25
     172:	6a 95       	dec	r22
     174:	e2 f7       	brpl	.-8      	; 0x16e <DIO_SetPinDirection+0xb0>
     176:	84 2b       	or	r24, r20
     178:	84 bb       	out	0x14, r24	; 20
     17a:	80 e0       	ldi	r24, 0x00	; 0
     17c:	08 95       	ret
     17e:	24 b3       	in	r18, 0x14	; 20
     180:	81 e0       	ldi	r24, 0x01	; 1
     182:	90 e0       	ldi	r25, 0x00	; 0
     184:	ac 01       	movw	r20, r24
     186:	02 c0       	rjmp	.+4      	; 0x18c <DIO_SetPinDirection+0xce>
     188:	44 0f       	add	r20, r20
     18a:	55 1f       	adc	r21, r21
     18c:	6a 95       	dec	r22
     18e:	e2 f7       	brpl	.-8      	; 0x188 <DIO_SetPinDirection+0xca>
     190:	ba 01       	movw	r22, r20
     192:	60 95       	com	r22
     194:	62 23       	and	r22, r18
     196:	64 bb       	out	0x14, r22	; 20
     198:	80 e0       	ldi	r24, 0x00	; 0
     19a:	08 95       	ret
     19c:	41 30       	cpi	r20, 0x01	; 1
     19e:	71 f4       	brne	.+28     	; 0x1bc <DIO_SetPinDirection+0xfe>
     1a0:	21 b3       	in	r18, 0x11	; 17
     1a2:	81 e0       	ldi	r24, 0x01	; 1
     1a4:	90 e0       	ldi	r25, 0x00	; 0
     1a6:	ac 01       	movw	r20, r24
     1a8:	02 c0       	rjmp	.+4      	; 0x1ae <DIO_SetPinDirection+0xf0>
     1aa:	44 0f       	add	r20, r20
     1ac:	55 1f       	adc	r21, r21
     1ae:	6a 95       	dec	r22
     1b0:	e2 f7       	brpl	.-8      	; 0x1aa <DIO_SetPinDirection+0xec>
     1b2:	ba 01       	movw	r22, r20
     1b4:	62 2b       	or	r22, r18
     1b6:	61 bb       	out	0x11, r22	; 17
     1b8:	80 e0       	ldi	r24, 0x00	; 0
     1ba:	08 95       	ret
     1bc:	21 b3       	in	r18, 0x11	; 17
     1be:	81 e0       	ldi	r24, 0x01	; 1
     1c0:	90 e0       	ldi	r25, 0x00	; 0
     1c2:	ac 01       	movw	r20, r24
     1c4:	02 c0       	rjmp	.+4      	; 0x1ca <DIO_SetPinDirection+0x10c>
     1c6:	44 0f       	add	r20, r20
     1c8:	55 1f       	adc	r21, r21
     1ca:	6a 95       	dec	r22
     1cc:	e2 f7       	brpl	.-8      	; 0x1c6 <DIO_SetPinDirection+0x108>
     1ce:	ba 01       	movw	r22, r20
     1d0:	60 95       	com	r22
     1d2:	62 23       	and	r22, r18
     1d4:	61 bb       	out	0x11, r22	; 17
     1d6:	80 e0       	ldi	r24, 0x00	; 0
     1d8:	08 95       	ret
     1da:	81 e0       	ldi	r24, 0x01	; 1
     1dc:	08 95       	ret
     1de:	81 e0       	ldi	r24, 0x01	; 1
     1e0:	08 95       	ret
     1e2:	81 e0       	ldi	r24, 0x01	; 1
     1e4:	08 95       	ret
     1e6:	80 e0       	ldi	r24, 0x00	; 0
     1e8:	08 95       	ret

000001ea <DIO_SetPinValue>:
     1ea:	84 30       	cpi	r24, 0x04	; 4
     1ec:	08 f0       	brcs	.+2      	; 0x1f0 <DIO_SetPinValue+0x6>
     1ee:	8b c0       	rjmp	.+278    	; 0x306 <DIO_SetPinValue+0x11c>
     1f0:	68 30       	cpi	r22, 0x08	; 8
     1f2:	08 f0       	brcs	.+2      	; 0x1f6 <DIO_SetPinValue+0xc>
     1f4:	8a c0       	rjmp	.+276    	; 0x30a <DIO_SetPinValue+0x120>
     1f6:	42 30       	cpi	r20, 0x02	; 2
     1f8:	08 f0       	brcs	.+2      	; 0x1fc <DIO_SetPinValue+0x12>
     1fa:	89 c0       	rjmp	.+274    	; 0x30e <DIO_SetPinValue+0x124>
     1fc:	81 30       	cpi	r24, 0x01	; 1
     1fe:	41 f1       	breq	.+80     	; 0x250 <DIO_SetPinValue+0x66>
     200:	81 30       	cpi	r24, 0x01	; 1
     202:	38 f0       	brcs	.+14     	; 0x212 <DIO_SetPinValue+0x28>
     204:	82 30       	cpi	r24, 0x02	; 2
     206:	09 f4       	brne	.+2      	; 0x20a <DIO_SetPinValue+0x20>
     208:	41 c0       	rjmp	.+130    	; 0x28c <DIO_SetPinValue+0xa2>
     20a:	83 30       	cpi	r24, 0x03	; 3
     20c:	09 f0       	breq	.+2      	; 0x210 <DIO_SetPinValue+0x26>
     20e:	81 c0       	rjmp	.+258    	; 0x312 <DIO_SetPinValue+0x128>
     210:	5b c0       	rjmp	.+182    	; 0x2c8 <DIO_SetPinValue+0xde>
     212:	41 30       	cpi	r20, 0x01	; 1
     214:	71 f4       	brne	.+28     	; 0x232 <DIO_SetPinValue+0x48>
     216:	2b b3       	in	r18, 0x1b	; 27
     218:	81 e0       	ldi	r24, 0x01	; 1
     21a:	90 e0       	ldi	r25, 0x00	; 0
     21c:	ac 01       	movw	r20, r24
     21e:	02 c0       	rjmp	.+4      	; 0x224 <DIO_SetPinValue+0x3a>
     220:	44 0f       	add	r20, r20
     222:	55 1f       	adc	r21, r21
     224:	6a 95       	dec	r22
     226:	e2 f7       	brpl	.-8      	; 0x220 <DIO_SetPinValue+0x36>
     228:	ba 01       	movw	r22, r20
     22a:	62 2b       	or	r22, r18
     22c:	6b bb       	out	0x1b, r22	; 27
     22e:	80 e0       	ldi	r24, 0x00	; 0
     230:	08 95       	ret
     232:	2b b3       	in	r18, 0x1b	; 27
     234:	81 e0       	ldi	r24, 0x01	; 1
     236:	90 e0       	ldi	r25, 0x00	; 0
     238:	ac 01       	movw	r20, r24
     23a:	02 c0       	rjmp	.+4      	; 0x240 <DIO_SetPinValue+0x56>
     23c:	44 0f       	add	r20, r20
     23e:	55 1f       	adc	r21, r21
     240:	6a 95       	dec	r22
     242:	e2 f7       	brpl	.-8      	; 0x23c <DIO_SetPinValue+0x52>
     244:	ba 01       	movw	r22, r20
     246:	60 95       	com	r22
     248:	62 23       	and	r22, r18
     24a:	6b bb       	out	0x1b, r22	; 27
     24c:	80 e0       	ldi	r24, 0x00	; 0
     24e:	08 95       	ret
     250:	41 30       	cpi	r20, 0x01	; 1
     252:	69 f4       	brne	.+26     	; 0x26e <DIO_SetPinValue+0x84>
     254:	48 b3       	in	r20, 0x18	; 24
     256:	21 e0       	ldi	r18, 0x01	; 1
     258:	30 e0       	ldi	r19, 0x00	; 0
     25a:	c9 01       	movw	r24, r18
     25c:	02 c0       	rjmp	.+4      	; 0x262 <DIO_SetPinValue+0x78>
     25e:	88 0f       	add	r24, r24
     260:	99 1f       	adc	r25, r25
     262:	6a 95       	dec	r22
     264:	e2 f7       	brpl	.-8      	; 0x25e <DIO_SetPinValue+0x74>
     266:	84 2b       	or	r24, r20
     268:	88 bb       	out	0x18, r24	; 24
     26a:	80 e0       	ldi	r24, 0x00	; 0
     26c:	08 95       	ret
     26e:	28 b3       	in	r18, 0x18	; 24
     270:	81 e0       	ldi	r24, 0x01	; 1
     272:	90 e0       	ldi	r25, 0x00	; 0
     274:	ac 01       	movw	r20, r24
     276:	02 c0       	rjmp	.+4      	; 0x27c <DIO_SetPinValue+0x92>
     278:	44 0f       	add	r20, r20
     27a:	55 1f       	adc	r21, r21
     27c:	6a 95       	dec	r22
     27e:	e2 f7       	brpl	.-8      	; 0x278 <DIO_SetPinValue+0x8e>
     280:	ba 01       	movw	r22, r20
     282:	60 95       	com	r22
     284:	62 23       	and	r22, r18
     286:	68 bb       	out	0x18, r22	; 24
     288:	80 e0       	ldi	r24, 0x00	; 0
     28a:	08 95       	ret
     28c:	41 30       	cpi	r20, 0x01	; 1
     28e:	69 f4       	brne	.+26     	; 0x2aa <DIO_SetPinValue+0xc0>
     290:	45 b3       	in	r20, 0x15	; 21
     292:	21 e0       	ldi	r18, 0x01	; 1
     294:	30 e0       	ldi	r19, 0x00	; 0
     296:	c9 01       	movw	r24, r18
     298:	02 c0       	rjmp	.+4      	; 0x29e <DIO_SetPinValue+0xb4>
     29a:	88 0f       	add	r24, r24
     29c:	99 1f       	adc	r25, r25
     29e:	6a 95       	dec	r22
     2a0:	e2 f7       	brpl	.-8      	; 0x29a <DIO_SetPinValue+0xb0>
     2a2:	84 2b       	or	r24, r20
     2a4:	85 bb       	out	0x15, r24	; 21
     2a6:	80 e0       	ldi	r24, 0x00	; 0
     2a8:	08 95       	ret
     2aa:	25 b3       	in	r18, 0x15	; 21
     2ac:	81 e0       	ldi	r24, 0x01	; 1
     2ae:	90 e0       	ldi	r25, 0x00	; 0
     2b0:	ac 01       	movw	r20, r24
     2b2:	02 c0       	rjmp	.+4      	; 0x2b8 <DIO_SetPinValue+0xce>
     2b4:	44 0f       	add	r20, r20
     2b6:	55 1f       	adc	r21, r21
     2b8:	6a 95       	dec	r22
     2ba:	e2 f7       	brpl	.-8      	; 0x2b4 <DIO_SetPinValue+0xca>
     2bc:	ba 01       	movw	r22, r20
     2be:	60 95       	com	r22
     2c0:	62 23       	and	r22, r18
     2c2:	65 bb       	out	0x15, r22	; 21
     2c4:	80 e0       	ldi	r24, 0x00	; 0
     2c6:	08 95       	ret
     2c8:	41 30       	cpi	r20, 0x01	; 1
     2ca:	71 f4       	brne	.+28     	; 0x2e8 <DIO_SetPinValue+0xfe>
     2cc:	22 b3       	in	r18, 0x12	; 18
     2ce:	81 e0       	ldi	r24, 0x01	; 1
     2d0:	90 e0       	ldi	r25, 0x00	; 0
     2d2:	ac 01       	movw	r20, r24
     2d4:	02 c0       	rjmp	.+4      	; 0x2da <DIO_SetPinValue+0xf0>
     2d6:	44 0f       	add	r20, r20
     2d8:	55 1f       	adc	r21, r21
     2da:	6a 95       	dec	r22
     2dc:	e2 f7       	brpl	.-8      	; 0x2d6 <DIO_SetPinValue+0xec>
     2de:	ba 01       	movw	r22, r20
     2e0:	62 2b       	or	r22, r18
     2e2:	62 bb       	out	0x12, r22	; 18
     2e4:	80 e0       	ldi	r24, 0x00	; 0
     2e6:	08 95       	ret
     2e8:	22 b3       	in	r18, 0x12	; 18
     2ea:	81 e0       	ldi	r24, 0x01	; 1
     2ec:	90 e0       	ldi	r25, 0x00	; 0
     2ee:	ac 01       	movw	r20, r24
     2f0:	02 c0       	rjmp	.+4      	; 0x2f6 <DIO_SetPinValue+0x10c>
     2f2:	44 0f       	add	r20, r20
     2f4:	55 1f       	adc	r21, r21
     2f6:	6a 95       	dec	r22
     2f8:	e2 f7       	brpl	.-8      	; 0x2f2 <DIO_SetPinValue+0x108>
     2fa:	ba 01       	movw	r22, r20
     2fc:	60 95       	com	r22
     2fe:	62 23       	and	r22, r18
     300:	62 bb       	out	0x12, r22	; 18
     302:	80 e0       	ldi	r24, 0x00	; 0
     304:	08 95       	ret
     306:	81 e0       	ldi	r24, 0x01	; 1
     308:	08 95       	ret
     30a:	81 e0       	ldi	r24, 0x01	; 1
     30c:	08 95       	ret
     30e:	81 e0       	ldi	r24, 0x01	; 1
     310:	08 95       	ret
     312:	80 e0       	ldi	r24, 0x00	; 0
     314:	08 95       	ret

00000316 <DIO_TogglePinValue>:
     316:	84 30       	cpi	r24, 0x04	; 4
     318:	08 f0       	brcs	.+2      	; 0x31c <DIO_TogglePinValue+0x6>
     31a:	45 c0       	rjmp	.+138    	; 0x3a6 <DIO_TogglePinValue+0x90>
     31c:	68 30       	cpi	r22, 0x08	; 8
     31e:	08 f0       	brcs	.+2      	; 0x322 <DIO_TogglePinValue+0xc>
     320:	44 c0       	rjmp	.+136    	; 0x3aa <DIO_TogglePinValue+0x94>
     322:	81 30       	cpi	r24, 0x01	; 1
     324:	b1 f0       	breq	.+44     	; 0x352 <DIO_TogglePinValue+0x3c>
     326:	81 30       	cpi	r24, 0x01	; 1
     328:	30 f0       	brcs	.+12     	; 0x336 <DIO_TogglePinValue+0x20>
     32a:	82 30       	cpi	r24, 0x02	; 2
     32c:	01 f1       	breq	.+64     	; 0x36e <DIO_TogglePinValue+0x58>
     32e:	83 30       	cpi	r24, 0x03	; 3
     330:	09 f0       	breq	.+2      	; 0x334 <DIO_TogglePinValue+0x1e>
     332:	3d c0       	rjmp	.+122    	; 0x3ae <DIO_TogglePinValue+0x98>
     334:	2a c0       	rjmp	.+84     	; 0x38a <DIO_TogglePinValue+0x74>
     336:	2b b3       	in	r18, 0x1b	; 27
     338:	81 e0       	ldi	r24, 0x01	; 1
     33a:	90 e0       	ldi	r25, 0x00	; 0
     33c:	ac 01       	movw	r20, r24
     33e:	02 c0       	rjmp	.+4      	; 0x344 <DIO_TogglePinValue+0x2e>
     340:	44 0f       	add	r20, r20
     342:	55 1f       	adc	r21, r21
     344:	6a 95       	dec	r22
     346:	e2 f7       	brpl	.-8      	; 0x340 <DIO_TogglePinValue+0x2a>
     348:	ba 01       	movw	r22, r20
     34a:	62 27       	eor	r22, r18
     34c:	6b bb       	out	0x1b, r22	; 27
     34e:	80 e0       	ldi	r24, 0x00	; 0
     350:	08 95       	ret
     352:	28 b3       	in	r18, 0x18	; 24
     354:	81 e0       	ldi	r24, 0x01	; 1
     356:	90 e0       	ldi	r25, 0x00	; 0
     358:	ac 01       	movw	r20, r24
     35a:	02 c0       	rjmp	.+4      	; 0x360 <DIO_TogglePinValue+0x4a>
     35c:	44 0f       	add	r20, r20
     35e:	55 1f       	adc	r21, r21
     360:	6a 95       	dec	r22
     362:	e2 f7       	brpl	.-8      	; 0x35c <DIO_TogglePinValue+0x46>
     364:	ba 01       	movw	r22, r20
     366:	62 27       	eor	r22, r18
     368:	68 bb       	out	0x18, r22	; 24
     36a:	80 e0       	ldi	r24, 0x00	; 0
     36c:	08 95       	ret
     36e:	25 b3       	in	r18, 0x15	; 21
     370:	81 e0       	ldi	r24, 0x01	; 1
     372:	90 e0       	ldi	r25, 0x00	; 0
     374:	ac 01       	movw	r20, r24
     376:	02 c0       	rjmp	.+4      	; 0x37c <DIO_TogglePinValue+0x66>
     378:	44 0f       	add	r20, r20
     37a:	55 1f       	adc	r21, r21
     37c:	6a 95       	dec	r22
     37e:	e2 f7       	brpl	.-8      	; 0x378 <DIO_TogglePinValue+0x62>
     380:	ba 01       	movw	r22, r20
     382:	62 27       	eor	r22, r18
     384:	65 bb       	out	0x15, r22	; 21
     386:	80 e0       	ldi	r24, 0x00	; 0
     388:	08 95       	ret
     38a:	22 b3       	in	r18, 0x12	; 18
     38c:	81 e0       	ldi	r24, 0x01	; 1
     38e:	90 e0       	ldi	r25, 0x00	; 0
     390:	ac 01       	movw	r20, r24
     392:	02 c0       	rjmp	.+4      	; 0x398 <DIO_TogglePinValue+0x82>
     394:	44 0f       	add	r20, r20
     396:	55 1f       	adc	r21, r21
     398:	6a 95       	dec	r22
     39a:	e2 f7       	brpl	.-8      	; 0x394 <DIO_TogglePinValue+0x7e>
     39c:	ba 01       	movw	r22, r20
     39e:	62 27       	eor	r22, r18
     3a0:	62 bb       	out	0x12, r22	; 18
     3a2:	80 e0       	ldi	r24, 0x00	; 0
     3a4:	08 95       	ret
     3a6:	81 e0       	ldi	r24, 0x01	; 1
     3a8:	08 95       	ret
     3aa:	81 e0       	ldi	r24, 0x01	; 1
     3ac:	08 95       	ret
     3ae:	80 e0       	ldi	r24, 0x00	; 0
     3b0:	08 95       	ret

000003b2 <DIO_ReadValue>:
     3b2:	84 30       	cpi	r24, 0x04	; 4
     3b4:	08 f0       	brcs	.+2      	; 0x3b8 <DIO_ReadValue+0x6>
     3b6:	49 c0       	rjmp	.+146    	; 0x44a <DIO_ReadValue+0x98>
     3b8:	68 30       	cpi	r22, 0x08	; 8
     3ba:	08 f0       	brcs	.+2      	; 0x3be <DIO_ReadValue+0xc>
     3bc:	48 c0       	rjmp	.+144    	; 0x44e <DIO_ReadValue+0x9c>
     3be:	41 15       	cp	r20, r1
     3c0:	51 05       	cpc	r21, r1
     3c2:	09 f4       	brne	.+2      	; 0x3c6 <DIO_ReadValue+0x14>
     3c4:	46 c0       	rjmp	.+140    	; 0x452 <DIO_ReadValue+0xa0>
     3c6:	81 30       	cpi	r24, 0x01	; 1
     3c8:	b1 f0       	breq	.+44     	; 0x3f6 <DIO_ReadValue+0x44>
     3ca:	81 30       	cpi	r24, 0x01	; 1
     3cc:	30 f0       	brcs	.+12     	; 0x3da <DIO_ReadValue+0x28>
     3ce:	82 30       	cpi	r24, 0x02	; 2
     3d0:	01 f1       	breq	.+64     	; 0x412 <DIO_ReadValue+0x60>
     3d2:	83 30       	cpi	r24, 0x03	; 3
     3d4:	09 f0       	breq	.+2      	; 0x3d8 <DIO_ReadValue+0x26>
     3d6:	3f c0       	rjmp	.+126    	; 0x456 <DIO_ReadValue+0xa4>
     3d8:	2a c0       	rjmp	.+84     	; 0x42e <DIO_ReadValue+0x7c>
     3da:	89 b3       	in	r24, 0x19	; 25
     3dc:	90 e0       	ldi	r25, 0x00	; 0
     3de:	9c 01       	movw	r18, r24
     3e0:	02 c0       	rjmp	.+4      	; 0x3e6 <DIO_ReadValue+0x34>
     3e2:	35 95       	asr	r19
     3e4:	27 95       	ror	r18
     3e6:	6a 95       	dec	r22
     3e8:	e2 f7       	brpl	.-8      	; 0x3e2 <DIO_ReadValue+0x30>
     3ea:	b9 01       	movw	r22, r18
     3ec:	61 70       	andi	r22, 0x01	; 1
     3ee:	fa 01       	movw	r30, r20
     3f0:	60 83       	st	Z, r22
     3f2:	80 e0       	ldi	r24, 0x00	; 0
     3f4:	08 95       	ret
     3f6:	86 b3       	in	r24, 0x16	; 22
     3f8:	90 e0       	ldi	r25, 0x00	; 0
     3fa:	9c 01       	movw	r18, r24
     3fc:	02 c0       	rjmp	.+4      	; 0x402 <DIO_ReadValue+0x50>
     3fe:	35 95       	asr	r19
     400:	27 95       	ror	r18
     402:	6a 95       	dec	r22
     404:	e2 f7       	brpl	.-8      	; 0x3fe <DIO_ReadValue+0x4c>
     406:	b9 01       	movw	r22, r18
     408:	61 70       	andi	r22, 0x01	; 1
     40a:	fa 01       	movw	r30, r20
     40c:	60 83       	st	Z, r22
     40e:	80 e0       	ldi	r24, 0x00	; 0
     410:	08 95       	ret
     412:	83 b3       	in	r24, 0x13	; 19
     414:	90 e0       	ldi	r25, 0x00	; 0
     416:	9c 01       	movw	r18, r24
     418:	02 c0       	rjmp	.+4      	; 0x41e <DIO_ReadValue+0x6c>
     41a:	35 95       	asr	r19
     41c:	27 95       	ror	r18
     41e:	6a 95       	dec	r22
     420:	e2 f7       	brpl	.-8      	; 0x41a <DIO_ReadValue+0x68>
     422:	b9 01       	movw	r22, r18
     424:	61 70       	andi	r22, 0x01	; 1
     426:	fa 01       	movw	r30, r20
     428:	60 83       	st	Z, r22
     42a:	80 e0       	ldi	r24, 0x00	; 0
     42c:	08 95       	ret
     42e:	80 b3       	in	r24, 0x10	; 16
     430:	90 e0       	ldi	r25, 0x00	; 0
     432:	9c 01       	movw	r18, r24
     434:	02 c0       	rjmp	.+4      	; 0x43a <DIO_ReadValue+0x88>
     436:	35 95       	asr	r19
     438:	27 95       	ror	r18
     43a:	6a 95       	dec	r22
     43c:	e2 f7       	brpl	.-8      	; 0x436 <DIO_ReadValue+0x84>
     43e:	b9 01       	movw	r22, r18
     440:	61 70       	andi	r22, 0x01	; 1
     442:	fa 01       	movw	r30, r20
     444:	60 83       	st	Z, r22
     446:	80 e0       	ldi	r24, 0x00	; 0
     448:	08 95       	ret
     44a:	81 e0       	ldi	r24, 0x01	; 1
     44c:	08 95       	ret
     44e:	81 e0       	ldi	r24, 0x01	; 1
     450:	08 95       	ret
     452:	81 e0       	ldi	r24, 0x01	; 1
     454:	08 95       	ret
     456:	80 e0       	ldi	r24, 0x00	; 0
     458:	08 95       	ret

0000045a <DIO_activePinInPullUpResistance>:
     45a:	84 30       	cpi	r24, 0x04	; 4
     45c:	08 f0       	brcs	.+2      	; 0x460 <DIO_activePinInPullUpResistance+0x6>
     45e:	45 c0       	rjmp	.+138    	; 0x4ea <DIO_activePinInPullUpResistance+0x90>
     460:	68 30       	cpi	r22, 0x08	; 8
     462:	08 f0       	brcs	.+2      	; 0x466 <DIO_activePinInPullUpResistance+0xc>
     464:	44 c0       	rjmp	.+136    	; 0x4ee <DIO_activePinInPullUpResistance+0x94>
     466:	81 30       	cpi	r24, 0x01	; 1
     468:	b1 f0       	breq	.+44     	; 0x496 <DIO_activePinInPullUpResistance+0x3c>
     46a:	81 30       	cpi	r24, 0x01	; 1
     46c:	30 f0       	brcs	.+12     	; 0x47a <DIO_activePinInPullUpResistance+0x20>
     46e:	82 30       	cpi	r24, 0x02	; 2
     470:	01 f1       	breq	.+64     	; 0x4b2 <DIO_activePinInPullUpResistance+0x58>
     472:	83 30       	cpi	r24, 0x03	; 3
     474:	09 f0       	breq	.+2      	; 0x478 <DIO_activePinInPullUpResistance+0x1e>
     476:	3d c0       	rjmp	.+122    	; 0x4f2 <DIO_activePinInPullUpResistance+0x98>
     478:	2a c0       	rjmp	.+84     	; 0x4ce <DIO_activePinInPullUpResistance+0x74>
     47a:	2b b3       	in	r18, 0x1b	; 27
     47c:	81 e0       	ldi	r24, 0x01	; 1
     47e:	90 e0       	ldi	r25, 0x00	; 0
     480:	ac 01       	movw	r20, r24
     482:	02 c0       	rjmp	.+4      	; 0x488 <DIO_activePinInPullUpResistance+0x2e>
     484:	44 0f       	add	r20, r20
     486:	55 1f       	adc	r21, r21
     488:	6a 95       	dec	r22
     48a:	e2 f7       	brpl	.-8      	; 0x484 <DIO_activePinInPullUpResistance+0x2a>
     48c:	ba 01       	movw	r22, r20
     48e:	62 2b       	or	r22, r18
     490:	6b bb       	out	0x1b, r22	; 27
     492:	80 e0       	ldi	r24, 0x00	; 0
     494:	08 95       	ret
     496:	28 b3       	in	r18, 0x18	; 24
     498:	81 e0       	ldi	r24, 0x01	; 1
     49a:	90 e0       	ldi	r25, 0x00	; 0
     49c:	ac 01       	movw	r20, r24
     49e:	02 c0       	rjmp	.+4      	; 0x4a4 <DIO_activePinInPullUpResistance+0x4a>
     4a0:	44 0f       	add	r20, r20
     4a2:	55 1f       	adc	r21, r21
     4a4:	6a 95       	dec	r22
     4a6:	e2 f7       	brpl	.-8      	; 0x4a0 <DIO_activePinInPullUpResistance+0x46>
     4a8:	ba 01       	movw	r22, r20
     4aa:	62 2b       	or	r22, r18
     4ac:	68 bb       	out	0x18, r22	; 24
     4ae:	80 e0       	ldi	r24, 0x00	; 0
     4b0:	08 95       	ret
     4b2:	25 b3       	in	r18, 0x15	; 21
     4b4:	81 e0       	ldi	r24, 0x01	; 1
     4b6:	90 e0       	ldi	r25, 0x00	; 0
     4b8:	ac 01       	movw	r20, r24
     4ba:	02 c0       	rjmp	.+4      	; 0x4c0 <DIO_activePinInPullUpResistance+0x66>
     4bc:	44 0f       	add	r20, r20
     4be:	55 1f       	adc	r21, r21
     4c0:	6a 95       	dec	r22
     4c2:	e2 f7       	brpl	.-8      	; 0x4bc <DIO_activePinInPullUpResistance+0x62>
     4c4:	ba 01       	movw	r22, r20
     4c6:	62 2b       	or	r22, r18
     4c8:	65 bb       	out	0x15, r22	; 21
     4ca:	80 e0       	ldi	r24, 0x00	; 0
     4cc:	08 95       	ret
     4ce:	22 b3       	in	r18, 0x12	; 18
     4d0:	81 e0       	ldi	r24, 0x01	; 1
     4d2:	90 e0       	ldi	r25, 0x00	; 0
     4d4:	ac 01       	movw	r20, r24
     4d6:	02 c0       	rjmp	.+4      	; 0x4dc <DIO_activePinInPullUpResistance+0x82>
     4d8:	44 0f       	add	r20, r20
     4da:	55 1f       	adc	r21, r21
     4dc:	6a 95       	dec	r22
     4de:	e2 f7       	brpl	.-8      	; 0x4d8 <DIO_activePinInPullUpResistance+0x7e>
     4e0:	ba 01       	movw	r22, r20
     4e2:	62 2b       	or	r22, r18
     4e4:	62 bb       	out	0x12, r22	; 18
     4e6:	80 e0       	ldi	r24, 0x00	; 0
     4e8:	08 95       	ret
     4ea:	81 e0       	ldi	r24, 0x01	; 1
     4ec:	08 95       	ret
     4ee:	81 e0       	ldi	r24, 0x01	; 1
     4f0:	08 95       	ret
     4f2:	80 e0       	ldi	r24, 0x00	; 0
     4f4:	08 95       	ret

000004f6 <DIO_setPortDirection>:
     4f6:	84 30       	cpi	r24, 0x04	; 4
     4f8:	a8 f5       	brcc	.+106    	; 0x564 <DIO_setPortDirection+0x6e>
     4fa:	81 30       	cpi	r24, 0x01	; 1
     4fc:	91 f0       	breq	.+36     	; 0x522 <DIO_setPortDirection+0x2c>
     4fe:	81 30       	cpi	r24, 0x01	; 1
     500:	28 f0       	brcs	.+10     	; 0x50c <DIO_setPortDirection+0x16>
     502:	82 30       	cpi	r24, 0x02	; 2
     504:	c9 f0       	breq	.+50     	; 0x538 <DIO_setPortDirection+0x42>
     506:	83 30       	cpi	r24, 0x03	; 3
     508:	79 f5       	brne	.+94     	; 0x568 <DIO_setPortDirection+0x72>
     50a:	21 c0       	rjmp	.+66     	; 0x54e <DIO_setPortDirection+0x58>
     50c:	6f 3f       	cpi	r22, 0xFF	; 255
     50e:	29 f4       	brne	.+10     	; 0x51a <DIO_setPortDirection+0x24>
     510:	8a b3       	in	r24, 0x1a	; 26
     512:	8f ef       	ldi	r24, 0xFF	; 255
     514:	8a bb       	out	0x1a, r24	; 26
     516:	80 e0       	ldi	r24, 0x00	; 0
     518:	08 95       	ret
     51a:	8a b3       	in	r24, 0x1a	; 26
     51c:	1a ba       	out	0x1a, r1	; 26
     51e:	80 e0       	ldi	r24, 0x00	; 0
     520:	08 95       	ret
     522:	6f 3f       	cpi	r22, 0xFF	; 255
     524:	29 f4       	brne	.+10     	; 0x530 <DIO_setPortDirection+0x3a>
     526:	87 b3       	in	r24, 0x17	; 23
     528:	8f ef       	ldi	r24, 0xFF	; 255
     52a:	87 bb       	out	0x17, r24	; 23
     52c:	80 e0       	ldi	r24, 0x00	; 0
     52e:	08 95       	ret
     530:	87 b3       	in	r24, 0x17	; 23
     532:	17 ba       	out	0x17, r1	; 23
     534:	80 e0       	ldi	r24, 0x00	; 0
     536:	08 95       	ret
     538:	6f 3f       	cpi	r22, 0xFF	; 255
     53a:	29 f4       	brne	.+10     	; 0x546 <DIO_setPortDirection+0x50>
     53c:	84 b3       	in	r24, 0x14	; 20
     53e:	8f ef       	ldi	r24, 0xFF	; 255
     540:	84 bb       	out	0x14, r24	; 20
     542:	80 e0       	ldi	r24, 0x00	; 0
     544:	08 95       	ret
     546:	84 b3       	in	r24, 0x14	; 20
     548:	14 ba       	out	0x14, r1	; 20
     54a:	80 e0       	ldi	r24, 0x00	; 0
     54c:	08 95       	ret
     54e:	6f 3f       	cpi	r22, 0xFF	; 255
     550:	29 f4       	brne	.+10     	; 0x55c <DIO_setPortDirection+0x66>
     552:	81 b3       	in	r24, 0x11	; 17
     554:	8f ef       	ldi	r24, 0xFF	; 255
     556:	81 bb       	out	0x11, r24	; 17
     558:	80 e0       	ldi	r24, 0x00	; 0
     55a:	08 95       	ret
     55c:	81 b3       	in	r24, 0x11	; 17
     55e:	11 ba       	out	0x11, r1	; 17
     560:	80 e0       	ldi	r24, 0x00	; 0
     562:	08 95       	ret
     564:	81 e0       	ldi	r24, 0x01	; 1
     566:	08 95       	ret
     568:	80 e0       	ldi	r24, 0x00	; 0
     56a:	08 95       	ret

0000056c <DIO_setPortValue>:
     56c:	84 30       	cpi	r24, 0x04	; 4
     56e:	a8 f4       	brcc	.+42     	; 0x59a <DIO_setPortValue+0x2e>
     570:	81 30       	cpi	r24, 0x01	; 1
     572:	51 f0       	breq	.+20     	; 0x588 <DIO_setPortValue+0x1c>
     574:	81 30       	cpi	r24, 0x01	; 1
     576:	28 f0       	brcs	.+10     	; 0x582 <DIO_setPortValue+0x16>
     578:	82 30       	cpi	r24, 0x02	; 2
     57a:	49 f0       	breq	.+18     	; 0x58e <DIO_setPortValue+0x22>
     57c:	83 30       	cpi	r24, 0x03	; 3
     57e:	79 f4       	brne	.+30     	; 0x59e <DIO_setPortValue+0x32>
     580:	09 c0       	rjmp	.+18     	; 0x594 <DIO_setPortValue+0x28>
     582:	6b bb       	out	0x1b, r22	; 27
     584:	80 e0       	ldi	r24, 0x00	; 0
     586:	08 95       	ret
     588:	68 bb       	out	0x18, r22	; 24
     58a:	80 e0       	ldi	r24, 0x00	; 0
     58c:	08 95       	ret
     58e:	65 bb       	out	0x15, r22	; 21
     590:	80 e0       	ldi	r24, 0x00	; 0
     592:	08 95       	ret
     594:	62 bb       	out	0x12, r22	; 18
     596:	80 e0       	ldi	r24, 0x00	; 0
     598:	08 95       	ret
     59a:	81 e0       	ldi	r24, 0x01	; 1
     59c:	08 95       	ret
     59e:	80 e0       	ldi	r24, 0x00	; 0
     5a0:	08 95       	ret

000005a2 <DIO_getPortValue>:
     5a2:	84 30       	cpi	r24, 0x04	; 4
     5a4:	00 f5       	brcc	.+64     	; 0x5e6 <DIO_getPortValue+0x44>
     5a6:	61 15       	cp	r22, r1
     5a8:	71 05       	cpc	r23, r1
     5aa:	f9 f0       	breq	.+62     	; 0x5ea <DIO_getPortValue+0x48>
     5ac:	81 30       	cpi	r24, 0x01	; 1
     5ae:	61 f0       	breq	.+24     	; 0x5c8 <DIO_getPortValue+0x26>
     5b0:	81 30       	cpi	r24, 0x01	; 1
     5b2:	28 f0       	brcs	.+10     	; 0x5be <DIO_getPortValue+0x1c>
     5b4:	82 30       	cpi	r24, 0x02	; 2
     5b6:	69 f0       	breq	.+26     	; 0x5d2 <DIO_getPortValue+0x30>
     5b8:	83 30       	cpi	r24, 0x03	; 3
     5ba:	c9 f4       	brne	.+50     	; 0x5ee <DIO_getPortValue+0x4c>
     5bc:	0f c0       	rjmp	.+30     	; 0x5dc <DIO_getPortValue+0x3a>
     5be:	8b b3       	in	r24, 0x1b	; 27
     5c0:	fb 01       	movw	r30, r22
     5c2:	80 83       	st	Z, r24
     5c4:	80 e0       	ldi	r24, 0x00	; 0
     5c6:	08 95       	ret
     5c8:	88 b3       	in	r24, 0x18	; 24
     5ca:	fb 01       	movw	r30, r22
     5cc:	80 83       	st	Z, r24
     5ce:	80 e0       	ldi	r24, 0x00	; 0
     5d0:	08 95       	ret
     5d2:	85 b3       	in	r24, 0x15	; 21
     5d4:	fb 01       	movw	r30, r22
     5d6:	80 83       	st	Z, r24
     5d8:	80 e0       	ldi	r24, 0x00	; 0
     5da:	08 95       	ret
     5dc:	82 b3       	in	r24, 0x12	; 18
     5de:	fb 01       	movw	r30, r22
     5e0:	80 83       	st	Z, r24
     5e2:	80 e0       	ldi	r24, 0x00	; 0
     5e4:	08 95       	ret
     5e6:	81 e0       	ldi	r24, 0x01	; 1
     5e8:	08 95       	ret
     5ea:	81 e0       	ldi	r24, 0x01	; 1
     5ec:	08 95       	ret
     5ee:	80 e0       	ldi	r24, 0x00	; 0
     5f0:	08 95       	ret

000005f2 <DIO_togglePortValue>:
     5f2:	84 30       	cpi	r24, 0x04	; 4
     5f4:	e8 f4       	brcc	.+58     	; 0x630 <DIO_togglePortValue+0x3e>
     5f6:	81 30       	cpi	r24, 0x01	; 1
     5f8:	61 f0       	breq	.+24     	; 0x612 <DIO_togglePortValue+0x20>
     5fa:	81 30       	cpi	r24, 0x01	; 1
     5fc:	28 f0       	brcs	.+10     	; 0x608 <DIO_togglePortValue+0x16>
     5fe:	82 30       	cpi	r24, 0x02	; 2
     600:	69 f0       	breq	.+26     	; 0x61c <DIO_togglePortValue+0x2a>
     602:	83 30       	cpi	r24, 0x03	; 3
     604:	b9 f4       	brne	.+46     	; 0x634 <DIO_togglePortValue+0x42>
     606:	0f c0       	rjmp	.+30     	; 0x626 <DIO_togglePortValue+0x34>
     608:	8b b3       	in	r24, 0x1b	; 27
     60a:	80 95       	com	r24
     60c:	8b bb       	out	0x1b, r24	; 27
     60e:	80 e0       	ldi	r24, 0x00	; 0
     610:	08 95       	ret
     612:	88 b3       	in	r24, 0x18	; 24
     614:	80 95       	com	r24
     616:	88 bb       	out	0x18, r24	; 24
     618:	80 e0       	ldi	r24, 0x00	; 0
     61a:	08 95       	ret
     61c:	85 b3       	in	r24, 0x15	; 21
     61e:	80 95       	com	r24
     620:	85 bb       	out	0x15, r24	; 21
     622:	80 e0       	ldi	r24, 0x00	; 0
     624:	08 95       	ret
     626:	82 b3       	in	r24, 0x12	; 18
     628:	80 95       	com	r24
     62a:	82 bb       	out	0x12, r24	; 18
     62c:	80 e0       	ldi	r24, 0x00	; 0
     62e:	08 95       	ret
     630:	81 e0       	ldi	r24, 0x01	; 1
     632:	08 95       	ret
     634:	80 e0       	ldi	r24, 0x00	; 0
     636:	08 95       	ret

00000638 <DIO_activePortInPullUpResistance>:
     638:	84 30       	cpi	r24, 0x04	; 4
     63a:	e8 f4       	brcc	.+58     	; 0x676 <DIO_activePortInPullUpResistance+0x3e>
     63c:	81 30       	cpi	r24, 0x01	; 1
     63e:	61 f0       	breq	.+24     	; 0x658 <DIO_activePortInPullUpResistance+0x20>
     640:	81 30       	cpi	r24, 0x01	; 1
     642:	28 f0       	brcs	.+10     	; 0x64e <DIO_activePortInPullUpResistance+0x16>
     644:	82 30       	cpi	r24, 0x02	; 2
     646:	69 f0       	breq	.+26     	; 0x662 <DIO_activePortInPullUpResistance+0x2a>
     648:	83 30       	cpi	r24, 0x03	; 3
     64a:	b9 f4       	brne	.+46     	; 0x67a <DIO_activePortInPullUpResistance+0x42>
     64c:	0f c0       	rjmp	.+30     	; 0x66c <DIO_activePortInPullUpResistance+0x34>
     64e:	8b b3       	in	r24, 0x1b	; 27
     650:	8f ef       	ldi	r24, 0xFF	; 255
     652:	8b bb       	out	0x1b, r24	; 27
     654:	80 e0       	ldi	r24, 0x00	; 0
     656:	08 95       	ret
     658:	88 b3       	in	r24, 0x18	; 24
     65a:	8f ef       	ldi	r24, 0xFF	; 255
     65c:	88 bb       	out	0x18, r24	; 24
     65e:	80 e0       	ldi	r24, 0x00	; 0
     660:	08 95       	ret
     662:	85 b3       	in	r24, 0x15	; 21
     664:	8f ef       	ldi	r24, 0xFF	; 255
     666:	85 bb       	out	0x15, r24	; 21
     668:	80 e0       	ldi	r24, 0x00	; 0
     66a:	08 95       	ret
     66c:	82 b3       	in	r24, 0x12	; 18
     66e:	8f ef       	ldi	r24, 0xFF	; 255
     670:	82 bb       	out	0x12, r24	; 18
     672:	80 e0       	ldi	r24, 0x00	; 0
     674:	08 95       	ret
     676:	81 e0       	ldi	r24, 0x01	; 1
     678:	08 95       	ret
     67a:	80 e0       	ldi	r24, 0x00	; 0
     67c:	08 95       	ret

0000067e <EEPROM_init>:
     67e:	0e 94 87 03 	call	0x70e	; 0x70e <I2C_initMaster>
     682:	08 95       	ret

00000684 <EEPROM_WriteByte>:
     684:	1f 93       	push	r17
     686:	cf 93       	push	r28
     688:	df 93       	push	r29
     68a:	d8 2f       	mov	r29, r24
     68c:	19 2f       	mov	r17, r25
     68e:	c6 2f       	mov	r28, r22
     690:	0e 94 92 03 	call	0x724	; 0x724 <I2C_sendStartCondition>
     694:	81 2f       	mov	r24, r17
     696:	80 65       	ori	r24, 0x50	; 80
     698:	0e 94 b5 03 	call	0x76a	; 0x76a <I2C_sendSlaveAddWithWrite>
     69c:	8d 2f       	mov	r24, r29
     69e:	0e 94 db 03 	call	0x7b6	; 0x7b6 <I2C_sendMasterDataByte>
     6a2:	8c 2f       	mov	r24, r28
     6a4:	0e 94 db 03 	call	0x7b6	; 0x7b6 <I2C_sendMasterDataByte>
     6a8:	0e 94 ae 03 	call	0x75c	; 0x75c <I2C_sendStopCondition>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     6ac:	8f e1       	ldi	r24, 0x1F	; 31
     6ae:	9e e4       	ldi	r25, 0x4E	; 78
     6b0:	01 97       	sbiw	r24, 0x01	; 1
     6b2:	f1 f7       	brne	.-4      	; 0x6b0 <EEPROM_WriteByte+0x2c>
     6b4:	00 c0       	rjmp	.+0      	; 0x6b6 <EEPROM_WriteByte+0x32>
     6b6:	00 00       	nop
     6b8:	df 91       	pop	r29
     6ba:	cf 91       	pop	r28
     6bc:	1f 91       	pop	r17
     6be:	08 95       	ret

000006c0 <EEPROM_ReadByte>:
     6c0:	0f 93       	push	r16
     6c2:	1f 93       	push	r17
     6c4:	cf 93       	push	r28
     6c6:	df 93       	push	r29
     6c8:	08 2f       	mov	r16, r24
     6ca:	eb 01       	movw	r28, r22
     6cc:	20 97       	sbiw	r28, 0x00	; 0
     6ce:	d1 f0       	breq	.+52     	; 0x704 <EEPROM_ReadByte+0x44>
     6d0:	19 2f       	mov	r17, r25
     6d2:	10 65       	ori	r17, 0x50	; 80
     6d4:	0e 94 92 03 	call	0x724	; 0x724 <I2C_sendStartCondition>
     6d8:	81 2f       	mov	r24, r17
     6da:	0e 94 b5 03 	call	0x76a	; 0x76a <I2C_sendSlaveAddWithWrite>
     6de:	80 2f       	mov	r24, r16
     6e0:	0e 94 db 03 	call	0x7b6	; 0x7b6 <I2C_sendMasterDataByte>
     6e4:	0e 94 a0 03 	call	0x740	; 0x740 <I2C_sendRepStartCondition>
     6e8:	81 2f       	mov	r24, r17
     6ea:	0e 94 c8 03 	call	0x790	; 0x790 <I2C_sendSlaveAddWithRead>
     6ee:	ce 01       	movw	r24, r28
     6f0:	0e 94 e7 03 	call	0x7ce	; 0x7ce <I2C_recieveMasterDataByte>
     6f4:	0e 94 ae 03 	call	0x75c	; 0x75c <I2C_sendStopCondition>
     6f8:	8f e1       	ldi	r24, 0x1F	; 31
     6fa:	9e e4       	ldi	r25, 0x4E	; 78
     6fc:	01 97       	sbiw	r24, 0x01	; 1
     6fe:	f1 f7       	brne	.-4      	; 0x6fc <EEPROM_ReadByte+0x3c>
     700:	00 c0       	rjmp	.+0      	; 0x702 <EEPROM_ReadByte+0x42>
     702:	00 00       	nop
     704:	df 91       	pop	r29
     706:	cf 91       	pop	r28
     708:	1f 91       	pop	r17
     70a:	0f 91       	pop	r16
     70c:	08 95       	ret

0000070e <I2C_initMaster>:
     70e:	8c e0       	ldi	r24, 0x0C	; 12
     710:	80 b9       	out	0x00, r24	; 0
     712:	08 98       	cbi	0x01, 0	; 1
     714:	09 98       	cbi	0x01, 1	; 1
     716:	86 b7       	in	r24, 0x36	; 54
     718:	80 64       	ori	r24, 0x40	; 64
     71a:	86 bf       	out	0x36, r24	; 54
     71c:	86 b7       	in	r24, 0x36	; 54
     71e:	84 60       	ori	r24, 0x04	; 4
     720:	86 bf       	out	0x36, r24	; 54
     722:	08 95       	ret

00000724 <I2C_sendStartCondition>:
     724:	86 b7       	in	r24, 0x36	; 54
     726:	80 62       	ori	r24, 0x20	; 32
     728:	86 bf       	out	0x36, r24	; 54
     72a:	86 b7       	in	r24, 0x36	; 54
     72c:	80 68       	ori	r24, 0x80	; 128
     72e:	86 bf       	out	0x36, r24	; 54
     730:	06 b6       	in	r0, 0x36	; 54
     732:	07 fe       	sbrs	r0, 7
     734:	fd cf       	rjmp	.-6      	; 0x730 <I2C_sendStartCondition+0xc>
     736:	81 b1       	in	r24, 0x01	; 1
     738:	88 7f       	andi	r24, 0xF8	; 248
     73a:	88 30       	cpi	r24, 0x08	; 8
     73c:	e1 f7       	brne	.-8      	; 0x736 <I2C_sendStartCondition+0x12>
     73e:	08 95       	ret

00000740 <I2C_sendRepStartCondition>:
     740:	86 b7       	in	r24, 0x36	; 54
     742:	80 62       	ori	r24, 0x20	; 32
     744:	86 bf       	out	0x36, r24	; 54
     746:	86 b7       	in	r24, 0x36	; 54
     748:	80 68       	ori	r24, 0x80	; 128
     74a:	86 bf       	out	0x36, r24	; 54
     74c:	06 b6       	in	r0, 0x36	; 54
     74e:	07 fe       	sbrs	r0, 7
     750:	fd cf       	rjmp	.-6      	; 0x74c <I2C_sendRepStartCondition+0xc>
     752:	81 b1       	in	r24, 0x01	; 1
     754:	88 7f       	andi	r24, 0xF8	; 248
     756:	80 31       	cpi	r24, 0x10	; 16
     758:	e1 f7       	brne	.-8      	; 0x752 <I2C_sendRepStartCondition+0x12>
     75a:	08 95       	ret

0000075c <I2C_sendStopCondition>:
     75c:	86 b7       	in	r24, 0x36	; 54
     75e:	80 61       	ori	r24, 0x10	; 16
     760:	86 bf       	out	0x36, r24	; 54
     762:	86 b7       	in	r24, 0x36	; 54
     764:	80 68       	ori	r24, 0x80	; 128
     766:	86 bf       	out	0x36, r24	; 54
     768:	08 95       	ret

0000076a <I2C_sendSlaveAddWithWrite>:
     76a:	88 23       	and	r24, r24
     76c:	84 f0       	brlt	.+32     	; 0x78e <I2C_sendSlaveAddWithWrite+0x24>
     76e:	88 0f       	add	r24, r24
     770:	83 b9       	out	0x03, r24	; 3
     772:	18 98       	cbi	0x03, 0	; 3
     774:	86 b7       	in	r24, 0x36	; 54
     776:	8f 7d       	andi	r24, 0xDF	; 223
     778:	86 bf       	out	0x36, r24	; 54
     77a:	86 b7       	in	r24, 0x36	; 54
     77c:	80 68       	ori	r24, 0x80	; 128
     77e:	86 bf       	out	0x36, r24	; 54
     780:	06 b6       	in	r0, 0x36	; 54
     782:	07 fe       	sbrs	r0, 7
     784:	fd cf       	rjmp	.-6      	; 0x780 <I2C_sendSlaveAddWithWrite+0x16>
     786:	81 b1       	in	r24, 0x01	; 1
     788:	88 7f       	andi	r24, 0xF8	; 248
     78a:	88 31       	cpi	r24, 0x18	; 24
     78c:	e1 f7       	brne	.-8      	; 0x786 <I2C_sendSlaveAddWithWrite+0x1c>
     78e:	08 95       	ret

00000790 <I2C_sendSlaveAddWithRead>:
     790:	88 23       	and	r24, r24
     792:	84 f0       	brlt	.+32     	; 0x7b4 <I2C_sendSlaveAddWithRead+0x24>
     794:	88 0f       	add	r24, r24
     796:	83 b9       	out	0x03, r24	; 3
     798:	18 9a       	sbi	0x03, 0	; 3
     79a:	86 b7       	in	r24, 0x36	; 54
     79c:	8f 7d       	andi	r24, 0xDF	; 223
     79e:	86 bf       	out	0x36, r24	; 54
     7a0:	86 b7       	in	r24, 0x36	; 54
     7a2:	80 68       	ori	r24, 0x80	; 128
     7a4:	86 bf       	out	0x36, r24	; 54
     7a6:	06 b6       	in	r0, 0x36	; 54
     7a8:	07 fe       	sbrs	r0, 7
     7aa:	fd cf       	rjmp	.-6      	; 0x7a6 <I2C_sendSlaveAddWithRead+0x16>
     7ac:	81 b1       	in	r24, 0x01	; 1
     7ae:	88 7f       	andi	r24, 0xF8	; 248
     7b0:	80 34       	cpi	r24, 0x40	; 64
     7b2:	e1 f7       	brne	.-8      	; 0x7ac <I2C_sendSlaveAddWithRead+0x1c>
     7b4:	08 95       	ret

000007b6 <I2C_sendMasterDataByte>:
     7b6:	83 b9       	out	0x03, r24	; 3
     7b8:	86 b7       	in	r24, 0x36	; 54
     7ba:	80 68       	ori	r24, 0x80	; 128
     7bc:	86 bf       	out	0x36, r24	; 54
     7be:	06 b6       	in	r0, 0x36	; 54
     7c0:	07 fe       	sbrs	r0, 7
     7c2:	fd cf       	rjmp	.-6      	; 0x7be <I2C_sendMasterDataByte+0x8>
     7c4:	81 b1       	in	r24, 0x01	; 1
     7c6:	88 7f       	andi	r24, 0xF8	; 248
     7c8:	88 32       	cpi	r24, 0x28	; 40
     7ca:	e1 f7       	brne	.-8      	; 0x7c4 <I2C_sendMasterDataByte+0xe>
     7cc:	08 95       	ret

000007ce <I2C_recieveMasterDataByte>:
     7ce:	00 97       	sbiw	r24, 0x00	; 0
     7d0:	69 f0       	breq	.+26     	; 0x7ec <I2C_recieveMasterDataByte+0x1e>
     7d2:	26 b7       	in	r18, 0x36	; 54
     7d4:	20 68       	ori	r18, 0x80	; 128
     7d6:	26 bf       	out	0x36, r18	; 54
     7d8:	06 b6       	in	r0, 0x36	; 54
     7da:	07 fe       	sbrs	r0, 7
     7dc:	fd cf       	rjmp	.-6      	; 0x7d8 <I2C_recieveMasterDataByte+0xa>
     7de:	21 b1       	in	r18, 0x01	; 1
     7e0:	28 7f       	andi	r18, 0xF8	; 248
     7e2:	20 35       	cpi	r18, 0x50	; 80
     7e4:	e1 f7       	brne	.-8      	; 0x7de <I2C_recieveMasterDataByte+0x10>
     7e6:	23 b1       	in	r18, 0x03	; 3
     7e8:	fc 01       	movw	r30, r24
     7ea:	20 83       	st	Z, r18
     7ec:	08 95       	ret

000007ee <main>:
#include "EEPROM_private.h"

u8 WrongCounter=2;

int main(void)
{
     7ee:	cf 93       	push	r28
     7f0:	df 93       	push	r29
     7f2:	cd b7       	in	r28, 0x3d	; 61
     7f4:	de b7       	in	r29, 0x3e	; 62
     7f6:	27 97       	sbiw	r28, 0x07	; 7
     7f8:	0f b6       	in	r0, 0x3f	; 63
     7fa:	f8 94       	cli
     7fc:	de bf       	out	0x3e, r29	; 62
     7fe:	0f be       	out	0x3f, r0	; 63
     800:	cd bf       	out	0x3d, r28	; 61
	u8 Index=0;
	u8 ButtonValue;
    
	
	
	KEYPAD_init();
     802:	0e 94 af 06 	call	0xd5e	; 0xd5e <KEYPAD_init>
	UART_init();
     806:	0e 94 39 0a 	call	0x1472	; 0x1472 <UART_init>
	SERVO_init();
     80a:	0e 94 df 09 	call	0x13be	; 0x13be <SERVO_init>
	SERVO_TurnON(4999,374);
     80e:	87 e8       	ldi	r24, 0x87	; 135
     810:	93 e1       	ldi	r25, 0x13	; 19
     812:	66 e7       	ldi	r22, 0x76	; 118
     814:	71 e0       	ldi	r23, 0x01	; 1
     816:	0e 94 ef 09 	call	0x13de	; 0x13de <SERVO_TurnON>
	LCD_init();
     81a:	0e 94 2b 08 	call	0x1056	; 0x1056 <LCD_init>
	RELAY_init(RELAY_PORT,RELAY_PIN);
     81e:	81 e0       	ldi	r24, 0x01	; 1
     820:	64 e0       	ldi	r22, 0x04	; 4
     822:	0e 94 c0 09 	call	0x1380	; 0x1380 <RELAY_init>
	LED_init(WARNING_LED_PORT,WARNING_LED_PIN);
     826:	81 e0       	ldi	r24, 0x01	; 1
     828:	65 e0       	ldi	r22, 0x05	; 5
     82a:	0e 94 a1 09 	call	0x1342	; 0x1342 <LED_init>
	LED_init(NOK_LED_PORT,NOK_LED_PIN);
     82e:	81 e0       	ldi	r24, 0x01	; 1
     830:	66 e0       	ldi	r22, 0x06	; 6
     832:	0e 94 a1 09 	call	0x1342	; 0x1342 <LED_init>
	LED_init(OK_LED_PORT,OK_LED_PIN);
     836:	81 e0       	ldi	r24, 0x01	; 1
     838:	67 e0       	ldi	r22, 0x07	; 7
     83a:	0e 94 a1 09 	call	0x1342	; 0x1342 <LED_init>
	BUTTON_init(SwitchMode_BUTTON_PORT,SwitchMode_BUTTON_PIN);
     83e:	81 e0       	ldi	r24, 0x01	; 1
     840:	60 e0       	ldi	r22, 0x00	; 0
     842:	0e 94 49 00 	call	0x92	; 0x92 <BUTTON_init>
	
	LCD_SendString("    WELCOME    ");
     846:	80 e6       	ldi	r24, 0x60	; 96
     848:	90 e0       	ldi	r25, 0x00	; 0
     84a:	0e 94 c6 08 	call	0x118c	; 0x118c <LCD_SendString>
     84e:	8f ef       	ldi	r24, 0xFF	; 255
     850:	9d e3       	ldi	r25, 0x3D	; 61
     852:	a9 e4       	ldi	r26, 0x49	; 73
     854:	81 50       	subi	r24, 0x01	; 1
     856:	90 40       	sbci	r25, 0x00	; 0
     858:	a0 40       	sbci	r26, 0x00	; 0
     85a:	e1 f7       	brne	.-8      	; 0x854 <main+0x66>
     85c:	00 c0       	rjmp	.+0      	; 0x85e <main+0x70>
     85e:	00 00       	nop
	_delay_ms(1500);
	LCD_ClearDesplay();
     860:	0e 94 d5 08 	call	0x11aa	; 0x11aa <LCD_ClearDesplay>
	LCD_SendString("PASSWORD:");
     864:	80 e7       	ldi	r24, 0x70	; 112
     866:	90 e0       	ldi	r25, 0x00	; 0
     868:	0e 94 c6 08 	call	0x118c	; 0x118c <LCD_SendString>
	
	EEPROM_init();
     86c:	0e 94 3f 03 	call	0x67e	; 0x67e <EEPROM_init>
	
	u16 password;
	u8 passwordSize=0;
	u8 ReceiveValue;
	u8 KeypadValue;
	u8 Index=0;
     870:	00 e0       	ldi	r16, 0x00	; 0
{
	u8 TakenPassword[MaxPasswardSize];
	u8 StoagePassword;
	
	u16 password;
	u8 passwordSize=0;
     872:	10 e0       	ldi	r17, 0x00	; 0
					LED_TurnOFF(NOK_LED_PORT,NOK_LED_PIN);
					LED_TurnOFF(WARNING_LED_PORT,WARNING_LED_PIN);
					RELAY_TurnOFF(RELAY_PORT,RELAY_PIN);
					SERVO_TurnON(4999,374);
					LCD_ClearDesplay();
					LCD_SendString("PASSWORD:");  
     874:	0f 2e       	mov	r0, r31
     876:	f0 e7       	ldi	r31, 0x70	; 112
     878:	ef 2e       	mov	r14, r31
     87a:	f0 e0       	ldi	r31, 0x00	; 0
     87c:	ff 2e       	mov	r15, r31
     87e:	f0 2d       	mov	r31, r0
		  		Index++;
		  		passwordSize++;
		  		LCD_sendChar('*');
		    }
		    
		    password =TakenPassword[0]*100+TakenPassword[1]*10+TakenPassword[2]*1;
     880:	0f 2e       	mov	r0, r31
     882:	f4 e6       	ldi	r31, 0x64	; 100
     884:	cf 2e       	mov	r12, r31
     886:	dd 24       	eor	r13, r13
     888:	f0 2d       	mov	r31, r0
					}
					else
					{
						LCD_ClearDesplay();
						LCD_GoToLocation(5,1);
						LCD_SendString("WARMING");
     88a:	0f 2e       	mov	r0, r31
     88c:	f3 ea       	ldi	r31, 0xA3	; 163
     88e:	af 2e       	mov	r10, r31
     890:	f0 e0       	ldi	r31, 0x00	; 0
     892:	bf 2e       	mov	r11, r31
     894:	f0 2d       	mov	r31, r0
					if(WrongCounter>0)
					{
						Index=0;
						passwordSize=0;
						LCD_sendComnd(LCD_GO_TO_2ND_LINE);
						LCD_SendString("Try Again [");
     896:	0f 2e       	mov	r0, r31
     898:	f1 e9       	ldi	r31, 0x91	; 145
     89a:	8f 2e       	mov	r8, r31
     89c:	f0 e0       	ldi	r31, 0x00	; 0
     89e:	9f 2e       	mov	r9, r31
     8a0:	f0 2d       	mov	r31, r0
						LCD_SendIntegarNumber(WrongCounter);
						LCD_SendString("]");
     8a2:	0f 2e       	mov	r0, r31
     8a4:	fd e9       	ldi	r31, 0x9D	; 157
     8a6:	6f 2e       	mov	r6, r31
     8a8:	f0 e0       	ldi	r31, 0x00	; 0
     8aa:	7f 2e       	mov	r7, r31
     8ac:	f0 2d       	mov	r31, r0
						LED_TurnOFF(OK_LED_PORT,OK_LED_PIN);
						LED_TurnOFF(NOK_LED_PORT,NOK_LED_PIN);
						LED_TurnON(WARNING_LED_PORT,WARNING_LED_PIN);
						RELAY_TurnOFF(RELAY_PORT,RELAY_PIN);
						LCD_GoToLocation(10,1);
						LCD_SendString("   ");
     8ae:	0f 2e       	mov	r0, r31
     8b0:	ff e9       	ldi	r31, 0x9F	; 159
     8b2:	4f 2e       	mov	r4, r31
     8b4:	f0 e0       	ldi	r31, 0x00	; 0
     8b6:	5f 2e       	mov	r5, r31
     8b8:	f0 2d       	mov	r31, r0
		    {
		  		if(password==StoagePassword)
		  		{
		  			WrongCounter=2;
		  			LCD_sendComnd(LCD_GO_TO_2ND_LINE);
					LCD_SendString("                 ");
     8ba:	0f 2e       	mov	r0, r31
     8bc:	fa e7       	ldi	r31, 0x7A	; 122
     8be:	2f 2e       	mov	r2, r31
     8c0:	f0 e0       	ldi	r31, 0x00	; 0
     8c2:	3f 2e       	mov	r3, r31
     8c4:	f0 2d       	mov	r31, r0
	
	EEPROM_init();
	
    while(1)
    {
		EEPROM_WriteByte(200,PASSWARD_VALUE);
     8c6:	88 ec       	ldi	r24, 0xC8	; 200
     8c8:	90 e0       	ldi	r25, 0x00	; 0
     8ca:	60 e0       	ldi	r22, 0x00	; 0
     8cc:	0e 94 42 03 	call	0x684	; 0x684 <EEPROM_WriteByte>
     8d0:	af e3       	ldi	r26, 0x3F	; 63
     8d2:	bc e9       	ldi	r27, 0x9C	; 156
     8d4:	11 97       	sbiw	r26, 0x01	; 1
     8d6:	f1 f7       	brne	.-4      	; 0x8d4 <__stack+0x75>
     8d8:	00 c0       	rjmp	.+0      	; 0x8da <__stack+0x7b>
     8da:	00 00       	nop
		_delay_ms(10);
		EEPROM_ReadByte(200,&StoagePassword);
     8dc:	88 ec       	ldi	r24, 0xC8	; 200
     8de:	90 e0       	ldi	r25, 0x00	; 0
     8e0:	be 01       	movw	r22, r28
     8e2:	6c 5f       	subi	r22, 0xFC	; 252
     8e4:	7f 4f       	sbci	r23, 0xFF	; 255
     8e6:	0e 94 60 03 	call	0x6c0	; 0x6c0 <EEPROM_ReadByte>
     8ea:	8f e3       	ldi	r24, 0x3F	; 63
     8ec:	9c e9       	ldi	r25, 0x9C	; 156
     8ee:	01 97       	sbiw	r24, 0x01	; 1
     8f0:	f1 f7       	brne	.-4      	; 0x8ee <__stack+0x8f>
     8f2:	00 c0       	rjmp	.+0      	; 0x8f4 <__stack+0x95>
     8f4:	00 00       	nop
		_delay_ms(10);
		BUTTON_ReadValue(SwitchMode_BUTTON_PORT,SwitchMode_BUTTON_PIN,&ButtonValue,BUTTON_PullDown);
     8f6:	81 e0       	ldi	r24, 0x01	; 1
     8f8:	60 e0       	ldi	r22, 0x00	; 0
     8fa:	ae 01       	movw	r20, r28
     8fc:	49 5f       	subi	r20, 0xF9	; 249
     8fe:	5f 4f       	sbci	r21, 0xFF	; 255
     900:	20 e0       	ldi	r18, 0x00	; 0
     902:	0e 94 58 00 	call	0xb0	; 0xb0 <BUTTON_ReadValue>
		
		/*	BLUETOTH MODE	*/
		if (ButtonValue == BluetoothMode)
     906:	8f 81       	ldd	r24, Y+7	; 0x07
     908:	88 23       	and	r24, r24
     90a:	09 f0       	breq	.+2      	; 0x90e <__stack+0xaf>
     90c:	fc c0       	rjmp	.+504    	; 0xb06 <__stack+0x2a7>
		{
			UART_ReceiveChar(&ReceiveValue);
     90e:	ce 01       	movw	r24, r28
     910:	05 96       	adiw	r24, 0x05	; 5
     912:	0e 94 46 0a 	call	0x148c	; 0x148c <UART_ReceiveChar>
		    if(ReceiveValue>=48 && ReceiveValue<=57  && passwordSize!=3)
     916:	8d 81       	ldd	r24, Y+5	; 0x05
     918:	80 53       	subi	r24, 0x30	; 48
     91a:	8a 30       	cpi	r24, 0x0A	; 10
     91c:	70 f4       	brcc	.+28     	; 0x93a <__stack+0xdb>
     91e:	13 30       	cpi	r17, 0x03	; 3
     920:	61 f0       	breq	.+24     	; 0x93a <__stack+0xdb>
		    {
		  		TakenPassword[Index]=ReceiveValue-48;
     922:	e1 e0       	ldi	r30, 0x01	; 1
     924:	f0 e0       	ldi	r31, 0x00	; 0
     926:	ec 0f       	add	r30, r28
     928:	fd 1f       	adc	r31, r29
     92a:	e0 0f       	add	r30, r16
     92c:	f1 1d       	adc	r31, r1
     92e:	80 83       	st	Z, r24
		  		Index++;
     930:	0f 5f       	subi	r16, 0xFF	; 255
		  		passwordSize++;
     932:	1f 5f       	subi	r17, 0xFF	; 255
		  		LCD_sendChar('*');
     934:	8a e2       	ldi	r24, 0x2A	; 42
     936:	0e 94 90 08 	call	0x1120	; 0x1120 <LCD_sendChar>
		    }
		    
		    password =TakenPassword[0]*100+TakenPassword[1]*10+TakenPassword[2]*1;
     93a:	89 81       	ldd	r24, Y+1	; 0x01
     93c:	2a 81       	ldd	r18, Y+2	; 0x02
     93e:	4b 81       	ldd	r20, Y+3	; 0x03
		    
		    if(ReceiveValue == '=' && passwordSize ==3 )
     940:	9d 81       	ldd	r25, Y+5	; 0x05
     942:	9d 33       	cpi	r25, 0x3D	; 61
     944:	09 f0       	breq	.+2      	; 0x948 <__stack+0xe9>
     946:	9b c0       	rjmp	.+310    	; 0xa7e <__stack+0x21f>
     948:	13 30       	cpi	r17, 0x03	; 3
     94a:	09 f0       	breq	.+2      	; 0x94e <__stack+0xef>
     94c:	98 c0       	rjmp	.+304    	; 0xa7e <__stack+0x21f>
		    {
		  		if(password==StoagePassword)
     94e:	ec 81       	ldd	r30, Y+4	; 0x04
     950:	f0 e0       	ldi	r31, 0x00	; 0
		  		Index++;
		  		passwordSize++;
		  		LCD_sendChar('*');
		    }
		    
		    password =TakenPassword[0]*100+TakenPassword[1]*10+TakenPassword[2]*1;
     952:	90 e0       	ldi	r25, 0x00	; 0
     954:	8c 9d       	mul	r24, r12
     956:	b0 01       	movw	r22, r0
     958:	8d 9d       	mul	r24, r13
     95a:	70 0d       	add	r23, r0
     95c:	9c 9d       	mul	r25, r12
     95e:	70 0d       	add	r23, r0
     960:	11 24       	eor	r1, r1
     962:	82 2f       	mov	r24, r18
     964:	90 e0       	ldi	r25, 0x00	; 0
     966:	88 0f       	add	r24, r24
     968:	99 1f       	adc	r25, r25
     96a:	9c 01       	movw	r18, r24
     96c:	22 0f       	add	r18, r18
     96e:	33 1f       	adc	r19, r19
     970:	22 0f       	add	r18, r18
     972:	33 1f       	adc	r19, r19
     974:	82 0f       	add	r24, r18
     976:	93 1f       	adc	r25, r19
     978:	86 0f       	add	r24, r22
     97a:	97 1f       	adc	r25, r23
     97c:	84 0f       	add	r24, r20
     97e:	91 1d       	adc	r25, r1
		    
		    if(ReceiveValue == '=' && passwordSize ==3 )
		    {
		  		if(password==StoagePassword)
     980:	e8 17       	cp	r30, r24
     982:	f9 07       	cpc	r31, r25
     984:	41 f5       	brne	.+80     	; 0x9d6 <__stack+0x177>
		  		{
		  			WrongCounter=2;
     986:	82 e0       	ldi	r24, 0x02	; 2
     988:	80 93 ab 00 	sts	0x00AB, r24
		  			LCD_sendComnd(LCD_GO_TO_2ND_LINE);
     98c:	80 ec       	ldi	r24, 0xC0	; 192
     98e:	0e 94 f5 07 	call	0xfea	; 0xfea <LCD_sendComnd>
					LCD_SendString("                 ");
     992:	c1 01       	movw	r24, r2
     994:	0e 94 c6 08 	call	0x118c	; 0x118c <LCD_SendString>
					LCD_GoToLocation(1,2);
     998:	81 e0       	ldi	r24, 0x01	; 1
     99a:	62 e0       	ldi	r22, 0x02	; 2
     99c:	0e 94 e2 08 	call	0x11c4	; 0x11c4 <LCD_GoToLocation>
					LCD_SendString("TRUE");
     9a0:	8c e8       	ldi	r24, 0x8C	; 140
     9a2:	90 e0       	ldi	r25, 0x00	; 0
     9a4:	0e 94 c6 08 	call	0x118c	; 0x118c <LCD_SendString>
					SERVO_TurnON(4999,499);
     9a8:	87 e8       	ldi	r24, 0x87	; 135
     9aa:	93 e1       	ldi	r25, 0x13	; 19
     9ac:	63 ef       	ldi	r22, 0xF3	; 243
     9ae:	71 e0       	ldi	r23, 0x01	; 1
     9b0:	0e 94 ef 09 	call	0x13de	; 0x13de <SERVO_TurnON>
					LED_TurnOFF(WARNING_LED_PORT,WARNING_LED_PIN);
     9b4:	81 e0       	ldi	r24, 0x01	; 1
     9b6:	65 e0       	ldi	r22, 0x05	; 5
     9b8:	0e 94 b1 09 	call	0x1362	; 0x1362 <LED_TurnOFF>
					LED_TurnOFF(NOK_LED_PORT,NOK_LED_PIN);
     9bc:	81 e0       	ldi	r24, 0x01	; 1
     9be:	66 e0       	ldi	r22, 0x06	; 6
     9c0:	0e 94 b1 09 	call	0x1362	; 0x1362 <LED_TurnOFF>
					LED_TurnON(OK_LED_PORT,OK_LED_PIN);
     9c4:	81 e0       	ldi	r24, 0x01	; 1
     9c6:	67 e0       	ldi	r22, 0x07	; 7
     9c8:	0e 94 a9 09 	call	0x1352	; 0x1352 <LED_TurnON>
					RELAY_TurnOFF(RELAY_PORT,RELAY_PIN);
     9cc:	81 e0       	ldi	r24, 0x01	; 1
     9ce:	64 e0       	ldi	r22, 0x04	; 4
     9d0:	0e 94 d0 09 	call	0x13a0	; 0x13a0 <RELAY_TurnOFF>
     9d4:	54 c0       	rjmp	.+168    	; 0xa7e <__stack+0x21f>
				}
				else
				{
					if(WrongCounter>0)
     9d6:	80 91 ab 00 	lds	r24, 0x00AB
     9da:	88 23       	and	r24, r24
     9dc:	b9 f1       	breq	.+110    	; 0xa4c <__stack+0x1ed>
					{
						Index=0;
						passwordSize=0;
						LCD_sendComnd(LCD_GO_TO_2ND_LINE);
     9de:	80 ec       	ldi	r24, 0xC0	; 192
     9e0:	0e 94 f5 07 	call	0xfea	; 0xfea <LCD_sendComnd>
						LCD_SendString("Try Again [");
     9e4:	c4 01       	movw	r24, r8
     9e6:	0e 94 c6 08 	call	0x118c	; 0x118c <LCD_SendString>
						LCD_SendIntegarNumber(WrongCounter);
     9ea:	80 91 ab 00 	lds	r24, 0x00AB
     9ee:	90 e0       	ldi	r25, 0x00	; 0
     9f0:	0e 94 05 09 	call	0x120a	; 0x120a <LCD_SendIntegarNumber>
						LCD_SendString("]");
     9f4:	c3 01       	movw	r24, r6
     9f6:	0e 94 c6 08 	call	0x118c	; 0x118c <LCD_SendString>
						SERVO_TurnON(4999,374);
     9fa:	87 e8       	ldi	r24, 0x87	; 135
     9fc:	93 e1       	ldi	r25, 0x13	; 19
     9fe:	66 e7       	ldi	r22, 0x76	; 118
     a00:	71 e0       	ldi	r23, 0x01	; 1
     a02:	0e 94 ef 09 	call	0x13de	; 0x13de <SERVO_TurnON>
						LED_TurnOFF(OK_LED_PORT,OK_LED_PIN);
     a06:	81 e0       	ldi	r24, 0x01	; 1
     a08:	67 e0       	ldi	r22, 0x07	; 7
     a0a:	0e 94 b1 09 	call	0x1362	; 0x1362 <LED_TurnOFF>
						LED_TurnOFF(NOK_LED_PORT,NOK_LED_PIN);
     a0e:	81 e0       	ldi	r24, 0x01	; 1
     a10:	66 e0       	ldi	r22, 0x06	; 6
     a12:	0e 94 b1 09 	call	0x1362	; 0x1362 <LED_TurnOFF>
						LED_TurnON(WARNING_LED_PORT,WARNING_LED_PIN);
     a16:	81 e0       	ldi	r24, 0x01	; 1
     a18:	65 e0       	ldi	r22, 0x05	; 5
     a1a:	0e 94 a9 09 	call	0x1352	; 0x1352 <LED_TurnON>
						RELAY_TurnOFF(RELAY_PORT,RELAY_PIN);
     a1e:	81 e0       	ldi	r24, 0x01	; 1
     a20:	64 e0       	ldi	r22, 0x04	; 4
     a22:	0e 94 d0 09 	call	0x13a0	; 0x13a0 <RELAY_TurnOFF>
						LCD_GoToLocation(10,1);
     a26:	8a e0       	ldi	r24, 0x0A	; 10
     a28:	61 e0       	ldi	r22, 0x01	; 1
     a2a:	0e 94 e2 08 	call	0x11c4	; 0x11c4 <LCD_GoToLocation>
						LCD_SendString("   ");
     a2e:	c2 01       	movw	r24, r4
     a30:	0e 94 c6 08 	call	0x118c	; 0x118c <LCD_SendString>
						LCD_GoToLocation(10,1);
     a34:	8a e0       	ldi	r24, 0x0A	; 10
     a36:	61 e0       	ldi	r22, 0x01	; 1
     a38:	0e 94 e2 08 	call	0x11c4	; 0x11c4 <LCD_GoToLocation>
						WrongCounter--;
     a3c:	80 91 ab 00 	lds	r24, 0x00AB
     a40:	81 50       	subi	r24, 0x01	; 1
     a42:	80 93 ab 00 	sts	0x00AB, r24
				}
				else
				{
					if(WrongCounter>0)
					{
						Index=0;
     a46:	00 e0       	ldi	r16, 0x00	; 0
						passwordSize=0;
     a48:	10 e0       	ldi	r17, 0x00	; 0
     a4a:	19 c0       	rjmp	.+50     	; 0xa7e <__stack+0x21f>
						LCD_GoToLocation(10,1);
						WrongCounter--;
					}
					else
					{
						LCD_ClearDesplay();
     a4c:	0e 94 d5 08 	call	0x11aa	; 0x11aa <LCD_ClearDesplay>
						LCD_GoToLocation(5,1);
     a50:	85 e0       	ldi	r24, 0x05	; 5
     a52:	61 e0       	ldi	r22, 0x01	; 1
     a54:	0e 94 e2 08 	call	0x11c4	; 0x11c4 <LCD_GoToLocation>
						LCD_SendString("WARMING");
     a58:	c5 01       	movw	r24, r10
     a5a:	0e 94 c6 08 	call	0x118c	; 0x118c <LCD_SendString>
						LED_TurnOFF(OK_LED_PORT,OK_LED_PIN);
     a5e:	81 e0       	ldi	r24, 0x01	; 1
     a60:	67 e0       	ldi	r22, 0x07	; 7
     a62:	0e 94 b1 09 	call	0x1362	; 0x1362 <LED_TurnOFF>
						LED_TurnON(NOK_LED_PORT,NOK_LED_PIN);
     a66:	81 e0       	ldi	r24, 0x01	; 1
     a68:	66 e0       	ldi	r22, 0x06	; 6
     a6a:	0e 94 a9 09 	call	0x1352	; 0x1352 <LED_TurnON>
						LED_TurnOFF(WARNING_LED_PORT,WARNING_LED_PIN);
     a6e:	81 e0       	ldi	r24, 0x01	; 1
     a70:	65 e0       	ldi	r22, 0x05	; 5
     a72:	0e 94 b1 09 	call	0x1362	; 0x1362 <LED_TurnOFF>
						RELAY_TurnON(RELAY_PORT,RELAY_PIN);
     a76:	81 e0       	ldi	r24, 0x01	; 1
     a78:	64 e0       	ldi	r22, 0x04	; 4
     a7a:	0e 94 c8 09 	call	0x1390	; 0x1390 <RELAY_TurnON>
					}
				}
			}
			if(ReceiveValue== '#')
     a7e:	8d 81       	ldd	r24, Y+5	; 0x05
     a80:	83 32       	cpi	r24, 0x23	; 35
     a82:	09 f0       	breq	.+2      	; 0xa86 <__stack+0x227>
     a84:	20 cf       	rjmp	.-448    	; 0x8c6 <__stack+0x67>
			{
				if (WrongCounter==0)
     a86:	80 91 ab 00 	lds	r24, 0x00AB
     a8a:	88 23       	and	r24, r24
     a8c:	f1 f4       	brne	.+60     	; 0xaca <__stack+0x26b>
				{
					Index=0;
					passwordSize=0;
					LED_TurnOFF(OK_LED_PORT,OK_LED_PIN);
     a8e:	81 e0       	ldi	r24, 0x01	; 1
     a90:	67 e0       	ldi	r22, 0x07	; 7
     a92:	0e 94 b1 09 	call	0x1362	; 0x1362 <LED_TurnOFF>
					LED_TurnON(NOK_LED_PORT,NOK_LED_PIN);
     a96:	81 e0       	ldi	r24, 0x01	; 1
     a98:	66 e0       	ldi	r22, 0x06	; 6
     a9a:	0e 94 a9 09 	call	0x1352	; 0x1352 <LED_TurnON>
					LED_TurnOFF(WARNING_LED_PORT,WARNING_LED_PIN);
     a9e:	81 e0       	ldi	r24, 0x01	; 1
     aa0:	65 e0       	ldi	r22, 0x05	; 5
     aa2:	0e 94 b1 09 	call	0x1362	; 0x1362 <LED_TurnOFF>
					RELAY_TurnON(RELAY_PORT,RELAY_PIN);
     aa6:	81 e0       	ldi	r24, 0x01	; 1
     aa8:	64 e0       	ldi	r22, 0x04	; 4
     aaa:	0e 94 c8 09 	call	0x1390	; 0x1390 <RELAY_TurnON>
					SERVO_TurnON(4999,374);
     aae:	87 e8       	ldi	r24, 0x87	; 135
     ab0:	93 e1       	ldi	r25, 0x13	; 19
     ab2:	66 e7       	ldi	r22, 0x76	; 118
     ab4:	71 e0       	ldi	r23, 0x01	; 1
     ab6:	0e 94 ef 09 	call	0x13de	; 0x13de <SERVO_TurnON>
					LCD_ClearDesplay();
     aba:	0e 94 d5 08 	call	0x11aa	; 0x11aa <LCD_ClearDesplay>
					LCD_SendString("PASSWORD:");
     abe:	c7 01       	movw	r24, r14
     ac0:	0e 94 c6 08 	call	0x118c	; 0x118c <LCD_SendString>
			}
			if(ReceiveValue== '#')
			{
				if (WrongCounter==0)
				{
					Index=0;
     ac4:	00 e0       	ldi	r16, 0x00	; 0
					passwordSize=0;
     ac6:	10 e0       	ldi	r17, 0x00	; 0
     ac8:	fe ce       	rjmp	.-516    	; 0x8c6 <__stack+0x67>
				}
			    else
			    {
					Index=0;
					passwordSize=0;
					LED_TurnOFF(OK_LED_PORT,OK_LED_PIN);
     aca:	81 e0       	ldi	r24, 0x01	; 1
     acc:	67 e0       	ldi	r22, 0x07	; 7
     ace:	0e 94 b1 09 	call	0x1362	; 0x1362 <LED_TurnOFF>
					LED_TurnOFF(NOK_LED_PORT,NOK_LED_PIN);
     ad2:	81 e0       	ldi	r24, 0x01	; 1
     ad4:	66 e0       	ldi	r22, 0x06	; 6
     ad6:	0e 94 b1 09 	call	0x1362	; 0x1362 <LED_TurnOFF>
					LED_TurnOFF(WARNING_LED_PORT,WARNING_LED_PIN);
     ada:	81 e0       	ldi	r24, 0x01	; 1
     adc:	65 e0       	ldi	r22, 0x05	; 5
     ade:	0e 94 b1 09 	call	0x1362	; 0x1362 <LED_TurnOFF>
					RELAY_TurnOFF(RELAY_PORT,RELAY_PIN);
     ae2:	81 e0       	ldi	r24, 0x01	; 1
     ae4:	64 e0       	ldi	r22, 0x04	; 4
     ae6:	0e 94 d0 09 	call	0x13a0	; 0x13a0 <RELAY_TurnOFF>
					SERVO_TurnON(4999,374);
     aea:	87 e8       	ldi	r24, 0x87	; 135
     aec:	93 e1       	ldi	r25, 0x13	; 19
     aee:	66 e7       	ldi	r22, 0x76	; 118
     af0:	71 e0       	ldi	r23, 0x01	; 1
     af2:	0e 94 ef 09 	call	0x13de	; 0x13de <SERVO_TurnON>
					LCD_ClearDesplay();
     af6:	0e 94 d5 08 	call	0x11aa	; 0x11aa <LCD_ClearDesplay>
					LCD_SendString("PASSWORD:");  
     afa:	c7 01       	movw	r24, r14
     afc:	0e 94 c6 08 	call	0x118c	; 0x118c <LCD_SendString>
					LCD_ClearDesplay();
					LCD_SendString("PASSWORD:");
				}
			    else
			    {
					Index=0;
     b00:	00 e0       	ldi	r16, 0x00	; 0
					passwordSize=0;
     b02:	10 e0       	ldi	r17, 0x00	; 0
     b04:	e0 ce       	rjmp	.-576    	; 0x8c6 <__stack+0x67>
		}
		
		/*	KEYPAD MODE	*/
		else 
		{
			KEYPAD_GetValue(&KeypadValue);
     b06:	ce 01       	movw	r24, r28
     b08:	06 96       	adiw	r24, 0x06	; 6
     b0a:	0e 94 fc 06 	call	0xdf8	; 0xdf8 <KEYPAD_GetValue>
			if(KEYPAD_NOT_PRESSED!=KeypadValue)
     b0e:	8e 81       	ldd	r24, Y+6	; 0x06
     b10:	8f 3f       	cpi	r24, 0xFF	; 255
     b12:	09 f4       	brne	.+2      	; 0xb16 <__stack+0x2b7>
     b14:	d8 ce       	rjmp	.-592    	; 0x8c6 <__stack+0x67>
			{
				if(KeypadValue!= '*' && KeypadValue!= '/' && KeypadValue!= '-' && KeypadValue!= '+' && KeypadValue!= '=' && KeypadValue!= '#' && passwordSize!=3)
     b16:	8a 32       	cpi	r24, 0x2A	; 42
     b18:	09 f4       	brne	.+2      	; 0xb1c <__stack+0x2bd>
     b1a:	d5 ce       	rjmp	.-598    	; 0x8c6 <__stack+0x67>
     b1c:	8f 32       	cpi	r24, 0x2F	; 47
     b1e:	09 f4       	brne	.+2      	; 0xb22 <__stack+0x2c3>
     b20:	d2 ce       	rjmp	.-604    	; 0x8c6 <__stack+0x67>
     b22:	8d 32       	cpi	r24, 0x2D	; 45
     b24:	09 f4       	brne	.+2      	; 0xb28 <__stack+0x2c9>
     b26:	cf ce       	rjmp	.-610    	; 0x8c6 <__stack+0x67>
     b28:	8b 32       	cpi	r24, 0x2B	; 43
     b2a:	09 f4       	brne	.+2      	; 0xb2e <__stack+0x2cf>
     b2c:	cc ce       	rjmp	.-616    	; 0x8c6 <__stack+0x67>
     b2e:	8d 33       	cpi	r24, 0x3D	; 61
     b30:	09 f4       	brne	.+2      	; 0xb34 <__stack+0x2d5>
     b32:	f9 c0       	rjmp	.+498    	; 0xd26 <__stack+0x4c7>
     b34:	83 32       	cpi	r24, 0x23	; 35
     b36:	09 f4       	brne	.+2      	; 0xb3a <__stack+0x2db>
     b38:	b6 c0       	rjmp	.+364    	; 0xca6 <__stack+0x447>
     b3a:	13 30       	cpi	r17, 0x03	; 3
     b3c:	09 f4       	brne	.+2      	; 0xb40 <__stack+0x2e1>
     b3e:	c3 ce       	rjmp	.-634    	; 0x8c6 <__stack+0x67>
				{
					TakenPassword[Index]=KeypadValue;
     b40:	e1 e0       	ldi	r30, 0x01	; 1
     b42:	f0 e0       	ldi	r31, 0x00	; 0
     b44:	ec 0f       	add	r30, r28
     b46:	fd 1f       	adc	r31, r29
     b48:	e0 0f       	add	r30, r16
     b4a:	f1 1d       	adc	r31, r1
     b4c:	80 83       	st	Z, r24
					Index++;
     b4e:	0f 5f       	subi	r16, 0xFF	; 255
					passwordSize++;
     b50:	1f 5f       	subi	r17, 0xFF	; 255
					LCD_sendChar('*');
     b52:	8a e2       	ldi	r24, 0x2A	; 42
     b54:	0e 94 90 08 	call	0x1120	; 0x1120 <LCD_sendChar>
				}
				
				password =TakenPassword[0]*100+TakenPassword[1]*10+TakenPassword[2]*1;
     b58:	89 81       	ldd	r24, Y+1	; 0x01
     b5a:	2a 81       	ldd	r18, Y+2	; 0x02
     b5c:	6b 81       	ldd	r22, Y+3	; 0x03
				
				if(KeypadValue== '=' && passwordSize ==3)
     b5e:	9e 81       	ldd	r25, Y+6	; 0x06
     b60:	9d 33       	cpi	r25, 0x3D	; 61
     b62:	09 f0       	breq	.+2      	; 0xb66 <__stack+0x307>
     b64:	9c c0       	rjmp	.+312    	; 0xc9e <__stack+0x43f>
					Index++;
					passwordSize++;
					LCD_sendChar('*');
				}
				
				password =TakenPassword[0]*100+TakenPassword[1]*10+TakenPassword[2]*1;
     b66:	90 e0       	ldi	r25, 0x00	; 0
     b68:	8c 9d       	mul	r24, r12
     b6a:	a0 01       	movw	r20, r0
     b6c:	8d 9d       	mul	r24, r13
     b6e:	50 0d       	add	r21, r0
     b70:	9c 9d       	mul	r25, r12
     b72:	50 0d       	add	r21, r0
     b74:	11 24       	eor	r1, r1
     b76:	82 2f       	mov	r24, r18
     b78:	90 e0       	ldi	r25, 0x00	; 0
     b7a:	88 0f       	add	r24, r24
     b7c:	99 1f       	adc	r25, r25
     b7e:	9c 01       	movw	r18, r24
     b80:	22 0f       	add	r18, r18
     b82:	33 1f       	adc	r19, r19
     b84:	22 0f       	add	r18, r18
     b86:	33 1f       	adc	r19, r19
     b88:	82 0f       	add	r24, r18
     b8a:	93 1f       	adc	r25, r19
     b8c:	84 0f       	add	r24, r20
     b8e:	95 1f       	adc	r25, r21
     b90:	9c 01       	movw	r18, r24
     b92:	26 0f       	add	r18, r22
     b94:	31 1d       	adc	r19, r1
				
				if(KeypadValue== '=' && passwordSize ==3)
     b96:	13 30       	cpi	r17, 0x03	; 3
     b98:	09 f0       	breq	.+2      	; 0xb9c <__stack+0x33d>
     b9a:	81 c0       	rjmp	.+258    	; 0xc9e <__stack+0x43f>
				{
					 if(password==StoagePassword)
     b9c:	8c 81       	ldd	r24, Y+4	; 0x04
     b9e:	90 e0       	ldi	r25, 0x00	; 0
     ba0:	82 17       	cp	r24, r18
     ba2:	93 07       	cpc	r25, r19
     ba4:	41 f5       	brne	.+80     	; 0xbf6 <__stack+0x397>
					 {
						 WrongCounter=2;
     ba6:	82 e0       	ldi	r24, 0x02	; 2
     ba8:	80 93 ab 00 	sts	0x00AB, r24
						 LCD_sendComnd(LCD_GO_TO_2ND_LINE);
     bac:	80 ec       	ldi	r24, 0xC0	; 192
     bae:	0e 94 f5 07 	call	0xfea	; 0xfea <LCD_sendComnd>
						 LCD_SendString("                 ");
     bb2:	c1 01       	movw	r24, r2
     bb4:	0e 94 c6 08 	call	0x118c	; 0x118c <LCD_SendString>
						 LCD_GoToLocation(1,2);
     bb8:	81 e0       	ldi	r24, 0x01	; 1
     bba:	62 e0       	ldi	r22, 0x02	; 2
     bbc:	0e 94 e2 08 	call	0x11c4	; 0x11c4 <LCD_GoToLocation>
						 LCD_SendString("TRUE");
     bc0:	8c e8       	ldi	r24, 0x8C	; 140
     bc2:	90 e0       	ldi	r25, 0x00	; 0
     bc4:	0e 94 c6 08 	call	0x118c	; 0x118c <LCD_SendString>
						 SERVO_TurnON(4999,499);
     bc8:	87 e8       	ldi	r24, 0x87	; 135
     bca:	93 e1       	ldi	r25, 0x13	; 19
     bcc:	63 ef       	ldi	r22, 0xF3	; 243
     bce:	71 e0       	ldi	r23, 0x01	; 1
     bd0:	0e 94 ef 09 	call	0x13de	; 0x13de <SERVO_TurnON>
						 LED_TurnOFF(WARNING_LED_PORT,WARNING_LED_PIN);
     bd4:	81 e0       	ldi	r24, 0x01	; 1
     bd6:	65 e0       	ldi	r22, 0x05	; 5
     bd8:	0e 94 b1 09 	call	0x1362	; 0x1362 <LED_TurnOFF>
						 LED_TurnOFF(NOK_LED_PORT,NOK_LED_PIN);
     bdc:	81 e0       	ldi	r24, 0x01	; 1
     bde:	66 e0       	ldi	r22, 0x06	; 6
     be0:	0e 94 b1 09 	call	0x1362	; 0x1362 <LED_TurnOFF>
						 LED_TurnON(OK_LED_PORT,OK_LED_PIN);
     be4:	81 e0       	ldi	r24, 0x01	; 1
     be6:	67 e0       	ldi	r22, 0x07	; 7
     be8:	0e 94 a9 09 	call	0x1352	; 0x1352 <LED_TurnON>
						 RELAY_TurnOFF(RELAY_PORT,RELAY_PIN);
     bec:	81 e0       	ldi	r24, 0x01	; 1
     bee:	64 e0       	ldi	r22, 0x04	; 4
     bf0:	0e 94 d0 09 	call	0x13a0	; 0x13a0 <RELAY_TurnOFF>
     bf4:	54 c0       	rjmp	.+168    	; 0xc9e <__stack+0x43f>
					 }
					 else
					 {
						 if(WrongCounter>0)
     bf6:	80 91 ab 00 	lds	r24, 0x00AB
     bfa:	88 23       	and	r24, r24
     bfc:	b9 f1       	breq	.+110    	; 0xc6c <__stack+0x40d>
						 {
							 Index=0;
							 passwordSize=0;
							 LCD_sendComnd(LCD_GO_TO_2ND_LINE);
     bfe:	80 ec       	ldi	r24, 0xC0	; 192
     c00:	0e 94 f5 07 	call	0xfea	; 0xfea <LCD_sendComnd>
							 LCD_SendString("Try Again [");
     c04:	c4 01       	movw	r24, r8
     c06:	0e 94 c6 08 	call	0x118c	; 0x118c <LCD_SendString>
							 LCD_SendIntegarNumber(WrongCounter);
     c0a:	80 91 ab 00 	lds	r24, 0x00AB
     c0e:	90 e0       	ldi	r25, 0x00	; 0
     c10:	0e 94 05 09 	call	0x120a	; 0x120a <LCD_SendIntegarNumber>
							 LCD_SendString("]");
     c14:	c3 01       	movw	r24, r6
     c16:	0e 94 c6 08 	call	0x118c	; 0x118c <LCD_SendString>
							 SERVO_TurnON(4999,374);
     c1a:	87 e8       	ldi	r24, 0x87	; 135
     c1c:	93 e1       	ldi	r25, 0x13	; 19
     c1e:	66 e7       	ldi	r22, 0x76	; 118
     c20:	71 e0       	ldi	r23, 0x01	; 1
     c22:	0e 94 ef 09 	call	0x13de	; 0x13de <SERVO_TurnON>
							 LED_TurnOFF(OK_LED_PORT,OK_LED_PIN);
     c26:	81 e0       	ldi	r24, 0x01	; 1
     c28:	67 e0       	ldi	r22, 0x07	; 7
     c2a:	0e 94 b1 09 	call	0x1362	; 0x1362 <LED_TurnOFF>
							 LED_TurnOFF(NOK_LED_PORT,NOK_LED_PIN);
     c2e:	81 e0       	ldi	r24, 0x01	; 1
     c30:	66 e0       	ldi	r22, 0x06	; 6
     c32:	0e 94 b1 09 	call	0x1362	; 0x1362 <LED_TurnOFF>
							 LED_TurnON(WARNING_LED_PORT,WARNING_LED_PIN);
     c36:	81 e0       	ldi	r24, 0x01	; 1
     c38:	65 e0       	ldi	r22, 0x05	; 5
     c3a:	0e 94 a9 09 	call	0x1352	; 0x1352 <LED_TurnON>
							 RELAY_TurnOFF(RELAY_PORT,RELAY_PIN);
     c3e:	81 e0       	ldi	r24, 0x01	; 1
     c40:	64 e0       	ldi	r22, 0x04	; 4
     c42:	0e 94 d0 09 	call	0x13a0	; 0x13a0 <RELAY_TurnOFF>
							 LCD_GoToLocation(10,1);
     c46:	8a e0       	ldi	r24, 0x0A	; 10
     c48:	61 e0       	ldi	r22, 0x01	; 1
     c4a:	0e 94 e2 08 	call	0x11c4	; 0x11c4 <LCD_GoToLocation>
							 LCD_SendString("   ");
     c4e:	c2 01       	movw	r24, r4
     c50:	0e 94 c6 08 	call	0x118c	; 0x118c <LCD_SendString>
							 LCD_GoToLocation(10,1);
     c54:	8a e0       	ldi	r24, 0x0A	; 10
     c56:	61 e0       	ldi	r22, 0x01	; 1
     c58:	0e 94 e2 08 	call	0x11c4	; 0x11c4 <LCD_GoToLocation>
							 WrongCounter--;
     c5c:	80 91 ab 00 	lds	r24, 0x00AB
     c60:	81 50       	subi	r24, 0x01	; 1
     c62:	80 93 ab 00 	sts	0x00AB, r24
					 }
					 else
					 {
						 if(WrongCounter>0)
						 {
							 Index=0;
     c66:	00 e0       	ldi	r16, 0x00	; 0
							 passwordSize=0;
     c68:	10 e0       	ldi	r17, 0x00	; 0
     c6a:	19 c0       	rjmp	.+50     	; 0xc9e <__stack+0x43f>
							 LCD_GoToLocation(10,1);
							 WrongCounter--;
						 }
						 else
						 {
							 LCD_ClearDesplay();
     c6c:	0e 94 d5 08 	call	0x11aa	; 0x11aa <LCD_ClearDesplay>
							 LCD_GoToLocation(5,1);
     c70:	85 e0       	ldi	r24, 0x05	; 5
     c72:	61 e0       	ldi	r22, 0x01	; 1
     c74:	0e 94 e2 08 	call	0x11c4	; 0x11c4 <LCD_GoToLocation>
							 LCD_SendString("WARMING");
     c78:	c5 01       	movw	r24, r10
     c7a:	0e 94 c6 08 	call	0x118c	; 0x118c <LCD_SendString>
							 LED_TurnOFF(OK_LED_PORT,OK_LED_PIN);
     c7e:	81 e0       	ldi	r24, 0x01	; 1
     c80:	67 e0       	ldi	r22, 0x07	; 7
     c82:	0e 94 b1 09 	call	0x1362	; 0x1362 <LED_TurnOFF>
							 LED_TurnON(NOK_LED_PORT,NOK_LED_PIN);
     c86:	81 e0       	ldi	r24, 0x01	; 1
     c88:	66 e0       	ldi	r22, 0x06	; 6
     c8a:	0e 94 a9 09 	call	0x1352	; 0x1352 <LED_TurnON>
							 LED_TurnOFF(WARNING_LED_PORT,WARNING_LED_PIN);
     c8e:	81 e0       	ldi	r24, 0x01	; 1
     c90:	65 e0       	ldi	r22, 0x05	; 5
     c92:	0e 94 b1 09 	call	0x1362	; 0x1362 <LED_TurnOFF>
							 RELAY_TurnON(RELAY_PORT,RELAY_PIN);
     c96:	81 e0       	ldi	r24, 0x01	; 1
     c98:	64 e0       	ldi	r22, 0x04	; 4
     c9a:	0e 94 c8 09 	call	0x1390	; 0x1390 <RELAY_TurnON>
						 }
					 }
				}
				if(KeypadValue== '#')
     c9e:	8e 81       	ldd	r24, Y+6	; 0x06
     ca0:	83 32       	cpi	r24, 0x23	; 35
     ca2:	09 f0       	breq	.+2      	; 0xca6 <__stack+0x447>
     ca4:	10 ce       	rjmp	.-992    	; 0x8c6 <__stack+0x67>
				{
					if (WrongCounter==0)
     ca6:	80 91 ab 00 	lds	r24, 0x00AB
     caa:	88 23       	and	r24, r24
     cac:	f1 f4       	brne	.+60     	; 0xcea <__stack+0x48b>
					{
						Index=0;
						passwordSize=0;
						LED_TurnOFF(OK_LED_PORT,OK_LED_PIN);
     cae:	81 e0       	ldi	r24, 0x01	; 1
     cb0:	67 e0       	ldi	r22, 0x07	; 7
     cb2:	0e 94 b1 09 	call	0x1362	; 0x1362 <LED_TurnOFF>
						LED_TurnON(NOK_LED_PORT,NOK_LED_PIN);
     cb6:	81 e0       	ldi	r24, 0x01	; 1
     cb8:	66 e0       	ldi	r22, 0x06	; 6
     cba:	0e 94 a9 09 	call	0x1352	; 0x1352 <LED_TurnON>
						LED_TurnOFF(WARNING_LED_PORT,WARNING_LED_PIN);
     cbe:	81 e0       	ldi	r24, 0x01	; 1
     cc0:	65 e0       	ldi	r22, 0x05	; 5
     cc2:	0e 94 b1 09 	call	0x1362	; 0x1362 <LED_TurnOFF>
						RELAY_TurnON(RELAY_PORT,RELAY_PIN);
     cc6:	81 e0       	ldi	r24, 0x01	; 1
     cc8:	64 e0       	ldi	r22, 0x04	; 4
     cca:	0e 94 c8 09 	call	0x1390	; 0x1390 <RELAY_TurnON>
						SERVO_TurnON(4999,374);
     cce:	87 e8       	ldi	r24, 0x87	; 135
     cd0:	93 e1       	ldi	r25, 0x13	; 19
     cd2:	66 e7       	ldi	r22, 0x76	; 118
     cd4:	71 e0       	ldi	r23, 0x01	; 1
     cd6:	0e 94 ef 09 	call	0x13de	; 0x13de <SERVO_TurnON>
						LCD_ClearDesplay();
     cda:	0e 94 d5 08 	call	0x11aa	; 0x11aa <LCD_ClearDesplay>
						LCD_SendString("PASSWORD:");
     cde:	c7 01       	movw	r24, r14
     ce0:	0e 94 c6 08 	call	0x118c	; 0x118c <LCD_SendString>
				}
				if(KeypadValue== '#')
				{
					if (WrongCounter==0)
					{
						Index=0;
     ce4:	00 e0       	ldi	r16, 0x00	; 0
						passwordSize=0;
     ce6:	10 e0       	ldi	r17, 0x00	; 0
     ce8:	ee cd       	rjmp	.-1060   	; 0x8c6 <__stack+0x67>
					}
					else
					{
						Index=0;
						passwordSize=0;
						LED_TurnOFF(OK_LED_PORT,OK_LED_PIN);
     cea:	81 e0       	ldi	r24, 0x01	; 1
     cec:	67 e0       	ldi	r22, 0x07	; 7
     cee:	0e 94 b1 09 	call	0x1362	; 0x1362 <LED_TurnOFF>
						LED_TurnOFF(NOK_LED_PORT,NOK_LED_PIN);
     cf2:	81 e0       	ldi	r24, 0x01	; 1
     cf4:	66 e0       	ldi	r22, 0x06	; 6
     cf6:	0e 94 b1 09 	call	0x1362	; 0x1362 <LED_TurnOFF>
						LED_TurnOFF(WARNING_LED_PORT,WARNING_LED_PIN);
     cfa:	81 e0       	ldi	r24, 0x01	; 1
     cfc:	65 e0       	ldi	r22, 0x05	; 5
     cfe:	0e 94 b1 09 	call	0x1362	; 0x1362 <LED_TurnOFF>
						RELAY_TurnOFF(RELAY_PORT,RELAY_PIN);
     d02:	81 e0       	ldi	r24, 0x01	; 1
     d04:	64 e0       	ldi	r22, 0x04	; 4
     d06:	0e 94 d0 09 	call	0x13a0	; 0x13a0 <RELAY_TurnOFF>
						SERVO_TurnON(4999,374);
     d0a:	87 e8       	ldi	r24, 0x87	; 135
     d0c:	93 e1       	ldi	r25, 0x13	; 19
     d0e:	66 e7       	ldi	r22, 0x76	; 118
     d10:	71 e0       	ldi	r23, 0x01	; 1
     d12:	0e 94 ef 09 	call	0x13de	; 0x13de <SERVO_TurnON>
						LCD_ClearDesplay();
     d16:	0e 94 d5 08 	call	0x11aa	; 0x11aa <LCD_ClearDesplay>
						LCD_SendString("PASSWORD:");
     d1a:	c7 01       	movw	r24, r14
     d1c:	0e 94 c6 08 	call	0x118c	; 0x118c <LCD_SendString>
						LCD_ClearDesplay();
						LCD_SendString("PASSWORD:");
					}
					else
					{
						Index=0;
     d20:	00 e0       	ldi	r16, 0x00	; 0
						passwordSize=0;
     d22:	10 e0       	ldi	r17, 0x00	; 0
     d24:	d0 cd       	rjmp	.-1120   	; 0x8c6 <__stack+0x67>
					Index++;
					passwordSize++;
					LCD_sendChar('*');
				}
				
				password =TakenPassword[0]*100+TakenPassword[1]*10+TakenPassword[2]*1;
     d26:	89 81       	ldd	r24, Y+1	; 0x01
     d28:	90 e0       	ldi	r25, 0x00	; 0
     d2a:	8c 9d       	mul	r24, r12
     d2c:	a0 01       	movw	r20, r0
     d2e:	8d 9d       	mul	r24, r13
     d30:	50 0d       	add	r21, r0
     d32:	9c 9d       	mul	r25, r12
     d34:	50 0d       	add	r21, r0
     d36:	11 24       	eor	r1, r1
     d38:	8a 81       	ldd	r24, Y+2	; 0x02
     d3a:	90 e0       	ldi	r25, 0x00	; 0
     d3c:	88 0f       	add	r24, r24
     d3e:	99 1f       	adc	r25, r25
     d40:	9c 01       	movw	r18, r24
     d42:	22 0f       	add	r18, r18
     d44:	33 1f       	adc	r19, r19
     d46:	22 0f       	add	r18, r18
     d48:	33 1f       	adc	r19, r19
     d4a:	82 0f       	add	r24, r18
     d4c:	93 1f       	adc	r25, r19
     d4e:	84 0f       	add	r24, r20
     d50:	95 1f       	adc	r25, r21
     d52:	2b 81       	ldd	r18, Y+3	; 0x03
     d54:	dc 01       	movw	r26, r24
     d56:	a2 0f       	add	r26, r18
     d58:	b1 1d       	adc	r27, r1
     d5a:	9d 01       	movw	r18, r26
     d5c:	1c cf       	rjmp	.-456    	; 0xb96 <__stack+0x337>

00000d5e <KEYPAD_init>:
     d5e:	80 e0       	ldi	r24, 0x00	; 0
     d60:	60 e0       	ldi	r22, 0x00	; 0
     d62:	40 e0       	ldi	r20, 0x00	; 0
     d64:	0e 94 5f 00 	call	0xbe	; 0xbe <DIO_SetPinDirection>
     d68:	80 e0       	ldi	r24, 0x00	; 0
     d6a:	61 e0       	ldi	r22, 0x01	; 1
     d6c:	40 e0       	ldi	r20, 0x00	; 0
     d6e:	0e 94 5f 00 	call	0xbe	; 0xbe <DIO_SetPinDirection>
     d72:	80 e0       	ldi	r24, 0x00	; 0
     d74:	62 e0       	ldi	r22, 0x02	; 2
     d76:	40 e0       	ldi	r20, 0x00	; 0
     d78:	0e 94 5f 00 	call	0xbe	; 0xbe <DIO_SetPinDirection>
     d7c:	80 e0       	ldi	r24, 0x00	; 0
     d7e:	63 e0       	ldi	r22, 0x03	; 3
     d80:	40 e0       	ldi	r20, 0x00	; 0
     d82:	0e 94 5f 00 	call	0xbe	; 0xbe <DIO_SetPinDirection>
     d86:	82 e0       	ldi	r24, 0x02	; 2
     d88:	64 e0       	ldi	r22, 0x04	; 4
     d8a:	4f ef       	ldi	r20, 0xFF	; 255
     d8c:	0e 94 5f 00 	call	0xbe	; 0xbe <DIO_SetPinDirection>
     d90:	82 e0       	ldi	r24, 0x02	; 2
     d92:	65 e0       	ldi	r22, 0x05	; 5
     d94:	4f ef       	ldi	r20, 0xFF	; 255
     d96:	0e 94 5f 00 	call	0xbe	; 0xbe <DIO_SetPinDirection>
     d9a:	82 e0       	ldi	r24, 0x02	; 2
     d9c:	66 e0       	ldi	r22, 0x06	; 6
     d9e:	4f ef       	ldi	r20, 0xFF	; 255
     da0:	0e 94 5f 00 	call	0xbe	; 0xbe <DIO_SetPinDirection>
     da4:	82 e0       	ldi	r24, 0x02	; 2
     da6:	67 e0       	ldi	r22, 0x07	; 7
     da8:	4f ef       	ldi	r20, 0xFF	; 255
     daa:	0e 94 5f 00 	call	0xbe	; 0xbe <DIO_SetPinDirection>
     dae:	82 e0       	ldi	r24, 0x02	; 2
     db0:	64 e0       	ldi	r22, 0x04	; 4
     db2:	41 e0       	ldi	r20, 0x01	; 1
     db4:	0e 94 5f 00 	call	0xbe	; 0xbe <DIO_SetPinDirection>
     db8:	82 e0       	ldi	r24, 0x02	; 2
     dba:	65 e0       	ldi	r22, 0x05	; 5
     dbc:	41 e0       	ldi	r20, 0x01	; 1
     dbe:	0e 94 5f 00 	call	0xbe	; 0xbe <DIO_SetPinDirection>
     dc2:	82 e0       	ldi	r24, 0x02	; 2
     dc4:	66 e0       	ldi	r22, 0x06	; 6
     dc6:	41 e0       	ldi	r20, 0x01	; 1
     dc8:	0e 94 5f 00 	call	0xbe	; 0xbe <DIO_SetPinDirection>
     dcc:	82 e0       	ldi	r24, 0x02	; 2
     dce:	67 e0       	ldi	r22, 0x07	; 7
     dd0:	41 e0       	ldi	r20, 0x01	; 1
     dd2:	0e 94 5f 00 	call	0xbe	; 0xbe <DIO_SetPinDirection>
     dd6:	80 e0       	ldi	r24, 0x00	; 0
     dd8:	60 e0       	ldi	r22, 0x00	; 0
     dda:	0e 94 2d 02 	call	0x45a	; 0x45a <DIO_activePinInPullUpResistance>
     dde:	80 e0       	ldi	r24, 0x00	; 0
     de0:	61 e0       	ldi	r22, 0x01	; 1
     de2:	0e 94 2d 02 	call	0x45a	; 0x45a <DIO_activePinInPullUpResistance>
     de6:	80 e0       	ldi	r24, 0x00	; 0
     de8:	62 e0       	ldi	r22, 0x02	; 2
     dea:	0e 94 2d 02 	call	0x45a	; 0x45a <DIO_activePinInPullUpResistance>
     dee:	80 e0       	ldi	r24, 0x00	; 0
     df0:	63 e0       	ldi	r22, 0x03	; 3
     df2:	0e 94 2d 02 	call	0x45a	; 0x45a <DIO_activePinInPullUpResistance>
     df6:	08 95       	ret

00000df8 <KEYPAD_GetValue>:
     df8:	2f 92       	push	r2
     dfa:	3f 92       	push	r3
     dfc:	4f 92       	push	r4
     dfe:	5f 92       	push	r5
     e00:	6f 92       	push	r6
     e02:	7f 92       	push	r7
     e04:	9f 92       	push	r9
     e06:	af 92       	push	r10
     e08:	bf 92       	push	r11
     e0a:	cf 92       	push	r12
     e0c:	df 92       	push	r13
     e0e:	ef 92       	push	r14
     e10:	ff 92       	push	r15
     e12:	0f 93       	push	r16
     e14:	1f 93       	push	r17
     e16:	cf 93       	push	r28
     e18:	df 93       	push	r29
     e1a:	cd b7       	in	r28, 0x3d	; 61
     e1c:	de b7       	in	r29, 0x3e	; 62
     e1e:	a1 97       	sbiw	r28, 0x21	; 33
     e20:	0f b6       	in	r0, 0x3f	; 63
     e22:	f8 94       	cli
     e24:	de bf       	out	0x3e, r29	; 62
     e26:	0f be       	out	0x3f, r0	; 63
     e28:	cd bf       	out	0x3d, r28	; 61
     e2a:	99 a3       	lds	r25, 0x59
     e2c:	88 a3       	lds	r24, 0x58
     e2e:	00 97       	sbiw	r24, 0x00	; 0
     e30:	09 f4       	brne	.+2      	; 0xe34 <KEYPAD_GetValue+0x3c>
     e32:	83 c0       	rjmp	.+262    	; 0xf3a <KEYPAD_GetValue+0x142>
     e34:	8f ef       	ldi	r24, 0xFF	; 255
     e36:	e8 a1       	lds	r30, 0x48
     e38:	f9 a1       	lds	r31, 0x49
     e3a:	80 83       	st	Z, r24
     e3c:	82 e0       	ldi	r24, 0x02	; 2
     e3e:	8a 87       	std	Y+10, r24	; 0x0a
     e40:	8b 87       	std	Y+11, r24	; 0x0b
     e42:	8c 87       	std	Y+12, r24	; 0x0c
     e44:	8d 87       	std	Y+13, r24	; 0x0d
     e46:	94 e0       	ldi	r25, 0x04	; 4
     e48:	9e 83       	std	Y+6, r25	; 0x06
     e4a:	95 e0       	ldi	r25, 0x05	; 5
     e4c:	9f 83       	std	Y+7, r25	; 0x07
     e4e:	96 e0       	ldi	r25, 0x06	; 6
     e50:	98 87       	std	Y+8, r25	; 0x08
     e52:	97 e0       	ldi	r25, 0x07	; 7
     e54:	99 87       	std	Y+9, r25	; 0x09
     e56:	1a 82       	std	Y+2, r1	; 0x02
     e58:	91 e0       	ldi	r25, 0x01	; 1
     e5a:	9b 83       	std	Y+3, r25	; 0x03
     e5c:	8c 83       	std	Y+4, r24	; 0x04
     e5e:	83 e0       	ldi	r24, 0x03	; 3
     e60:	8d 83       	std	Y+5, r24	; 0x05
     e62:	de 01       	movw	r26, r28
     e64:	1e 96       	adiw	r26, 0x0e	; 14
     e66:	ec ea       	ldi	r30, 0xAC	; 172
     e68:	f0 e0       	ldi	r31, 0x00	; 0
     e6a:	80 e1       	ldi	r24, 0x10	; 16
     e6c:	01 90       	ld	r0, Z+
     e6e:	0d 92       	st	X+, r0
     e70:	81 50       	subi	r24, 0x01	; 1
     e72:	e1 f7       	brne	.-8      	; 0xe6c <KEYPAD_GetValue+0x74>
     e74:	0f 2e       	mov	r0, r31
     e76:	fa e0       	ldi	r31, 0x0A	; 10
     e78:	4f 2e       	mov	r4, r31
     e7a:	55 24       	eor	r5, r5
     e7c:	f0 2d       	mov	r31, r0
     e7e:	4c 0e       	add	r4, r28
     e80:	5d 1e       	adc	r5, r29
     e82:	0f 2e       	mov	r0, r31
     e84:	f6 e0       	ldi	r31, 0x06	; 6
     e86:	2f 2e       	mov	r2, r31
     e88:	33 24       	eor	r3, r3
     e8a:	f0 2d       	mov	r31, r0
     e8c:	2c 0e       	add	r2, r28
     e8e:	3d 1e       	adc	r3, r29
     e90:	aa 24       	eor	r10, r10
     e92:	bb 24       	eor	r11, r11
     e94:	bf 8e       	std	Y+31, r11	; 0x1f
     e96:	ae 8e       	std	Y+30, r10	; 0x1e
     e98:	f2 01       	movw	r30, r4
     e9a:	e1 90       	ld	r14, Z+
     e9c:	2f 01       	movw	r4, r30
     e9e:	f1 01       	movw	r30, r2
     ea0:	91 90       	ld	r9, Z+
     ea2:	1f 01       	movw	r2, r30
     ea4:	8e 2d       	mov	r24, r14
     ea6:	69 2d       	mov	r22, r9
     ea8:	40 e0       	ldi	r20, 0x00	; 0
     eaa:	0e 94 f5 00 	call	0x1ea	; 0x1ea <DIO_SetPinValue>
     eae:	cc 24       	eor	r12, r12
     eb0:	dd 24       	eor	r13, r13
     eb2:	68 94       	set
     eb4:	c1 f8       	bld	r12, 1
     eb6:	cc 0e       	add	r12, r28
     eb8:	dd 1e       	adc	r13, r29
     eba:	00 e0       	ldi	r16, 0x00	; 0
     ebc:	10 e0       	ldi	r17, 0x00	; 0
     ebe:	38 01       	movw	r6, r16
     ec0:	f6 01       	movw	r30, r12
     ec2:	f1 90       	ld	r15, Z+
     ec4:	6f 01       	movw	r12, r30
     ec6:	80 e0       	ldi	r24, 0x00	; 0
     ec8:	6f 2d       	mov	r22, r15
     eca:	ae 01       	movw	r20, r28
     ecc:	4f 5f       	subi	r20, 0xFF	; 255
     ece:	5f 4f       	sbci	r21, 0xFF	; 255
     ed0:	0e 94 d9 01 	call	0x3b2	; 0x3b2 <DIO_ReadValue>
     ed4:	89 81       	ldd	r24, Y+1	; 0x01
     ed6:	88 23       	and	r24, r24
     ed8:	f1 f4       	brne	.+60     	; 0xf16 <KEYPAD_GetValue+0x11e>
     eda:	80 e0       	ldi	r24, 0x00	; 0
     edc:	6f 2d       	mov	r22, r15
     ede:	ae 01       	movw	r20, r28
     ee0:	4f 5f       	subi	r20, 0xFF	; 255
     ee2:	5f 4f       	sbci	r21, 0xFF	; 255
     ee4:	0e 94 d9 01 	call	0x3b2	; 0x3b2 <DIO_ReadValue>
     ee8:	89 81       	ldd	r24, Y+1	; 0x01
     eea:	88 23       	and	r24, r24
     eec:	b1 f3       	breq	.-20     	; 0xeda <KEYPAD_GetValue+0xe2>
     eee:	f3 01       	movw	r30, r6
     ef0:	ee 0f       	add	r30, r30
     ef2:	ff 1f       	adc	r31, r31
     ef4:	ee 0f       	add	r30, r30
     ef6:	ff 1f       	adc	r31, r31
     ef8:	81 e0       	ldi	r24, 0x01	; 1
     efa:	90 e0       	ldi	r25, 0x00	; 0
     efc:	8c 0f       	add	r24, r28
     efe:	9d 1f       	adc	r25, r29
     f00:	e8 0f       	add	r30, r24
     f02:	f9 1f       	adc	r31, r25
     f04:	8e 8d       	ldd	r24, Y+30	; 0x1e
     f06:	9f 8d       	ldd	r25, Y+31	; 0x1f
     f08:	e8 0f       	add	r30, r24
     f0a:	f9 1f       	adc	r31, r25
     f0c:	85 85       	ldd	r24, Z+13	; 0x0d
     f0e:	e8 a1       	lds	r30, 0x48
     f10:	f9 a1       	lds	r31, 0x49
     f12:	80 83       	st	Z, r24
     f14:	12 c0       	rjmp	.+36     	; 0xf3a <KEYPAD_GetValue+0x142>
     f16:	0f 5f       	subi	r16, 0xFF	; 255
     f18:	1f 4f       	sbci	r17, 0xFF	; 255
     f1a:	04 30       	cpi	r16, 0x04	; 4
     f1c:	11 05       	cpc	r17, r1
     f1e:	79 f6       	brne	.-98     	; 0xebe <KEYPAD_GetValue+0xc6>
     f20:	8e 2d       	mov	r24, r14
     f22:	69 2d       	mov	r22, r9
     f24:	41 e0       	ldi	r20, 0x01	; 1
     f26:	0e 94 f5 00 	call	0x1ea	; 0x1ea <DIO_SetPinValue>
     f2a:	08 94       	sec
     f2c:	a1 1c       	adc	r10, r1
     f2e:	b1 1c       	adc	r11, r1
     f30:	f4 e0       	ldi	r31, 0x04	; 4
     f32:	af 16       	cp	r10, r31
     f34:	b1 04       	cpc	r11, r1
     f36:	09 f0       	breq	.+2      	; 0xf3a <KEYPAD_GetValue+0x142>
     f38:	ad cf       	rjmp	.-166    	; 0xe94 <KEYPAD_GetValue+0x9c>
     f3a:	a1 96       	adiw	r28, 0x21	; 33
     f3c:	0f b6       	in	r0, 0x3f	; 63
     f3e:	f8 94       	cli
     f40:	de bf       	out	0x3e, r29	; 62
     f42:	0f be       	out	0x3f, r0	; 63
     f44:	cd bf       	out	0x3d, r28	; 61
     f46:	df 91       	pop	r29
     f48:	cf 91       	pop	r28
     f4a:	1f 91       	pop	r17
     f4c:	0f 91       	pop	r16
     f4e:	ff 90       	pop	r15
     f50:	ef 90       	pop	r14
     f52:	df 90       	pop	r13
     f54:	cf 90       	pop	r12
     f56:	bf 90       	pop	r11
     f58:	af 90       	pop	r10
     f5a:	9f 90       	pop	r9
     f5c:	7f 90       	pop	r7
     f5e:	6f 90       	pop	r6
     f60:	5f 90       	pop	r5
     f62:	4f 90       	pop	r4
     f64:	3f 90       	pop	r3
     f66:	2f 90       	pop	r2
     f68:	08 95       	ret

00000f6a <private_WriteHalfPort>:
     f6a:	cf 93       	push	r28
     f6c:	c8 2f       	mov	r28, r24
     f6e:	80 fd       	sbrc	r24, 0
     f70:	06 c0       	rjmp	.+12     	; 0xf7e <private_WriteHalfPort+0x14>
     f72:	80 e0       	ldi	r24, 0x00	; 0
     f74:	64 e0       	ldi	r22, 0x04	; 4
     f76:	40 e0       	ldi	r20, 0x00	; 0
     f78:	0e 94 f5 00 	call	0x1ea	; 0x1ea <DIO_SetPinValue>
     f7c:	05 c0       	rjmp	.+10     	; 0xf88 <private_WriteHalfPort+0x1e>
     f7e:	80 e0       	ldi	r24, 0x00	; 0
     f80:	64 e0       	ldi	r22, 0x04	; 4
     f82:	41 e0       	ldi	r20, 0x01	; 1
     f84:	0e 94 f5 00 	call	0x1ea	; 0x1ea <DIO_SetPinValue>
     f88:	8c 2f       	mov	r24, r28
     f8a:	86 95       	lsr	r24
     f8c:	80 fd       	sbrc	r24, 0
     f8e:	06 c0       	rjmp	.+12     	; 0xf9c <private_WriteHalfPort+0x32>
     f90:	80 e0       	ldi	r24, 0x00	; 0
     f92:	65 e0       	ldi	r22, 0x05	; 5
     f94:	40 e0       	ldi	r20, 0x00	; 0
     f96:	0e 94 f5 00 	call	0x1ea	; 0x1ea <DIO_SetPinValue>
     f9a:	05 c0       	rjmp	.+10     	; 0xfa6 <private_WriteHalfPort+0x3c>
     f9c:	80 e0       	ldi	r24, 0x00	; 0
     f9e:	65 e0       	ldi	r22, 0x05	; 5
     fa0:	41 e0       	ldi	r20, 0x01	; 1
     fa2:	0e 94 f5 00 	call	0x1ea	; 0x1ea <DIO_SetPinValue>
     fa6:	8c 2f       	mov	r24, r28
     fa8:	86 95       	lsr	r24
     faa:	86 95       	lsr	r24
     fac:	80 fd       	sbrc	r24, 0
     fae:	06 c0       	rjmp	.+12     	; 0xfbc <private_WriteHalfPort+0x52>
     fb0:	80 e0       	ldi	r24, 0x00	; 0
     fb2:	66 e0       	ldi	r22, 0x06	; 6
     fb4:	40 e0       	ldi	r20, 0x00	; 0
     fb6:	0e 94 f5 00 	call	0x1ea	; 0x1ea <DIO_SetPinValue>
     fba:	05 c0       	rjmp	.+10     	; 0xfc6 <private_WriteHalfPort+0x5c>
     fbc:	80 e0       	ldi	r24, 0x00	; 0
     fbe:	66 e0       	ldi	r22, 0x06	; 6
     fc0:	41 e0       	ldi	r20, 0x01	; 1
     fc2:	0e 94 f5 00 	call	0x1ea	; 0x1ea <DIO_SetPinValue>
     fc6:	c6 95       	lsr	r28
     fc8:	c6 95       	lsr	r28
     fca:	c6 95       	lsr	r28
     fcc:	c0 fd       	sbrc	r28, 0
     fce:	06 c0       	rjmp	.+12     	; 0xfdc <private_WriteHalfPort+0x72>
     fd0:	80 e0       	ldi	r24, 0x00	; 0
     fd2:	67 e0       	ldi	r22, 0x07	; 7
     fd4:	40 e0       	ldi	r20, 0x00	; 0
     fd6:	0e 94 f5 00 	call	0x1ea	; 0x1ea <DIO_SetPinValue>
     fda:	05 c0       	rjmp	.+10     	; 0xfe6 <private_WriteHalfPort+0x7c>
     fdc:	80 e0       	ldi	r24, 0x00	; 0
     fde:	67 e0       	ldi	r22, 0x07	; 7
     fe0:	41 e0       	ldi	r20, 0x01	; 1
     fe2:	0e 94 f5 00 	call	0x1ea	; 0x1ea <DIO_SetPinValue>
     fe6:	cf 91       	pop	r28
     fe8:	08 95       	ret

00000fea <LCD_sendComnd>:
     fea:	cf 93       	push	r28
     fec:	c8 2f       	mov	r28, r24
     fee:	81 e0       	ldi	r24, 0x01	; 1
     ff0:	61 e0       	ldi	r22, 0x01	; 1
     ff2:	40 e0       	ldi	r20, 0x00	; 0
     ff4:	0e 94 f5 00 	call	0x1ea	; 0x1ea <DIO_SetPinValue>
     ff8:	81 e0       	ldi	r24, 0x01	; 1
     ffa:	62 e0       	ldi	r22, 0x02	; 2
     ffc:	40 e0       	ldi	r20, 0x00	; 0
     ffe:	0e 94 f5 00 	call	0x1ea	; 0x1ea <DIO_SetPinValue>
    1002:	8c 2f       	mov	r24, r28
    1004:	82 95       	swap	r24
    1006:	8f 70       	andi	r24, 0x0F	; 15
    1008:	0e 94 b5 07 	call	0xf6a	; 0xf6a <private_WriteHalfPort>
    100c:	81 e0       	ldi	r24, 0x01	; 1
    100e:	63 e0       	ldi	r22, 0x03	; 3
    1010:	41 e0       	ldi	r20, 0x01	; 1
    1012:	0e 94 f5 00 	call	0x1ea	; 0x1ea <DIO_SetPinValue>
    1016:	8f e9       	ldi	r24, 0x9F	; 159
    1018:	9f e0       	ldi	r25, 0x0F	; 15
    101a:	01 97       	sbiw	r24, 0x01	; 1
    101c:	f1 f7       	brne	.-4      	; 0x101a <LCD_sendComnd+0x30>
    101e:	00 c0       	rjmp	.+0      	; 0x1020 <LCD_sendComnd+0x36>
    1020:	00 00       	nop
    1022:	81 e0       	ldi	r24, 0x01	; 1
    1024:	63 e0       	ldi	r22, 0x03	; 3
    1026:	40 e0       	ldi	r20, 0x00	; 0
    1028:	0e 94 f5 00 	call	0x1ea	; 0x1ea <DIO_SetPinValue>
    102c:	8c 2f       	mov	r24, r28
    102e:	0e 94 b5 07 	call	0xf6a	; 0xf6a <private_WriteHalfPort>
    1032:	81 e0       	ldi	r24, 0x01	; 1
    1034:	63 e0       	ldi	r22, 0x03	; 3
    1036:	41 e0       	ldi	r20, 0x01	; 1
    1038:	0e 94 f5 00 	call	0x1ea	; 0x1ea <DIO_SetPinValue>
    103c:	8f e9       	ldi	r24, 0x9F	; 159
    103e:	9f e0       	ldi	r25, 0x0F	; 15
    1040:	01 97       	sbiw	r24, 0x01	; 1
    1042:	f1 f7       	brne	.-4      	; 0x1040 <LCD_sendComnd+0x56>
    1044:	00 c0       	rjmp	.+0      	; 0x1046 <LCD_sendComnd+0x5c>
    1046:	00 00       	nop
    1048:	81 e0       	ldi	r24, 0x01	; 1
    104a:	63 e0       	ldi	r22, 0x03	; 3
    104c:	40 e0       	ldi	r20, 0x00	; 0
    104e:	0e 94 f5 00 	call	0x1ea	; 0x1ea <DIO_SetPinValue>
    1052:	cf 91       	pop	r28
    1054:	08 95       	ret

00001056 <LCD_init>:
    1056:	81 e0       	ldi	r24, 0x01	; 1
    1058:	61 e0       	ldi	r22, 0x01	; 1
    105a:	41 e0       	ldi	r20, 0x01	; 1
    105c:	0e 94 5f 00 	call	0xbe	; 0xbe <DIO_SetPinDirection>
    1060:	81 e0       	ldi	r24, 0x01	; 1
    1062:	62 e0       	ldi	r22, 0x02	; 2
    1064:	41 e0       	ldi	r20, 0x01	; 1
    1066:	0e 94 5f 00 	call	0xbe	; 0xbe <DIO_SetPinDirection>
    106a:	81 e0       	ldi	r24, 0x01	; 1
    106c:	63 e0       	ldi	r22, 0x03	; 3
    106e:	41 e0       	ldi	r20, 0x01	; 1
    1070:	0e 94 5f 00 	call	0xbe	; 0xbe <DIO_SetPinDirection>
    1074:	80 e0       	ldi	r24, 0x00	; 0
    1076:	64 e0       	ldi	r22, 0x04	; 4
    1078:	41 e0       	ldi	r20, 0x01	; 1
    107a:	0e 94 5f 00 	call	0xbe	; 0xbe <DIO_SetPinDirection>
    107e:	80 e0       	ldi	r24, 0x00	; 0
    1080:	65 e0       	ldi	r22, 0x05	; 5
    1082:	41 e0       	ldi	r20, 0x01	; 1
    1084:	0e 94 5f 00 	call	0xbe	; 0xbe <DIO_SetPinDirection>
    1088:	80 e0       	ldi	r24, 0x00	; 0
    108a:	66 e0       	ldi	r22, 0x06	; 6
    108c:	41 e0       	ldi	r20, 0x01	; 1
    108e:	0e 94 5f 00 	call	0xbe	; 0xbe <DIO_SetPinDirection>
    1092:	80 e0       	ldi	r24, 0x00	; 0
    1094:	67 e0       	ldi	r22, 0x07	; 7
    1096:	41 e0       	ldi	r20, 0x01	; 1
    1098:	0e 94 5f 00 	call	0xbe	; 0xbe <DIO_SetPinDirection>
    109c:	8f e7       	ldi	r24, 0x7F	; 127
    109e:	95 eb       	ldi	r25, 0xB5	; 181
    10a0:	a1 e0       	ldi	r26, 0x01	; 1
    10a2:	81 50       	subi	r24, 0x01	; 1
    10a4:	90 40       	sbci	r25, 0x00	; 0
    10a6:	a0 40       	sbci	r26, 0x00	; 0
    10a8:	e1 f7       	brne	.-8      	; 0x10a2 <LCD_init+0x4c>
    10aa:	00 c0       	rjmp	.+0      	; 0x10ac <LCD_init+0x56>
    10ac:	00 00       	nop
    10ae:	81 e0       	ldi	r24, 0x01	; 1
    10b0:	61 e0       	ldi	r22, 0x01	; 1
    10b2:	40 e0       	ldi	r20, 0x00	; 0
    10b4:	0e 94 f5 00 	call	0x1ea	; 0x1ea <DIO_SetPinValue>
    10b8:	81 e0       	ldi	r24, 0x01	; 1
    10ba:	62 e0       	ldi	r22, 0x02	; 2
    10bc:	40 e0       	ldi	r20, 0x00	; 0
    10be:	0e 94 f5 00 	call	0x1ea	; 0x1ea <DIO_SetPinValue>
    10c2:	82 e0       	ldi	r24, 0x02	; 2
    10c4:	0e 94 b5 07 	call	0xf6a	; 0xf6a <private_WriteHalfPort>
    10c8:	81 e0       	ldi	r24, 0x01	; 1
    10ca:	63 e0       	ldi	r22, 0x03	; 3
    10cc:	41 e0       	ldi	r20, 0x01	; 1
    10ce:	0e 94 f5 00 	call	0x1ea	; 0x1ea <DIO_SetPinValue>
    10d2:	af e9       	ldi	r26, 0x9F	; 159
    10d4:	bf e0       	ldi	r27, 0x0F	; 15
    10d6:	11 97       	sbiw	r26, 0x01	; 1
    10d8:	f1 f7       	brne	.-4      	; 0x10d6 <LCD_init+0x80>
    10da:	00 c0       	rjmp	.+0      	; 0x10dc <LCD_init+0x86>
    10dc:	00 00       	nop
    10de:	81 e0       	ldi	r24, 0x01	; 1
    10e0:	63 e0       	ldi	r22, 0x03	; 3
    10e2:	40 e0       	ldi	r20, 0x00	; 0
    10e4:	0e 94 f5 00 	call	0x1ea	; 0x1ea <DIO_SetPinValue>
    10e8:	88 e2       	ldi	r24, 0x28	; 40
    10ea:	0e 94 f5 07 	call	0xfea	; 0xfea <LCD_sendComnd>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
    10ee:	b0 ef       	ldi	r27, 0xF0	; 240
    10f0:	ba 95       	dec	r27
    10f2:	f1 f7       	brne	.-4      	; 0x10f0 <LCD_init+0x9a>
    10f4:	8c e0       	ldi	r24, 0x0C	; 12
    10f6:	0e 94 f5 07 	call	0xfea	; 0xfea <LCD_sendComnd>
    10fa:	80 ef       	ldi	r24, 0xF0	; 240
    10fc:	8a 95       	dec	r24
    10fe:	f1 f7       	brne	.-4      	; 0x10fc <LCD_init+0xa6>
    1100:	81 e0       	ldi	r24, 0x01	; 1
    1102:	0e 94 f5 07 	call	0xfea	; 0xfea <LCD_sendComnd>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
    1106:	af e3       	ldi	r26, 0x3F	; 63
    1108:	bf e1       	ldi	r27, 0x1F	; 31
    110a:	11 97       	sbiw	r26, 0x01	; 1
    110c:	f1 f7       	brne	.-4      	; 0x110a <LCD_init+0xb4>
    110e:	00 c0       	rjmp	.+0      	; 0x1110 <LCD_init+0xba>
    1110:	00 00       	nop
    1112:	86 e0       	ldi	r24, 0x06	; 6
    1114:	0e 94 f5 07 	call	0xfea	; 0xfea <LCD_sendComnd>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
    1118:	b0 ef       	ldi	r27, 0xF0	; 240
    111a:	ba 95       	dec	r27
    111c:	f1 f7       	brne	.-4      	; 0x111a <LCD_init+0xc4>
    111e:	08 95       	ret

00001120 <LCD_sendChar>:
    1120:	cf 93       	push	r28
    1122:	c8 2f       	mov	r28, r24
    1124:	81 e0       	ldi	r24, 0x01	; 1
    1126:	61 e0       	ldi	r22, 0x01	; 1
    1128:	41 e0       	ldi	r20, 0x01	; 1
    112a:	0e 94 f5 00 	call	0x1ea	; 0x1ea <DIO_SetPinValue>
    112e:	81 e0       	ldi	r24, 0x01	; 1
    1130:	62 e0       	ldi	r22, 0x02	; 2
    1132:	40 e0       	ldi	r20, 0x00	; 0
    1134:	0e 94 f5 00 	call	0x1ea	; 0x1ea <DIO_SetPinValue>
    1138:	8c 2f       	mov	r24, r28
    113a:	82 95       	swap	r24
    113c:	8f 70       	andi	r24, 0x0F	; 15
    113e:	0e 94 b5 07 	call	0xf6a	; 0xf6a <private_WriteHalfPort>
    1142:	81 e0       	ldi	r24, 0x01	; 1
    1144:	63 e0       	ldi	r22, 0x03	; 3
    1146:	41 e0       	ldi	r20, 0x01	; 1
    1148:	0e 94 f5 00 	call	0x1ea	; 0x1ea <DIO_SetPinValue>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
    114c:	8f e9       	ldi	r24, 0x9F	; 159
    114e:	9f e0       	ldi	r25, 0x0F	; 15
    1150:	01 97       	sbiw	r24, 0x01	; 1
    1152:	f1 f7       	brne	.-4      	; 0x1150 <LCD_sendChar+0x30>
    1154:	00 c0       	rjmp	.+0      	; 0x1156 <LCD_sendChar+0x36>
    1156:	00 00       	nop
    1158:	81 e0       	ldi	r24, 0x01	; 1
    115a:	63 e0       	ldi	r22, 0x03	; 3
    115c:	40 e0       	ldi	r20, 0x00	; 0
    115e:	0e 94 f5 00 	call	0x1ea	; 0x1ea <DIO_SetPinValue>
    1162:	8c 2f       	mov	r24, r28
    1164:	0e 94 b5 07 	call	0xf6a	; 0xf6a <private_WriteHalfPort>
    1168:	81 e0       	ldi	r24, 0x01	; 1
    116a:	63 e0       	ldi	r22, 0x03	; 3
    116c:	41 e0       	ldi	r20, 0x01	; 1
    116e:	0e 94 f5 00 	call	0x1ea	; 0x1ea <DIO_SetPinValue>
    1172:	8f e9       	ldi	r24, 0x9F	; 159
    1174:	9f e0       	ldi	r25, 0x0F	; 15
    1176:	01 97       	sbiw	r24, 0x01	; 1
    1178:	f1 f7       	brne	.-4      	; 0x1176 <LCD_sendChar+0x56>
    117a:	00 c0       	rjmp	.+0      	; 0x117c <LCD_sendChar+0x5c>
    117c:	00 00       	nop
    117e:	81 e0       	ldi	r24, 0x01	; 1
    1180:	63 e0       	ldi	r22, 0x03	; 3
    1182:	40 e0       	ldi	r20, 0x00	; 0
    1184:	0e 94 f5 00 	call	0x1ea	; 0x1ea <DIO_SetPinValue>
    1188:	cf 91       	pop	r28
    118a:	08 95       	ret

0000118c <LCD_SendString>:
    118c:	cf 93       	push	r28
    118e:	df 93       	push	r29
    1190:	ec 01       	movw	r28, r24
    1192:	88 81       	ld	r24, Y
    1194:	88 23       	and	r24, r24
    1196:	31 f0       	breq	.+12     	; 0x11a4 <LCD_SendString+0x18>
    1198:	21 96       	adiw	r28, 0x01	; 1
    119a:	0e 94 90 08 	call	0x1120	; 0x1120 <LCD_sendChar>
    119e:	89 91       	ld	r24, Y+
    11a0:	88 23       	and	r24, r24
    11a2:	d9 f7       	brne	.-10     	; 0x119a <LCD_SendString+0xe>
    11a4:	df 91       	pop	r29
    11a6:	cf 91       	pop	r28
    11a8:	08 95       	ret

000011aa <LCD_ClearDesplay>:
    11aa:	81 e0       	ldi	r24, 0x01	; 1
    11ac:	0e 94 f5 07 	call	0xfea	; 0xfea <LCD_sendComnd>
    11b0:	8f e3       	ldi	r24, 0x3F	; 63
    11b2:	9f e1       	ldi	r25, 0x1F	; 31
    11b4:	01 97       	sbiw	r24, 0x01	; 1
    11b6:	f1 f7       	brne	.-4      	; 0x11b4 <LCD_ClearDesplay+0xa>
    11b8:	00 c0       	rjmp	.+0      	; 0x11ba <LCD_ClearDesplay+0x10>
    11ba:	00 00       	nop
    11bc:	80 e8       	ldi	r24, 0x80	; 128
    11be:	0e 94 f5 07 	call	0xfea	; 0xfea <LCD_sendComnd>
    11c2:	08 95       	ret

000011c4 <LCD_GoToLocation>:
    11c4:	cf 93       	push	r28
    11c6:	df 93       	push	r29
    11c8:	00 d0       	rcall	.+0      	; 0x11ca <LCD_GoToLocation+0x6>
    11ca:	00 d0       	rcall	.+0      	; 0x11cc <LCD_GoToLocation+0x8>
    11cc:	cd b7       	in	r28, 0x3d	; 61
    11ce:	de b7       	in	r29, 0x3e	; 62
    11d0:	90 e8       	ldi	r25, 0x80	; 128
    11d2:	99 83       	std	Y+1, r25	; 0x01
    11d4:	90 ec       	ldi	r25, 0xC0	; 192
    11d6:	9a 83       	std	Y+2, r25	; 0x02
    11d8:	94 e9       	ldi	r25, 0x94	; 148
    11da:	9b 83       	std	Y+3, r25	; 0x03
    11dc:	94 ed       	ldi	r25, 0xD4	; 212
    11de:	9c 83       	std	Y+4, r25	; 0x04
    11e0:	81 50       	subi	r24, 0x01	; 1
    11e2:	fe 01       	movw	r30, r28
    11e4:	e6 0f       	add	r30, r22
    11e6:	f1 1d       	adc	r31, r1
    11e8:	90 81       	ld	r25, Z
    11ea:	89 0f       	add	r24, r25
    11ec:	0e 94 f5 07 	call	0xfea	; 0xfea <LCD_sendComnd>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
    11f0:	8f e9       	ldi	r24, 0x9F	; 159
    11f2:	9f e0       	ldi	r25, 0x0F	; 15
    11f4:	01 97       	sbiw	r24, 0x01	; 1
    11f6:	f1 f7       	brne	.-4      	; 0x11f4 <LCD_GoToLocation+0x30>
    11f8:	00 c0       	rjmp	.+0      	; 0x11fa <LCD_GoToLocation+0x36>
    11fa:	00 00       	nop
    11fc:	0f 90       	pop	r0
    11fe:	0f 90       	pop	r0
    1200:	0f 90       	pop	r0
    1202:	0f 90       	pop	r0
    1204:	df 91       	pop	r29
    1206:	cf 91       	pop	r28
    1208:	08 95       	ret

0000120a <LCD_SendIntegarNumber>:
    120a:	0f 93       	push	r16
    120c:	1f 93       	push	r17
    120e:	cf 93       	push	r28
    1210:	df 93       	push	r29
    1212:	cd b7       	in	r28, 0x3d	; 61
    1214:	de b7       	in	r29, 0x3e	; 62
    1216:	a0 97       	sbiw	r28, 0x20	; 32
    1218:	0f b6       	in	r0, 0x3f	; 63
    121a:	f8 94       	cli
    121c:	de bf       	out	0x3e, r29	; 62
    121e:	0f be       	out	0x3f, r0	; 63
    1220:	cd bf       	out	0x3d, r28	; 61
    1222:	2d b7       	in	r18, 0x3d	; 61
    1224:	3e b7       	in	r19, 0x3e	; 62
    1226:	28 50       	subi	r18, 0x08	; 8
    1228:	30 40       	sbci	r19, 0x00	; 0
    122a:	0f b6       	in	r0, 0x3f	; 63
    122c:	f8 94       	cli
    122e:	3e bf       	out	0x3e, r19	; 62
    1230:	0f be       	out	0x3f, r0	; 63
    1232:	2d bf       	out	0x3d, r18	; 61
    1234:	ed b7       	in	r30, 0x3d	; 61
    1236:	fe b7       	in	r31, 0x3e	; 62
    1238:	31 96       	adiw	r30, 0x01	; 1
    123a:	8e 01       	movw	r16, r28
    123c:	0f 5f       	subi	r16, 0xFF	; 255
    123e:	1f 4f       	sbci	r17, 0xFF	; 255
    1240:	ad b7       	in	r26, 0x3d	; 61
    1242:	be b7       	in	r27, 0x3e	; 62
    1244:	12 96       	adiw	r26, 0x02	; 2
    1246:	1c 93       	st	X, r17
    1248:	0e 93       	st	-X, r16
    124a:	11 97       	sbiw	r26, 0x01	; 1
    124c:	21 e1       	ldi	r18, 0x11	; 17
    124e:	30 e0       	ldi	r19, 0x00	; 0
    1250:	33 83       	std	Z+3, r19	; 0x03
    1252:	22 83       	std	Z+2, r18	; 0x02
    1254:	2c eb       	ldi	r18, 0xBC	; 188
    1256:	30 e0       	ldi	r19, 0x00	; 0
    1258:	35 83       	std	Z+5, r19	; 0x05
    125a:	24 83       	std	Z+4, r18	; 0x04
    125c:	97 83       	std	Z+7, r25	; 0x07
    125e:	86 83       	std	Z+6, r24	; 0x06
    1260:	0e 94 f3 0a 	call	0x15e6	; 0x15e6 <snprintf>
    1264:	2d b7       	in	r18, 0x3d	; 61
    1266:	3e b7       	in	r19, 0x3e	; 62
    1268:	28 5f       	subi	r18, 0xF8	; 248
    126a:	3f 4f       	sbci	r19, 0xFF	; 255
    126c:	0f b6       	in	r0, 0x3f	; 63
    126e:	f8 94       	cli
    1270:	3e bf       	out	0x3e, r19	; 62
    1272:	0f be       	out	0x3f, r0	; 63
    1274:	2d bf       	out	0x3d, r18	; 61
    1276:	c8 01       	movw	r24, r16
    1278:	0e 94 c6 08 	call	0x118c	; 0x118c <LCD_SendString>
    127c:	a0 96       	adiw	r28, 0x20	; 32
    127e:	0f b6       	in	r0, 0x3f	; 63
    1280:	f8 94       	cli
    1282:	de bf       	out	0x3e, r29	; 62
    1284:	0f be       	out	0x3f, r0	; 63
    1286:	cd bf       	out	0x3d, r28	; 61
    1288:	df 91       	pop	r29
    128a:	cf 91       	pop	r28
    128c:	1f 91       	pop	r17
    128e:	0f 91       	pop	r16
    1290:	08 95       	ret

00001292 <LCD_SendNumberToLocation>:
    1292:	cf 93       	push	r28
    1294:	df 93       	push	r29
    1296:	ec 01       	movw	r28, r24
    1298:	86 2f       	mov	r24, r22
    129a:	64 2f       	mov	r22, r20
    129c:	0e 94 e2 08 	call	0x11c4	; 0x11c4 <LCD_GoToLocation>
    12a0:	ce 01       	movw	r24, r28
    12a2:	0e 94 05 09 	call	0x120a	; 0x120a <LCD_SendIntegarNumber>
    12a6:	df 91       	pop	r29
    12a8:	cf 91       	pop	r28
    12aa:	08 95       	ret

000012ac <LCD_SendFloatNumber>:
    12ac:	0f 93       	push	r16
    12ae:	1f 93       	push	r17
    12b0:	cf 93       	push	r28
    12b2:	df 93       	push	r29
    12b4:	cd b7       	in	r28, 0x3d	; 61
    12b6:	de b7       	in	r29, 0x3e	; 62
    12b8:	a0 97       	sbiw	r28, 0x20	; 32
    12ba:	0f b6       	in	r0, 0x3f	; 63
    12bc:	f8 94       	cli
    12be:	de bf       	out	0x3e, r29	; 62
    12c0:	0f be       	out	0x3f, r0	; 63
    12c2:	cd bf       	out	0x3d, r28	; 61
    12c4:	dc 01       	movw	r26, r24
    12c6:	cb 01       	movw	r24, r22
    12c8:	2d b7       	in	r18, 0x3d	; 61
    12ca:	3e b7       	in	r19, 0x3e	; 62
    12cc:	2a 50       	subi	r18, 0x0A	; 10
    12ce:	30 40       	sbci	r19, 0x00	; 0
    12d0:	0f b6       	in	r0, 0x3f	; 63
    12d2:	f8 94       	cli
    12d4:	3e bf       	out	0x3e, r19	; 62
    12d6:	0f be       	out	0x3f, r0	; 63
    12d8:	2d bf       	out	0x3d, r18	; 61
    12da:	4d b7       	in	r20, 0x3d	; 61
    12dc:	5e b7       	in	r21, 0x3e	; 62
    12de:	4f 5f       	subi	r20, 0xFF	; 255
    12e0:	5f 4f       	sbci	r21, 0xFF	; 255
    12e2:	8e 01       	movw	r16, r28
    12e4:	0f 5f       	subi	r16, 0xFF	; 255
    12e6:	1f 4f       	sbci	r17, 0xFF	; 255
    12e8:	ed b7       	in	r30, 0x3d	; 61
    12ea:	fe b7       	in	r31, 0x3e	; 62
    12ec:	12 83       	std	Z+2, r17	; 0x02
    12ee:	01 83       	std	Z+1, r16	; 0x01
    12f0:	21 e1       	ldi	r18, 0x11	; 17
    12f2:	30 e0       	ldi	r19, 0x00	; 0
    12f4:	fa 01       	movw	r30, r20
    12f6:	33 83       	std	Z+3, r19	; 0x03
    12f8:	22 83       	std	Z+2, r18	; 0x02
    12fa:	2f eb       	ldi	r18, 0xBF	; 191
    12fc:	30 e0       	ldi	r19, 0x00	; 0
    12fe:	35 83       	std	Z+5, r19	; 0x05
    1300:	24 83       	std	Z+4, r18	; 0x04
    1302:	86 83       	std	Z+6, r24	; 0x06
    1304:	97 83       	std	Z+7, r25	; 0x07
    1306:	a0 87       	std	Z+8, r26	; 0x08
    1308:	b1 87       	std	Z+9, r27	; 0x09
    130a:	0e 94 f3 0a 	call	0x15e6	; 0x15e6 <snprintf>
    130e:	2d b7       	in	r18, 0x3d	; 61
    1310:	3e b7       	in	r19, 0x3e	; 62
    1312:	26 5f       	subi	r18, 0xF6	; 246
    1314:	3f 4f       	sbci	r19, 0xFF	; 255
    1316:	0f b6       	in	r0, 0x3f	; 63
    1318:	f8 94       	cli
    131a:	3e bf       	out	0x3e, r19	; 62
    131c:	0f be       	out	0x3f, r0	; 63
    131e:	2d bf       	out	0x3d, r18	; 61
    1320:	c8 01       	movw	r24, r16
    1322:	0e 94 c6 08 	call	0x118c	; 0x118c <LCD_SendString>
    1326:	a0 96       	adiw	r28, 0x20	; 32
    1328:	0f b6       	in	r0, 0x3f	; 63
    132a:	f8 94       	cli
    132c:	de bf       	out	0x3e, r29	; 62
    132e:	0f be       	out	0x3f, r0	; 63
    1330:	cd bf       	out	0x3d, r28	; 61
    1332:	df 91       	pop	r29
    1334:	cf 91       	pop	r28
    1336:	1f 91       	pop	r17
    1338:	0f 91       	pop	r16
    133a:	08 95       	ret

0000133c <LCD_Shift>:
    133c:	0e 94 f5 07 	call	0xfea	; 0xfea <LCD_sendComnd>
    1340:	08 95       	ret

00001342 <LED_init>:
    1342:	84 30       	cpi	r24, 0x04	; 4
    1344:	28 f4       	brcc	.+10     	; 0x1350 <LED_init+0xe>
    1346:	68 30       	cpi	r22, 0x08	; 8
    1348:	18 f4       	brcc	.+6      	; 0x1350 <LED_init+0xe>
    134a:	41 e0       	ldi	r20, 0x01	; 1
    134c:	0e 94 5f 00 	call	0xbe	; 0xbe <DIO_SetPinDirection>
    1350:	08 95       	ret

00001352 <LED_TurnON>:
    1352:	84 30       	cpi	r24, 0x04	; 4
    1354:	28 f4       	brcc	.+10     	; 0x1360 <LED_TurnON+0xe>
    1356:	68 30       	cpi	r22, 0x08	; 8
    1358:	18 f4       	brcc	.+6      	; 0x1360 <LED_TurnON+0xe>
    135a:	41 e0       	ldi	r20, 0x01	; 1
    135c:	0e 94 f5 00 	call	0x1ea	; 0x1ea <DIO_SetPinValue>
    1360:	08 95       	ret

00001362 <LED_TurnOFF>:
    1362:	84 30       	cpi	r24, 0x04	; 4
    1364:	28 f4       	brcc	.+10     	; 0x1370 <LED_TurnOFF+0xe>
    1366:	68 30       	cpi	r22, 0x08	; 8
    1368:	18 f4       	brcc	.+6      	; 0x1370 <LED_TurnOFF+0xe>
    136a:	40 e0       	ldi	r20, 0x00	; 0
    136c:	0e 94 f5 00 	call	0x1ea	; 0x1ea <DIO_SetPinValue>
    1370:	08 95       	ret

00001372 <LED_Toggle>:
    1372:	84 30       	cpi	r24, 0x04	; 4
    1374:	20 f4       	brcc	.+8      	; 0x137e <LED_Toggle+0xc>
    1376:	68 30       	cpi	r22, 0x08	; 8
    1378:	10 f4       	brcc	.+4      	; 0x137e <LED_Toggle+0xc>
    137a:	0e 94 8b 01 	call	0x316	; 0x316 <DIO_TogglePinValue>
    137e:	08 95       	ret

00001380 <RELAY_init>:
    1380:	84 30       	cpi	r24, 0x04	; 4
    1382:	28 f4       	brcc	.+10     	; 0x138e <RELAY_init+0xe>
    1384:	68 30       	cpi	r22, 0x08	; 8
    1386:	18 f4       	brcc	.+6      	; 0x138e <RELAY_init+0xe>
    1388:	41 e0       	ldi	r20, 0x01	; 1
    138a:	0e 94 5f 00 	call	0xbe	; 0xbe <DIO_SetPinDirection>
    138e:	08 95       	ret

00001390 <RELAY_TurnON>:
    1390:	84 30       	cpi	r24, 0x04	; 4
    1392:	28 f4       	brcc	.+10     	; 0x139e <RELAY_TurnON+0xe>
    1394:	68 30       	cpi	r22, 0x08	; 8
    1396:	18 f4       	brcc	.+6      	; 0x139e <RELAY_TurnON+0xe>
    1398:	41 e0       	ldi	r20, 0x01	; 1
    139a:	0e 94 f5 00 	call	0x1ea	; 0x1ea <DIO_SetPinValue>
    139e:	08 95       	ret

000013a0 <RELAY_TurnOFF>:
    13a0:	84 30       	cpi	r24, 0x04	; 4
    13a2:	28 f4       	brcc	.+10     	; 0x13ae <RELAY_TurnOFF+0xe>
    13a4:	68 30       	cpi	r22, 0x08	; 8
    13a6:	18 f4       	brcc	.+6      	; 0x13ae <RELAY_TurnOFF+0xe>
    13a8:	40 e0       	ldi	r20, 0x00	; 0
    13aa:	0e 94 f5 00 	call	0x1ea	; 0x1ea <DIO_SetPinValue>
    13ae:	08 95       	ret

000013b0 <RELAY_Toggle>:
    13b0:	84 30       	cpi	r24, 0x04	; 4
    13b2:	20 f4       	brcc	.+8      	; 0x13bc <RELAY_Toggle+0xc>
    13b4:	68 30       	cpi	r22, 0x08	; 8
    13b6:	10 f4       	brcc	.+4      	; 0x13bc <RELAY_Toggle+0xc>
    13b8:	0e 94 8b 01 	call	0x316	; 0x316 <DIO_TogglePinValue>
    13bc:	08 95       	ret

000013be <SERVO_init>:
    13be:	83 e0       	ldi	r24, 0x03	; 3
    13c0:	67 e0       	ldi	r22, 0x07	; 7
    13c2:	40 e0       	ldi	r20, 0x00	; 0
    13c4:	0e 94 5f 00 	call	0xbe	; 0xbe <DIO_SetPinDirection>
    13c8:	83 e0       	ldi	r24, 0x03	; 3
    13ca:	65 e0       	ldi	r22, 0x05	; 5
    13cc:	41 e0       	ldi	r20, 0x01	; 1
    13ce:	0e 94 5f 00 	call	0xbe	; 0xbe <DIO_SetPinDirection>
    13d2:	83 e0       	ldi	r24, 0x03	; 3
    13d4:	64 e0       	ldi	r22, 0x04	; 4
    13d6:	41 e0       	ldi	r20, 0x01	; 1
    13d8:	0e 94 5f 00 	call	0xbe	; 0xbe <DIO_SetPinDirection>
    13dc:	08 95       	ret

000013de <SERVO_TurnON>:
    13de:	0f 93       	push	r16
    13e0:	1f 93       	push	r17
    13e2:	cf 93       	push	r28
    13e4:	df 93       	push	r29
    13e6:	ec 01       	movw	r28, r24
    13e8:	8b 01       	movw	r16, r22
    13ea:	0e 94 05 0a 	call	0x140a	; 0x140a <TMR1_init>
    13ee:	ce 01       	movw	r24, r28
    13f0:	b8 01       	movw	r22, r16
    13f2:	0e 94 32 0a 	call	0x1464	; 0x1464 <TMR1_SetDutyCycle_And_Freq_Value>
    13f6:	0e 94 1e 0a 	call	0x143c	; 0x143c <TMR1_Start>
    13fa:	df 91       	pop	r29
    13fc:	cf 91       	pop	r28
    13fe:	1f 91       	pop	r17
    1400:	0f 91       	pop	r16
    1402:	08 95       	ret

00001404 <SERVO_TurnOFF>:
    1404:	0e 94 28 0a 	call	0x1450	; 0x1450 <TMR1_Stop>
    1408:	08 95       	ret

0000140a <TMR1_init>:
    140a:	8f b5       	in	r24, 0x2f	; 47
    140c:	8e 7f       	andi	r24, 0xFE	; 254
    140e:	8f bd       	out	0x2f, r24	; 47
    1410:	8f b5       	in	r24, 0x2f	; 47
    1412:	82 60       	ori	r24, 0x02	; 2
    1414:	8f bd       	out	0x2f, r24	; 47
    1416:	8e b5       	in	r24, 0x2e	; 46
    1418:	88 60       	ori	r24, 0x08	; 8
    141a:	8e bd       	out	0x2e, r24	; 46
    141c:	8e b5       	in	r24, 0x2e	; 46
    141e:	80 61       	ori	r24, 0x10	; 16
    1420:	8e bd       	out	0x2e, r24	; 46
    1422:	8f b5       	in	r24, 0x2f	; 47
    1424:	8f 7b       	andi	r24, 0xBF	; 191
    1426:	8f bd       	out	0x2f, r24	; 47
    1428:	8f b5       	in	r24, 0x2f	; 47
    142a:	80 68       	ori	r24, 0x80	; 128
    142c:	8f bd       	out	0x2f, r24	; 47
    142e:	8f b5       	in	r24, 0x2f	; 47
    1430:	8f 7e       	andi	r24, 0xEF	; 239
    1432:	8f bd       	out	0x2f, r24	; 47
    1434:	8f b5       	in	r24, 0x2f	; 47
    1436:	80 62       	ori	r24, 0x20	; 32
    1438:	8f bd       	out	0x2f, r24	; 47
    143a:	08 95       	ret

0000143c <TMR1_Start>:
    143c:	8e b5       	in	r24, 0x2e	; 46
    143e:	81 60       	ori	r24, 0x01	; 1
    1440:	8e bd       	out	0x2e, r24	; 46
    1442:	8e b5       	in	r24, 0x2e	; 46
    1444:	82 60       	ori	r24, 0x02	; 2
    1446:	8e bd       	out	0x2e, r24	; 46
    1448:	8e b5       	in	r24, 0x2e	; 46
    144a:	8b 7f       	andi	r24, 0xFB	; 251
    144c:	8e bd       	out	0x2e, r24	; 46
    144e:	08 95       	ret

00001450 <TMR1_Stop>:
    1450:	8e b5       	in	r24, 0x2e	; 46
    1452:	8e 7f       	andi	r24, 0xFE	; 254
    1454:	8e bd       	out	0x2e, r24	; 46
    1456:	8e b5       	in	r24, 0x2e	; 46
    1458:	8d 7f       	andi	r24, 0xFD	; 253
    145a:	8e bd       	out	0x2e, r24	; 46
    145c:	8e b5       	in	r24, 0x2e	; 46
    145e:	8b 7f       	andi	r24, 0xFB	; 251
    1460:	8e bd       	out	0x2e, r24	; 46
    1462:	08 95       	ret

00001464 <TMR1_SetDutyCycle_And_Freq_Value>:
    1464:	97 bd       	out	0x27, r25	; 39
    1466:	86 bd       	out	0x26, r24	; 38
    1468:	7b bd       	out	0x2b, r23	; 43
    146a:	6a bd       	out	0x2a, r22	; 42
    146c:	79 bd       	out	0x29, r23	; 41
    146e:	68 bd       	out	0x28, r22	; 40
    1470:	08 95       	ret

00001472 <UART_init>:
    1472:	52 98       	cbi	0x0a, 2	; 10
    1474:	86 e8       	ldi	r24, 0x86	; 134
    1476:	80 bd       	out	0x20, r24	; 32
    1478:	87 e6       	ldi	r24, 0x67	; 103
    147a:	89 b9       	out	0x09, r24	; 9
    147c:	10 bc       	out	0x20, r1	; 32
    147e:	59 98       	cbi	0x0b, 1	; 11
    1480:	57 9a       	sbi	0x0a, 7	; 10
    1482:	56 9a       	sbi	0x0a, 6	; 10
    1484:	55 9a       	sbi	0x0a, 5	; 10
    1486:	53 9a       	sbi	0x0a, 3	; 10
    1488:	54 9a       	sbi	0x0a, 4	; 10
    148a:	08 95       	ret

0000148c <UART_ReceiveChar>:
    148c:	00 97       	sbiw	r24, 0x00	; 0
    148e:	29 f0       	breq	.+10     	; 0x149a <UART_ReceiveChar+0xe>
    1490:	5f 9b       	sbis	0x0b, 7	; 11
    1492:	fe cf       	rjmp	.-4      	; 0x1490 <UART_ReceiveChar+0x4>
    1494:	2c b1       	in	r18, 0x0c	; 12
    1496:	fc 01       	movw	r30, r24
    1498:	20 83       	st	Z, r18
    149a:	08 95       	ret

0000149c <UART_TransmiteChar>:
    149c:	8c b9       	out	0x0c, r24	; 12
    149e:	8b b1       	in	r24, 0x0b	; 11
    14a0:	85 ff       	sbrs	r24, 5
    14a2:	fd cf       	rjmp	.-6      	; 0x149e <UART_TransmiteChar+0x2>
    14a4:	08 95       	ret

000014a6 <UART_TransmiteString>:
    14a6:	0f 93       	push	r16
    14a8:	1f 93       	push	r17
    14aa:	cf 93       	push	r28
    14ac:	8c 01       	movw	r16, r24
    14ae:	fc 01       	movw	r30, r24
    14b0:	80 81       	ld	r24, Z
    14b2:	88 23       	and	r24, r24
    14b4:	51 f0       	breq	.+20     	; 0x14ca <UART_TransmiteString+0x24>
    14b6:	c0 e0       	ldi	r28, 0x00	; 0
    14b8:	0e 94 4e 0a 	call	0x149c	; 0x149c <UART_TransmiteChar>
    14bc:	cf 5f       	subi	r28, 0xFF	; 255
    14be:	f8 01       	movw	r30, r16
    14c0:	ec 0f       	add	r30, r28
    14c2:	f1 1d       	adc	r31, r1
    14c4:	80 81       	ld	r24, Z
    14c6:	88 23       	and	r24, r24
    14c8:	b9 f7       	brne	.-18     	; 0x14b8 <UART_TransmiteString+0x12>
    14ca:	cf 91       	pop	r28
    14cc:	1f 91       	pop	r17
    14ce:	0f 91       	pop	r16
    14d0:	08 95       	ret

000014d2 <UART_CallBack_RXC>:
    14d2:	90 93 c3 00 	sts	0x00C3, r25
    14d6:	80 93 c2 00 	sts	0x00C2, r24
    14da:	08 95       	ret

000014dc <UART_CallBack_UDRE>:
    14dc:	90 93 c5 00 	sts	0x00C5, r25
    14e0:	80 93 c4 00 	sts	0x00C4, r24
    14e4:	08 95       	ret

000014e6 <UART_CallBack_TXC>:
    14e6:	90 93 c7 00 	sts	0x00C7, r25
    14ea:	80 93 c6 00 	sts	0x00C6, r24
    14ee:	08 95       	ret

000014f0 <__vector_13>:
    14f0:	1f 92       	push	r1
    14f2:	0f 92       	push	r0
    14f4:	0f b6       	in	r0, 0x3f	; 63
    14f6:	0f 92       	push	r0
    14f8:	11 24       	eor	r1, r1
    14fa:	2f 93       	push	r18
    14fc:	3f 93       	push	r19
    14fe:	4f 93       	push	r20
    1500:	5f 93       	push	r21
    1502:	6f 93       	push	r22
    1504:	7f 93       	push	r23
    1506:	8f 93       	push	r24
    1508:	9f 93       	push	r25
    150a:	af 93       	push	r26
    150c:	bf 93       	push	r27
    150e:	ef 93       	push	r30
    1510:	ff 93       	push	r31
    1512:	e0 91 c2 00 	lds	r30, 0x00C2
    1516:	f0 91 c3 00 	lds	r31, 0x00C3
    151a:	30 97       	sbiw	r30, 0x00	; 0
    151c:	09 f0       	breq	.+2      	; 0x1520 <__vector_13+0x30>
    151e:	09 95       	icall
    1520:	ff 91       	pop	r31
    1522:	ef 91       	pop	r30
    1524:	bf 91       	pop	r27
    1526:	af 91       	pop	r26
    1528:	9f 91       	pop	r25
    152a:	8f 91       	pop	r24
    152c:	7f 91       	pop	r23
    152e:	6f 91       	pop	r22
    1530:	5f 91       	pop	r21
    1532:	4f 91       	pop	r20
    1534:	3f 91       	pop	r19
    1536:	2f 91       	pop	r18
    1538:	0f 90       	pop	r0
    153a:	0f be       	out	0x3f, r0	; 63
    153c:	0f 90       	pop	r0
    153e:	1f 90       	pop	r1
    1540:	18 95       	reti

00001542 <__vector_14>:
    1542:	1f 92       	push	r1
    1544:	0f 92       	push	r0
    1546:	0f b6       	in	r0, 0x3f	; 63
    1548:	0f 92       	push	r0
    154a:	11 24       	eor	r1, r1
    154c:	2f 93       	push	r18
    154e:	3f 93       	push	r19
    1550:	4f 93       	push	r20
    1552:	5f 93       	push	r21
    1554:	6f 93       	push	r22
    1556:	7f 93       	push	r23
    1558:	8f 93       	push	r24
    155a:	9f 93       	push	r25
    155c:	af 93       	push	r26
    155e:	bf 93       	push	r27
    1560:	ef 93       	push	r30
    1562:	ff 93       	push	r31
    1564:	e0 91 c4 00 	lds	r30, 0x00C4
    1568:	f0 91 c5 00 	lds	r31, 0x00C5
    156c:	30 97       	sbiw	r30, 0x00	; 0
    156e:	09 f0       	breq	.+2      	; 0x1572 <__vector_14+0x30>
    1570:	09 95       	icall
    1572:	ff 91       	pop	r31
    1574:	ef 91       	pop	r30
    1576:	bf 91       	pop	r27
    1578:	af 91       	pop	r26
    157a:	9f 91       	pop	r25
    157c:	8f 91       	pop	r24
    157e:	7f 91       	pop	r23
    1580:	6f 91       	pop	r22
    1582:	5f 91       	pop	r21
    1584:	4f 91       	pop	r20
    1586:	3f 91       	pop	r19
    1588:	2f 91       	pop	r18
    158a:	0f 90       	pop	r0
    158c:	0f be       	out	0x3f, r0	; 63
    158e:	0f 90       	pop	r0
    1590:	1f 90       	pop	r1
    1592:	18 95       	reti

00001594 <__vector_15>:
    1594:	1f 92       	push	r1
    1596:	0f 92       	push	r0
    1598:	0f b6       	in	r0, 0x3f	; 63
    159a:	0f 92       	push	r0
    159c:	11 24       	eor	r1, r1
    159e:	2f 93       	push	r18
    15a0:	3f 93       	push	r19
    15a2:	4f 93       	push	r20
    15a4:	5f 93       	push	r21
    15a6:	6f 93       	push	r22
    15a8:	7f 93       	push	r23
    15aa:	8f 93       	push	r24
    15ac:	9f 93       	push	r25
    15ae:	af 93       	push	r26
    15b0:	bf 93       	push	r27
    15b2:	ef 93       	push	r30
    15b4:	ff 93       	push	r31
    15b6:	e0 91 c6 00 	lds	r30, 0x00C6
    15ba:	f0 91 c7 00 	lds	r31, 0x00C7
    15be:	30 97       	sbiw	r30, 0x00	; 0
    15c0:	09 f0       	breq	.+2      	; 0x15c4 <__vector_15+0x30>
    15c2:	09 95       	icall
    15c4:	ff 91       	pop	r31
    15c6:	ef 91       	pop	r30
    15c8:	bf 91       	pop	r27
    15ca:	af 91       	pop	r26
    15cc:	9f 91       	pop	r25
    15ce:	8f 91       	pop	r24
    15d0:	7f 91       	pop	r23
    15d2:	6f 91       	pop	r22
    15d4:	5f 91       	pop	r21
    15d6:	4f 91       	pop	r20
    15d8:	3f 91       	pop	r19
    15da:	2f 91       	pop	r18
    15dc:	0f 90       	pop	r0
    15de:	0f be       	out	0x3f, r0	; 63
    15e0:	0f 90       	pop	r0
    15e2:	1f 90       	pop	r1
    15e4:	18 95       	reti

000015e6 <snprintf>:
    15e6:	ae e0       	ldi	r26, 0x0E	; 14
    15e8:	b0 e0       	ldi	r27, 0x00	; 0
    15ea:	e9 ef       	ldi	r30, 0xF9	; 249
    15ec:	fa e0       	ldi	r31, 0x0A	; 10
    15ee:	0c 94 af 0d 	jmp	0x1b5e	; 0x1b5e <__prologue_saves__+0x1c>
    15f2:	0d 89       	ldd	r16, Y+21	; 0x15
    15f4:	1e 89       	ldd	r17, Y+22	; 0x16
    15f6:	8f 89       	ldd	r24, Y+23	; 0x17
    15f8:	98 8d       	ldd	r25, Y+24	; 0x18
    15fa:	26 e0       	ldi	r18, 0x06	; 6
    15fc:	2c 83       	std	Y+4, r18	; 0x04
    15fe:	1a 83       	std	Y+2, r17	; 0x02
    1600:	09 83       	std	Y+1, r16	; 0x01
    1602:	97 ff       	sbrs	r25, 7
    1604:	02 c0       	rjmp	.+4      	; 0x160a <snprintf+0x24>
    1606:	80 e0       	ldi	r24, 0x00	; 0
    1608:	90 e8       	ldi	r25, 0x80	; 128
    160a:	01 97       	sbiw	r24, 0x01	; 1
    160c:	9e 83       	std	Y+6, r25	; 0x06
    160e:	8d 83       	std	Y+5, r24	; 0x05
    1610:	ae 01       	movw	r20, r28
    1612:	45 5e       	subi	r20, 0xE5	; 229
    1614:	5f 4f       	sbci	r21, 0xFF	; 255
    1616:	ce 01       	movw	r24, r28
    1618:	01 96       	adiw	r24, 0x01	; 1
    161a:	69 8d       	ldd	r22, Y+25	; 0x19
    161c:	7a 8d       	ldd	r23, Y+26	; 0x1a
    161e:	0e 94 23 0b 	call	0x1646	; 0x1646 <vfprintf>
    1622:	4d 81       	ldd	r20, Y+5	; 0x05
    1624:	5e 81       	ldd	r21, Y+6	; 0x06
    1626:	57 fd       	sbrc	r21, 7
    1628:	0a c0       	rjmp	.+20     	; 0x163e <snprintf+0x58>
    162a:	2f 81       	ldd	r18, Y+7	; 0x07
    162c:	38 85       	ldd	r19, Y+8	; 0x08
    162e:	42 17       	cp	r20, r18
    1630:	53 07       	cpc	r21, r19
    1632:	0c f4       	brge	.+2      	; 0x1636 <snprintf+0x50>
    1634:	9a 01       	movw	r18, r20
    1636:	02 0f       	add	r16, r18
    1638:	13 1f       	adc	r17, r19
    163a:	f8 01       	movw	r30, r16
    163c:	10 82       	st	Z, r1
    163e:	2e 96       	adiw	r28, 0x0e	; 14
    1640:	e4 e0       	ldi	r30, 0x04	; 4
    1642:	0c 94 cb 0d 	jmp	0x1b96	; 0x1b96 <__epilogue_restores__+0x1c>

00001646 <vfprintf>:
    1646:	ad e0       	ldi	r26, 0x0D	; 13
    1648:	b0 e0       	ldi	r27, 0x00	; 0
    164a:	e9 e2       	ldi	r30, 0x29	; 41
    164c:	fb e0       	ldi	r31, 0x0B	; 11
    164e:	0c 94 a1 0d 	jmp	0x1b42	; 0x1b42 <__prologue_saves__>
    1652:	3c 01       	movw	r6, r24
    1654:	7d 87       	std	Y+13, r23	; 0x0d
    1656:	6c 87       	std	Y+12, r22	; 0x0c
    1658:	5a 01       	movw	r10, r20
    165a:	fc 01       	movw	r30, r24
    165c:	17 82       	std	Z+7, r1	; 0x07
    165e:	16 82       	std	Z+6, r1	; 0x06
    1660:	83 81       	ldd	r24, Z+3	; 0x03
    1662:	81 ff       	sbrs	r24, 1
    1664:	c8 c1       	rjmp	.+912    	; 0x19f6 <vfprintf+0x3b0>
    1666:	2e 01       	movw	r4, r28
    1668:	08 94       	sec
    166a:	41 1c       	adc	r4, r1
    166c:	51 1c       	adc	r5, r1
    166e:	f3 01       	movw	r30, r6
    1670:	93 81       	ldd	r25, Z+3	; 0x03
    1672:	ec 85       	ldd	r30, Y+12	; 0x0c
    1674:	fd 85       	ldd	r31, Y+13	; 0x0d
    1676:	93 fd       	sbrc	r25, 3
    1678:	85 91       	lpm	r24, Z+
    167a:	93 ff       	sbrs	r25, 3
    167c:	81 91       	ld	r24, Z+
    167e:	fd 87       	std	Y+13, r31	; 0x0d
    1680:	ec 87       	std	Y+12, r30	; 0x0c
    1682:	88 23       	and	r24, r24
    1684:	09 f4       	brne	.+2      	; 0x1688 <vfprintf+0x42>
    1686:	b3 c1       	rjmp	.+870    	; 0x19ee <vfprintf+0x3a8>
    1688:	85 32       	cpi	r24, 0x25	; 37
    168a:	41 f4       	brne	.+16     	; 0x169c <vfprintf+0x56>
    168c:	93 fd       	sbrc	r25, 3
    168e:	85 91       	lpm	r24, Z+
    1690:	93 ff       	sbrs	r25, 3
    1692:	81 91       	ld	r24, Z+
    1694:	fd 87       	std	Y+13, r31	; 0x0d
    1696:	ec 87       	std	Y+12, r30	; 0x0c
    1698:	85 32       	cpi	r24, 0x25	; 37
    169a:	29 f4       	brne	.+10     	; 0x16a6 <vfprintf+0x60>
    169c:	90 e0       	ldi	r25, 0x00	; 0
    169e:	b3 01       	movw	r22, r6
    16a0:	0e 94 17 0d 	call	0x1a2e	; 0x1a2e <fputc>
    16a4:	e4 cf       	rjmp	.-56     	; 0x166e <vfprintf+0x28>
    16a6:	ff 24       	eor	r15, r15
    16a8:	ee 24       	eor	r14, r14
    16aa:	10 e0       	ldi	r17, 0x00	; 0
    16ac:	10 32       	cpi	r17, 0x20	; 32
    16ae:	b0 f4       	brcc	.+44     	; 0x16dc <vfprintf+0x96>
    16b0:	8b 32       	cpi	r24, 0x2B	; 43
    16b2:	69 f0       	breq	.+26     	; 0x16ce <vfprintf+0x88>
    16b4:	8c 32       	cpi	r24, 0x2C	; 44
    16b6:	28 f4       	brcc	.+10     	; 0x16c2 <vfprintf+0x7c>
    16b8:	80 32       	cpi	r24, 0x20	; 32
    16ba:	51 f0       	breq	.+20     	; 0x16d0 <vfprintf+0x8a>
    16bc:	83 32       	cpi	r24, 0x23	; 35
    16be:	71 f4       	brne	.+28     	; 0x16dc <vfprintf+0x96>
    16c0:	0b c0       	rjmp	.+22     	; 0x16d8 <vfprintf+0x92>
    16c2:	8d 32       	cpi	r24, 0x2D	; 45
    16c4:	39 f0       	breq	.+14     	; 0x16d4 <vfprintf+0x8e>
    16c6:	80 33       	cpi	r24, 0x30	; 48
    16c8:	49 f4       	brne	.+18     	; 0x16dc <vfprintf+0x96>
    16ca:	11 60       	ori	r17, 0x01	; 1
    16cc:	2c c0       	rjmp	.+88     	; 0x1726 <vfprintf+0xe0>
    16ce:	12 60       	ori	r17, 0x02	; 2
    16d0:	14 60       	ori	r17, 0x04	; 4
    16d2:	29 c0       	rjmp	.+82     	; 0x1726 <vfprintf+0xe0>
    16d4:	18 60       	ori	r17, 0x08	; 8
    16d6:	27 c0       	rjmp	.+78     	; 0x1726 <vfprintf+0xe0>
    16d8:	10 61       	ori	r17, 0x10	; 16
    16da:	25 c0       	rjmp	.+74     	; 0x1726 <vfprintf+0xe0>
    16dc:	17 fd       	sbrc	r17, 7
    16de:	2e c0       	rjmp	.+92     	; 0x173c <vfprintf+0xf6>
    16e0:	28 2f       	mov	r18, r24
    16e2:	20 53       	subi	r18, 0x30	; 48
    16e4:	2a 30       	cpi	r18, 0x0A	; 10
    16e6:	98 f4       	brcc	.+38     	; 0x170e <vfprintf+0xc8>
    16e8:	16 ff       	sbrs	r17, 6
    16ea:	08 c0       	rjmp	.+16     	; 0x16fc <vfprintf+0xb6>
    16ec:	8f 2d       	mov	r24, r15
    16ee:	88 0f       	add	r24, r24
    16f0:	f8 2e       	mov	r15, r24
    16f2:	ff 0c       	add	r15, r15
    16f4:	ff 0c       	add	r15, r15
    16f6:	f8 0e       	add	r15, r24
    16f8:	f2 0e       	add	r15, r18
    16fa:	15 c0       	rjmp	.+42     	; 0x1726 <vfprintf+0xe0>
    16fc:	8e 2d       	mov	r24, r14
    16fe:	88 0f       	add	r24, r24
    1700:	e8 2e       	mov	r14, r24
    1702:	ee 0c       	add	r14, r14
    1704:	ee 0c       	add	r14, r14
    1706:	e8 0e       	add	r14, r24
    1708:	e2 0e       	add	r14, r18
    170a:	10 62       	ori	r17, 0x20	; 32
    170c:	0c c0       	rjmp	.+24     	; 0x1726 <vfprintf+0xe0>
    170e:	8e 32       	cpi	r24, 0x2E	; 46
    1710:	21 f4       	brne	.+8      	; 0x171a <vfprintf+0xd4>
    1712:	16 fd       	sbrc	r17, 6
    1714:	6c c1       	rjmp	.+728    	; 0x19ee <vfprintf+0x3a8>
    1716:	10 64       	ori	r17, 0x40	; 64
    1718:	06 c0       	rjmp	.+12     	; 0x1726 <vfprintf+0xe0>
    171a:	8c 36       	cpi	r24, 0x6C	; 108
    171c:	11 f4       	brne	.+4      	; 0x1722 <vfprintf+0xdc>
    171e:	10 68       	ori	r17, 0x80	; 128
    1720:	02 c0       	rjmp	.+4      	; 0x1726 <vfprintf+0xe0>
    1722:	88 36       	cpi	r24, 0x68	; 104
    1724:	59 f4       	brne	.+22     	; 0x173c <vfprintf+0xf6>
    1726:	ec 85       	ldd	r30, Y+12	; 0x0c
    1728:	fd 85       	ldd	r31, Y+13	; 0x0d
    172a:	93 fd       	sbrc	r25, 3
    172c:	85 91       	lpm	r24, Z+
    172e:	93 ff       	sbrs	r25, 3
    1730:	81 91       	ld	r24, Z+
    1732:	fd 87       	std	Y+13, r31	; 0x0d
    1734:	ec 87       	std	Y+12, r30	; 0x0c
    1736:	88 23       	and	r24, r24
    1738:	09 f0       	breq	.+2      	; 0x173c <vfprintf+0xf6>
    173a:	b8 cf       	rjmp	.-144    	; 0x16ac <vfprintf+0x66>
    173c:	98 2f       	mov	r25, r24
    173e:	95 54       	subi	r25, 0x45	; 69
    1740:	93 30       	cpi	r25, 0x03	; 3
    1742:	18 f0       	brcs	.+6      	; 0x174a <vfprintf+0x104>
    1744:	90 52       	subi	r25, 0x20	; 32
    1746:	93 30       	cpi	r25, 0x03	; 3
    1748:	38 f4       	brcc	.+14     	; 0x1758 <vfprintf+0x112>
    174a:	24 e0       	ldi	r18, 0x04	; 4
    174c:	30 e0       	ldi	r19, 0x00	; 0
    174e:	a2 0e       	add	r10, r18
    1750:	b3 1e       	adc	r11, r19
    1752:	3f e3       	ldi	r19, 0x3F	; 63
    1754:	39 83       	std	Y+1, r19	; 0x01
    1756:	0f c0       	rjmp	.+30     	; 0x1776 <vfprintf+0x130>
    1758:	83 36       	cpi	r24, 0x63	; 99
    175a:	31 f0       	breq	.+12     	; 0x1768 <vfprintf+0x122>
    175c:	83 37       	cpi	r24, 0x73	; 115
    175e:	81 f0       	breq	.+32     	; 0x1780 <vfprintf+0x13a>
    1760:	83 35       	cpi	r24, 0x53	; 83
    1762:	09 f0       	breq	.+2      	; 0x1766 <vfprintf+0x120>
    1764:	5a c0       	rjmp	.+180    	; 0x181a <vfprintf+0x1d4>
    1766:	22 c0       	rjmp	.+68     	; 0x17ac <vfprintf+0x166>
    1768:	f5 01       	movw	r30, r10
    176a:	80 81       	ld	r24, Z
    176c:	89 83       	std	Y+1, r24	; 0x01
    176e:	22 e0       	ldi	r18, 0x02	; 2
    1770:	30 e0       	ldi	r19, 0x00	; 0
    1772:	a2 0e       	add	r10, r18
    1774:	b3 1e       	adc	r11, r19
    1776:	21 e0       	ldi	r18, 0x01	; 1
    1778:	c2 2e       	mov	r12, r18
    177a:	d1 2c       	mov	r13, r1
    177c:	42 01       	movw	r8, r4
    177e:	14 c0       	rjmp	.+40     	; 0x17a8 <vfprintf+0x162>
    1780:	92 e0       	ldi	r25, 0x02	; 2
    1782:	29 2e       	mov	r2, r25
    1784:	31 2c       	mov	r3, r1
    1786:	2a 0c       	add	r2, r10
    1788:	3b 1c       	adc	r3, r11
    178a:	f5 01       	movw	r30, r10
    178c:	80 80       	ld	r8, Z
    178e:	91 80       	ldd	r9, Z+1	; 0x01
    1790:	16 ff       	sbrs	r17, 6
    1792:	03 c0       	rjmp	.+6      	; 0x179a <vfprintf+0x154>
    1794:	6f 2d       	mov	r22, r15
    1796:	70 e0       	ldi	r23, 0x00	; 0
    1798:	02 c0       	rjmp	.+4      	; 0x179e <vfprintf+0x158>
    179a:	6f ef       	ldi	r22, 0xFF	; 255
    179c:	7f ef       	ldi	r23, 0xFF	; 255
    179e:	c4 01       	movw	r24, r8
    17a0:	0e 94 0c 0d 	call	0x1a18	; 0x1a18 <strnlen>
    17a4:	6c 01       	movw	r12, r24
    17a6:	51 01       	movw	r10, r2
    17a8:	1f 77       	andi	r17, 0x7F	; 127
    17aa:	15 c0       	rjmp	.+42     	; 0x17d6 <vfprintf+0x190>
    17ac:	82 e0       	ldi	r24, 0x02	; 2
    17ae:	28 2e       	mov	r2, r24
    17b0:	31 2c       	mov	r3, r1
    17b2:	2a 0c       	add	r2, r10
    17b4:	3b 1c       	adc	r3, r11
    17b6:	f5 01       	movw	r30, r10
    17b8:	80 80       	ld	r8, Z
    17ba:	91 80       	ldd	r9, Z+1	; 0x01
    17bc:	16 ff       	sbrs	r17, 6
    17be:	03 c0       	rjmp	.+6      	; 0x17c6 <vfprintf+0x180>
    17c0:	6f 2d       	mov	r22, r15
    17c2:	70 e0       	ldi	r23, 0x00	; 0
    17c4:	02 c0       	rjmp	.+4      	; 0x17ca <vfprintf+0x184>
    17c6:	6f ef       	ldi	r22, 0xFF	; 255
    17c8:	7f ef       	ldi	r23, 0xFF	; 255
    17ca:	c4 01       	movw	r24, r8
    17cc:	0e 94 01 0d 	call	0x1a02	; 0x1a02 <strnlen_P>
    17d0:	6c 01       	movw	r12, r24
    17d2:	10 68       	ori	r17, 0x80	; 128
    17d4:	51 01       	movw	r10, r2
    17d6:	13 fd       	sbrc	r17, 3
    17d8:	1c c0       	rjmp	.+56     	; 0x1812 <vfprintf+0x1cc>
    17da:	06 c0       	rjmp	.+12     	; 0x17e8 <vfprintf+0x1a2>
    17dc:	80 e2       	ldi	r24, 0x20	; 32
    17de:	90 e0       	ldi	r25, 0x00	; 0
    17e0:	b3 01       	movw	r22, r6
    17e2:	0e 94 17 0d 	call	0x1a2e	; 0x1a2e <fputc>
    17e6:	ea 94       	dec	r14
    17e8:	8e 2d       	mov	r24, r14
    17ea:	90 e0       	ldi	r25, 0x00	; 0
    17ec:	c8 16       	cp	r12, r24
    17ee:	d9 06       	cpc	r13, r25
    17f0:	a8 f3       	brcs	.-22     	; 0x17dc <vfprintf+0x196>
    17f2:	0f c0       	rjmp	.+30     	; 0x1812 <vfprintf+0x1cc>
    17f4:	f4 01       	movw	r30, r8
    17f6:	17 fd       	sbrc	r17, 7
    17f8:	85 91       	lpm	r24, Z+
    17fa:	17 ff       	sbrs	r17, 7
    17fc:	81 91       	ld	r24, Z+
    17fe:	4f 01       	movw	r8, r30
    1800:	90 e0       	ldi	r25, 0x00	; 0
    1802:	b3 01       	movw	r22, r6
    1804:	0e 94 17 0d 	call	0x1a2e	; 0x1a2e <fputc>
    1808:	e1 10       	cpse	r14, r1
    180a:	ea 94       	dec	r14
    180c:	08 94       	sec
    180e:	c1 08       	sbc	r12, r1
    1810:	d1 08       	sbc	r13, r1
    1812:	c1 14       	cp	r12, r1
    1814:	d1 04       	cpc	r13, r1
    1816:	71 f7       	brne	.-36     	; 0x17f4 <vfprintf+0x1ae>
    1818:	e7 c0       	rjmp	.+462    	; 0x19e8 <vfprintf+0x3a2>
    181a:	84 36       	cpi	r24, 0x64	; 100
    181c:	11 f0       	breq	.+4      	; 0x1822 <vfprintf+0x1dc>
    181e:	89 36       	cpi	r24, 0x69	; 105
    1820:	51 f5       	brne	.+84     	; 0x1876 <vfprintf+0x230>
    1822:	f5 01       	movw	r30, r10
    1824:	17 ff       	sbrs	r17, 7
    1826:	07 c0       	rjmp	.+14     	; 0x1836 <vfprintf+0x1f0>
    1828:	80 81       	ld	r24, Z
    182a:	91 81       	ldd	r25, Z+1	; 0x01
    182c:	a2 81       	ldd	r26, Z+2	; 0x02
    182e:	b3 81       	ldd	r27, Z+3	; 0x03
    1830:	24 e0       	ldi	r18, 0x04	; 4
    1832:	30 e0       	ldi	r19, 0x00	; 0
    1834:	08 c0       	rjmp	.+16     	; 0x1846 <vfprintf+0x200>
    1836:	80 81       	ld	r24, Z
    1838:	91 81       	ldd	r25, Z+1	; 0x01
    183a:	aa 27       	eor	r26, r26
    183c:	97 fd       	sbrc	r25, 7
    183e:	a0 95       	com	r26
    1840:	ba 2f       	mov	r27, r26
    1842:	22 e0       	ldi	r18, 0x02	; 2
    1844:	30 e0       	ldi	r19, 0x00	; 0
    1846:	a2 0e       	add	r10, r18
    1848:	b3 1e       	adc	r11, r19
    184a:	01 2f       	mov	r16, r17
    184c:	0f 76       	andi	r16, 0x6F	; 111
    184e:	b7 ff       	sbrs	r27, 7
    1850:	08 c0       	rjmp	.+16     	; 0x1862 <vfprintf+0x21c>
    1852:	b0 95       	com	r27
    1854:	a0 95       	com	r26
    1856:	90 95       	com	r25
    1858:	81 95       	neg	r24
    185a:	9f 4f       	sbci	r25, 0xFF	; 255
    185c:	af 4f       	sbci	r26, 0xFF	; 255
    185e:	bf 4f       	sbci	r27, 0xFF	; 255
    1860:	00 68       	ori	r16, 0x80	; 128
    1862:	bc 01       	movw	r22, r24
    1864:	cd 01       	movw	r24, r26
    1866:	a2 01       	movw	r20, r4
    1868:	2a e0       	ldi	r18, 0x0A	; 10
    186a:	30 e0       	ldi	r19, 0x00	; 0
    186c:	0e 94 43 0d 	call	0x1a86	; 0x1a86 <__ultoa_invert>
    1870:	d8 2e       	mov	r13, r24
    1872:	d4 18       	sub	r13, r4
    1874:	3f c0       	rjmp	.+126    	; 0x18f4 <vfprintf+0x2ae>
    1876:	85 37       	cpi	r24, 0x75	; 117
    1878:	21 f4       	brne	.+8      	; 0x1882 <vfprintf+0x23c>
    187a:	1f 7e       	andi	r17, 0xEF	; 239
    187c:	2a e0       	ldi	r18, 0x0A	; 10
    187e:	30 e0       	ldi	r19, 0x00	; 0
    1880:	20 c0       	rjmp	.+64     	; 0x18c2 <vfprintf+0x27c>
    1882:	19 7f       	andi	r17, 0xF9	; 249
    1884:	8f 36       	cpi	r24, 0x6F	; 111
    1886:	a9 f0       	breq	.+42     	; 0x18b2 <vfprintf+0x26c>
    1888:	80 37       	cpi	r24, 0x70	; 112
    188a:	20 f4       	brcc	.+8      	; 0x1894 <vfprintf+0x24e>
    188c:	88 35       	cpi	r24, 0x58	; 88
    188e:	09 f0       	breq	.+2      	; 0x1892 <vfprintf+0x24c>
    1890:	ae c0       	rjmp	.+348    	; 0x19ee <vfprintf+0x3a8>
    1892:	0b c0       	rjmp	.+22     	; 0x18aa <vfprintf+0x264>
    1894:	80 37       	cpi	r24, 0x70	; 112
    1896:	21 f0       	breq	.+8      	; 0x18a0 <vfprintf+0x25a>
    1898:	88 37       	cpi	r24, 0x78	; 120
    189a:	09 f0       	breq	.+2      	; 0x189e <vfprintf+0x258>
    189c:	a8 c0       	rjmp	.+336    	; 0x19ee <vfprintf+0x3a8>
    189e:	01 c0       	rjmp	.+2      	; 0x18a2 <vfprintf+0x25c>
    18a0:	10 61       	ori	r17, 0x10	; 16
    18a2:	14 ff       	sbrs	r17, 4
    18a4:	09 c0       	rjmp	.+18     	; 0x18b8 <vfprintf+0x272>
    18a6:	14 60       	ori	r17, 0x04	; 4
    18a8:	07 c0       	rjmp	.+14     	; 0x18b8 <vfprintf+0x272>
    18aa:	14 ff       	sbrs	r17, 4
    18ac:	08 c0       	rjmp	.+16     	; 0x18be <vfprintf+0x278>
    18ae:	16 60       	ori	r17, 0x06	; 6
    18b0:	06 c0       	rjmp	.+12     	; 0x18be <vfprintf+0x278>
    18b2:	28 e0       	ldi	r18, 0x08	; 8
    18b4:	30 e0       	ldi	r19, 0x00	; 0
    18b6:	05 c0       	rjmp	.+10     	; 0x18c2 <vfprintf+0x27c>
    18b8:	20 e1       	ldi	r18, 0x10	; 16
    18ba:	30 e0       	ldi	r19, 0x00	; 0
    18bc:	02 c0       	rjmp	.+4      	; 0x18c2 <vfprintf+0x27c>
    18be:	20 e1       	ldi	r18, 0x10	; 16
    18c0:	32 e0       	ldi	r19, 0x02	; 2
    18c2:	f5 01       	movw	r30, r10
    18c4:	17 ff       	sbrs	r17, 7
    18c6:	07 c0       	rjmp	.+14     	; 0x18d6 <vfprintf+0x290>
    18c8:	60 81       	ld	r22, Z
    18ca:	71 81       	ldd	r23, Z+1	; 0x01
    18cc:	82 81       	ldd	r24, Z+2	; 0x02
    18ce:	93 81       	ldd	r25, Z+3	; 0x03
    18d0:	44 e0       	ldi	r20, 0x04	; 4
    18d2:	50 e0       	ldi	r21, 0x00	; 0
    18d4:	06 c0       	rjmp	.+12     	; 0x18e2 <vfprintf+0x29c>
    18d6:	60 81       	ld	r22, Z
    18d8:	71 81       	ldd	r23, Z+1	; 0x01
    18da:	80 e0       	ldi	r24, 0x00	; 0
    18dc:	90 e0       	ldi	r25, 0x00	; 0
    18de:	42 e0       	ldi	r20, 0x02	; 2
    18e0:	50 e0       	ldi	r21, 0x00	; 0
    18e2:	a4 0e       	add	r10, r20
    18e4:	b5 1e       	adc	r11, r21
    18e6:	a2 01       	movw	r20, r4
    18e8:	0e 94 43 0d 	call	0x1a86	; 0x1a86 <__ultoa_invert>
    18ec:	d8 2e       	mov	r13, r24
    18ee:	d4 18       	sub	r13, r4
    18f0:	01 2f       	mov	r16, r17
    18f2:	0f 77       	andi	r16, 0x7F	; 127
    18f4:	06 ff       	sbrs	r16, 6
    18f6:	09 c0       	rjmp	.+18     	; 0x190a <vfprintf+0x2c4>
    18f8:	0e 7f       	andi	r16, 0xFE	; 254
    18fa:	df 14       	cp	r13, r15
    18fc:	30 f4       	brcc	.+12     	; 0x190a <vfprintf+0x2c4>
    18fe:	04 ff       	sbrs	r16, 4
    1900:	06 c0       	rjmp	.+12     	; 0x190e <vfprintf+0x2c8>
    1902:	02 fd       	sbrc	r16, 2
    1904:	04 c0       	rjmp	.+8      	; 0x190e <vfprintf+0x2c8>
    1906:	0f 7e       	andi	r16, 0xEF	; 239
    1908:	02 c0       	rjmp	.+4      	; 0x190e <vfprintf+0x2c8>
    190a:	1d 2d       	mov	r17, r13
    190c:	01 c0       	rjmp	.+2      	; 0x1910 <vfprintf+0x2ca>
    190e:	1f 2d       	mov	r17, r15
    1910:	80 2f       	mov	r24, r16
    1912:	90 e0       	ldi	r25, 0x00	; 0
    1914:	04 ff       	sbrs	r16, 4
    1916:	0c c0       	rjmp	.+24     	; 0x1930 <vfprintf+0x2ea>
    1918:	fe 01       	movw	r30, r28
    191a:	ed 0d       	add	r30, r13
    191c:	f1 1d       	adc	r31, r1
    191e:	20 81       	ld	r18, Z
    1920:	20 33       	cpi	r18, 0x30	; 48
    1922:	11 f4       	brne	.+4      	; 0x1928 <vfprintf+0x2e2>
    1924:	09 7e       	andi	r16, 0xE9	; 233
    1926:	09 c0       	rjmp	.+18     	; 0x193a <vfprintf+0x2f4>
    1928:	02 ff       	sbrs	r16, 2
    192a:	06 c0       	rjmp	.+12     	; 0x1938 <vfprintf+0x2f2>
    192c:	1e 5f       	subi	r17, 0xFE	; 254
    192e:	05 c0       	rjmp	.+10     	; 0x193a <vfprintf+0x2f4>
    1930:	86 78       	andi	r24, 0x86	; 134
    1932:	90 70       	andi	r25, 0x00	; 0
    1934:	00 97       	sbiw	r24, 0x00	; 0
    1936:	09 f0       	breq	.+2      	; 0x193a <vfprintf+0x2f4>
    1938:	1f 5f       	subi	r17, 0xFF	; 255
    193a:	80 2e       	mov	r8, r16
    193c:	99 24       	eor	r9, r9
    193e:	03 fd       	sbrc	r16, 3
    1940:	12 c0       	rjmp	.+36     	; 0x1966 <vfprintf+0x320>
    1942:	00 ff       	sbrs	r16, 0
    1944:	0d c0       	rjmp	.+26     	; 0x1960 <vfprintf+0x31a>
    1946:	fd 2c       	mov	r15, r13
    1948:	1e 15       	cp	r17, r14
    194a:	50 f4       	brcc	.+20     	; 0x1960 <vfprintf+0x31a>
    194c:	fe 0c       	add	r15, r14
    194e:	f1 1a       	sub	r15, r17
    1950:	1e 2d       	mov	r17, r14
    1952:	06 c0       	rjmp	.+12     	; 0x1960 <vfprintf+0x31a>
    1954:	80 e2       	ldi	r24, 0x20	; 32
    1956:	90 e0       	ldi	r25, 0x00	; 0
    1958:	b3 01       	movw	r22, r6
    195a:	0e 94 17 0d 	call	0x1a2e	; 0x1a2e <fputc>
    195e:	1f 5f       	subi	r17, 0xFF	; 255
    1960:	1e 15       	cp	r17, r14
    1962:	c0 f3       	brcs	.-16     	; 0x1954 <vfprintf+0x30e>
    1964:	04 c0       	rjmp	.+8      	; 0x196e <vfprintf+0x328>
    1966:	1e 15       	cp	r17, r14
    1968:	10 f4       	brcc	.+4      	; 0x196e <vfprintf+0x328>
    196a:	e1 1a       	sub	r14, r17
    196c:	01 c0       	rjmp	.+2      	; 0x1970 <vfprintf+0x32a>
    196e:	ee 24       	eor	r14, r14
    1970:	84 fe       	sbrs	r8, 4
    1972:	0f c0       	rjmp	.+30     	; 0x1992 <vfprintf+0x34c>
    1974:	80 e3       	ldi	r24, 0x30	; 48
    1976:	90 e0       	ldi	r25, 0x00	; 0
    1978:	b3 01       	movw	r22, r6
    197a:	0e 94 17 0d 	call	0x1a2e	; 0x1a2e <fputc>
    197e:	82 fe       	sbrs	r8, 2
    1980:	1f c0       	rjmp	.+62     	; 0x19c0 <vfprintf+0x37a>
    1982:	81 fe       	sbrs	r8, 1
    1984:	03 c0       	rjmp	.+6      	; 0x198c <vfprintf+0x346>
    1986:	88 e5       	ldi	r24, 0x58	; 88
    1988:	90 e0       	ldi	r25, 0x00	; 0
    198a:	10 c0       	rjmp	.+32     	; 0x19ac <vfprintf+0x366>
    198c:	88 e7       	ldi	r24, 0x78	; 120
    198e:	90 e0       	ldi	r25, 0x00	; 0
    1990:	0d c0       	rjmp	.+26     	; 0x19ac <vfprintf+0x366>
    1992:	c4 01       	movw	r24, r8
    1994:	86 78       	andi	r24, 0x86	; 134
    1996:	90 70       	andi	r25, 0x00	; 0
    1998:	00 97       	sbiw	r24, 0x00	; 0
    199a:	91 f0       	breq	.+36     	; 0x19c0 <vfprintf+0x37a>
    199c:	81 fc       	sbrc	r8, 1
    199e:	02 c0       	rjmp	.+4      	; 0x19a4 <vfprintf+0x35e>
    19a0:	80 e2       	ldi	r24, 0x20	; 32
    19a2:	01 c0       	rjmp	.+2      	; 0x19a6 <vfprintf+0x360>
    19a4:	8b e2       	ldi	r24, 0x2B	; 43
    19a6:	07 fd       	sbrc	r16, 7
    19a8:	8d e2       	ldi	r24, 0x2D	; 45
    19aa:	90 e0       	ldi	r25, 0x00	; 0
    19ac:	b3 01       	movw	r22, r6
    19ae:	0e 94 17 0d 	call	0x1a2e	; 0x1a2e <fputc>
    19b2:	06 c0       	rjmp	.+12     	; 0x19c0 <vfprintf+0x37a>
    19b4:	80 e3       	ldi	r24, 0x30	; 48
    19b6:	90 e0       	ldi	r25, 0x00	; 0
    19b8:	b3 01       	movw	r22, r6
    19ba:	0e 94 17 0d 	call	0x1a2e	; 0x1a2e <fputc>
    19be:	fa 94       	dec	r15
    19c0:	df 14       	cp	r13, r15
    19c2:	c0 f3       	brcs	.-16     	; 0x19b4 <vfprintf+0x36e>
    19c4:	da 94       	dec	r13
    19c6:	f2 01       	movw	r30, r4
    19c8:	ed 0d       	add	r30, r13
    19ca:	f1 1d       	adc	r31, r1
    19cc:	80 81       	ld	r24, Z
    19ce:	90 e0       	ldi	r25, 0x00	; 0
    19d0:	b3 01       	movw	r22, r6
    19d2:	0e 94 17 0d 	call	0x1a2e	; 0x1a2e <fputc>
    19d6:	dd 20       	and	r13, r13
    19d8:	a9 f7       	brne	.-22     	; 0x19c4 <vfprintf+0x37e>
    19da:	06 c0       	rjmp	.+12     	; 0x19e8 <vfprintf+0x3a2>
    19dc:	80 e2       	ldi	r24, 0x20	; 32
    19de:	90 e0       	ldi	r25, 0x00	; 0
    19e0:	b3 01       	movw	r22, r6
    19e2:	0e 94 17 0d 	call	0x1a2e	; 0x1a2e <fputc>
    19e6:	ea 94       	dec	r14
    19e8:	ee 20       	and	r14, r14
    19ea:	c1 f7       	brne	.-16     	; 0x19dc <vfprintf+0x396>
    19ec:	40 ce       	rjmp	.-896    	; 0x166e <vfprintf+0x28>
    19ee:	f3 01       	movw	r30, r6
    19f0:	86 81       	ldd	r24, Z+6	; 0x06
    19f2:	97 81       	ldd	r25, Z+7	; 0x07
    19f4:	02 c0       	rjmp	.+4      	; 0x19fa <vfprintf+0x3b4>
    19f6:	8f ef       	ldi	r24, 0xFF	; 255
    19f8:	9f ef       	ldi	r25, 0xFF	; 255
    19fa:	2d 96       	adiw	r28, 0x0d	; 13
    19fc:	e2 e1       	ldi	r30, 0x12	; 18
    19fe:	0c 94 bd 0d 	jmp	0x1b7a	; 0x1b7a <__epilogue_restores__>

00001a02 <strnlen_P>:
    1a02:	fc 01       	movw	r30, r24
    1a04:	05 90       	lpm	r0, Z+
    1a06:	61 50       	subi	r22, 0x01	; 1
    1a08:	70 40       	sbci	r23, 0x00	; 0
    1a0a:	01 10       	cpse	r0, r1
    1a0c:	d8 f7       	brcc	.-10     	; 0x1a04 <strnlen_P+0x2>
    1a0e:	80 95       	com	r24
    1a10:	90 95       	com	r25
    1a12:	8e 0f       	add	r24, r30
    1a14:	9f 1f       	adc	r25, r31
    1a16:	08 95       	ret

00001a18 <strnlen>:
    1a18:	fc 01       	movw	r30, r24
    1a1a:	61 50       	subi	r22, 0x01	; 1
    1a1c:	70 40       	sbci	r23, 0x00	; 0
    1a1e:	01 90       	ld	r0, Z+
    1a20:	01 10       	cpse	r0, r1
    1a22:	d8 f7       	brcc	.-10     	; 0x1a1a <strnlen+0x2>
    1a24:	80 95       	com	r24
    1a26:	90 95       	com	r25
    1a28:	8e 0f       	add	r24, r30
    1a2a:	9f 1f       	adc	r25, r31
    1a2c:	08 95       	ret

00001a2e <fputc>:
    1a2e:	0f 93       	push	r16
    1a30:	1f 93       	push	r17
    1a32:	cf 93       	push	r28
    1a34:	df 93       	push	r29
    1a36:	8c 01       	movw	r16, r24
    1a38:	eb 01       	movw	r28, r22
    1a3a:	8b 81       	ldd	r24, Y+3	; 0x03
    1a3c:	81 ff       	sbrs	r24, 1
    1a3e:	1b c0       	rjmp	.+54     	; 0x1a76 <fputc+0x48>
    1a40:	82 ff       	sbrs	r24, 2
    1a42:	0d c0       	rjmp	.+26     	; 0x1a5e <fputc+0x30>
    1a44:	2e 81       	ldd	r18, Y+6	; 0x06
    1a46:	3f 81       	ldd	r19, Y+7	; 0x07
    1a48:	8c 81       	ldd	r24, Y+4	; 0x04
    1a4a:	9d 81       	ldd	r25, Y+5	; 0x05
    1a4c:	28 17       	cp	r18, r24
    1a4e:	39 07       	cpc	r19, r25
    1a50:	64 f4       	brge	.+24     	; 0x1a6a <fputc+0x3c>
    1a52:	e8 81       	ld	r30, Y
    1a54:	f9 81       	ldd	r31, Y+1	; 0x01
    1a56:	01 93       	st	Z+, r16
    1a58:	f9 83       	std	Y+1, r31	; 0x01
    1a5a:	e8 83       	st	Y, r30
    1a5c:	06 c0       	rjmp	.+12     	; 0x1a6a <fputc+0x3c>
    1a5e:	e8 85       	ldd	r30, Y+8	; 0x08
    1a60:	f9 85       	ldd	r31, Y+9	; 0x09
    1a62:	80 2f       	mov	r24, r16
    1a64:	09 95       	icall
    1a66:	00 97       	sbiw	r24, 0x00	; 0
    1a68:	31 f4       	brne	.+12     	; 0x1a76 <fputc+0x48>
    1a6a:	8e 81       	ldd	r24, Y+6	; 0x06
    1a6c:	9f 81       	ldd	r25, Y+7	; 0x07
    1a6e:	01 96       	adiw	r24, 0x01	; 1
    1a70:	9f 83       	std	Y+7, r25	; 0x07
    1a72:	8e 83       	std	Y+6, r24	; 0x06
    1a74:	02 c0       	rjmp	.+4      	; 0x1a7a <fputc+0x4c>
    1a76:	0f ef       	ldi	r16, 0xFF	; 255
    1a78:	1f ef       	ldi	r17, 0xFF	; 255
    1a7a:	c8 01       	movw	r24, r16
    1a7c:	df 91       	pop	r29
    1a7e:	cf 91       	pop	r28
    1a80:	1f 91       	pop	r17
    1a82:	0f 91       	pop	r16
    1a84:	08 95       	ret

00001a86 <__ultoa_invert>:
    1a86:	fa 01       	movw	r30, r20
    1a88:	aa 27       	eor	r26, r26
    1a8a:	28 30       	cpi	r18, 0x08	; 8
    1a8c:	51 f1       	breq	.+84     	; 0x1ae2 <__ultoa_invert+0x5c>
    1a8e:	20 31       	cpi	r18, 0x10	; 16
    1a90:	81 f1       	breq	.+96     	; 0x1af2 <__ultoa_invert+0x6c>
    1a92:	e8 94       	clt
    1a94:	6f 93       	push	r22
    1a96:	6e 7f       	andi	r22, 0xFE	; 254
    1a98:	6e 5f       	subi	r22, 0xFE	; 254
    1a9a:	7f 4f       	sbci	r23, 0xFF	; 255
    1a9c:	8f 4f       	sbci	r24, 0xFF	; 255
    1a9e:	9f 4f       	sbci	r25, 0xFF	; 255
    1aa0:	af 4f       	sbci	r26, 0xFF	; 255
    1aa2:	b1 e0       	ldi	r27, 0x01	; 1
    1aa4:	3e d0       	rcall	.+124    	; 0x1b22 <__ultoa_invert+0x9c>
    1aa6:	b4 e0       	ldi	r27, 0x04	; 4
    1aa8:	3c d0       	rcall	.+120    	; 0x1b22 <__ultoa_invert+0x9c>
    1aaa:	67 0f       	add	r22, r23
    1aac:	78 1f       	adc	r23, r24
    1aae:	89 1f       	adc	r24, r25
    1ab0:	9a 1f       	adc	r25, r26
    1ab2:	a1 1d       	adc	r26, r1
    1ab4:	68 0f       	add	r22, r24
    1ab6:	79 1f       	adc	r23, r25
    1ab8:	8a 1f       	adc	r24, r26
    1aba:	91 1d       	adc	r25, r1
    1abc:	a1 1d       	adc	r26, r1
    1abe:	6a 0f       	add	r22, r26
    1ac0:	71 1d       	adc	r23, r1
    1ac2:	81 1d       	adc	r24, r1
    1ac4:	91 1d       	adc	r25, r1
    1ac6:	a1 1d       	adc	r26, r1
    1ac8:	20 d0       	rcall	.+64     	; 0x1b0a <__ultoa_invert+0x84>
    1aca:	09 f4       	brne	.+2      	; 0x1ace <__ultoa_invert+0x48>
    1acc:	68 94       	set
    1ace:	3f 91       	pop	r19
    1ad0:	2a e0       	ldi	r18, 0x0A	; 10
    1ad2:	26 9f       	mul	r18, r22
    1ad4:	11 24       	eor	r1, r1
    1ad6:	30 19       	sub	r19, r0
    1ad8:	30 5d       	subi	r19, 0xD0	; 208
    1ada:	31 93       	st	Z+, r19
    1adc:	de f6       	brtc	.-74     	; 0x1a94 <__ultoa_invert+0xe>
    1ade:	cf 01       	movw	r24, r30
    1ae0:	08 95       	ret
    1ae2:	46 2f       	mov	r20, r22
    1ae4:	47 70       	andi	r20, 0x07	; 7
    1ae6:	40 5d       	subi	r20, 0xD0	; 208
    1ae8:	41 93       	st	Z+, r20
    1aea:	b3 e0       	ldi	r27, 0x03	; 3
    1aec:	0f d0       	rcall	.+30     	; 0x1b0c <__ultoa_invert+0x86>
    1aee:	c9 f7       	brne	.-14     	; 0x1ae2 <__ultoa_invert+0x5c>
    1af0:	f6 cf       	rjmp	.-20     	; 0x1ade <__ultoa_invert+0x58>
    1af2:	46 2f       	mov	r20, r22
    1af4:	4f 70       	andi	r20, 0x0F	; 15
    1af6:	40 5d       	subi	r20, 0xD0	; 208
    1af8:	4a 33       	cpi	r20, 0x3A	; 58
    1afa:	18 f0       	brcs	.+6      	; 0x1b02 <__ultoa_invert+0x7c>
    1afc:	49 5d       	subi	r20, 0xD9	; 217
    1afe:	31 fd       	sbrc	r19, 1
    1b00:	40 52       	subi	r20, 0x20	; 32
    1b02:	41 93       	st	Z+, r20
    1b04:	02 d0       	rcall	.+4      	; 0x1b0a <__ultoa_invert+0x84>
    1b06:	a9 f7       	brne	.-22     	; 0x1af2 <__ultoa_invert+0x6c>
    1b08:	ea cf       	rjmp	.-44     	; 0x1ade <__ultoa_invert+0x58>
    1b0a:	b4 e0       	ldi	r27, 0x04	; 4
    1b0c:	a6 95       	lsr	r26
    1b0e:	97 95       	ror	r25
    1b10:	87 95       	ror	r24
    1b12:	77 95       	ror	r23
    1b14:	67 95       	ror	r22
    1b16:	ba 95       	dec	r27
    1b18:	c9 f7       	brne	.-14     	; 0x1b0c <__ultoa_invert+0x86>
    1b1a:	00 97       	sbiw	r24, 0x00	; 0
    1b1c:	61 05       	cpc	r22, r1
    1b1e:	71 05       	cpc	r23, r1
    1b20:	08 95       	ret
    1b22:	9b 01       	movw	r18, r22
    1b24:	ac 01       	movw	r20, r24
    1b26:	0a 2e       	mov	r0, r26
    1b28:	06 94       	lsr	r0
    1b2a:	57 95       	ror	r21
    1b2c:	47 95       	ror	r20
    1b2e:	37 95       	ror	r19
    1b30:	27 95       	ror	r18
    1b32:	ba 95       	dec	r27
    1b34:	c9 f7       	brne	.-14     	; 0x1b28 <__ultoa_invert+0xa2>
    1b36:	62 0f       	add	r22, r18
    1b38:	73 1f       	adc	r23, r19
    1b3a:	84 1f       	adc	r24, r20
    1b3c:	95 1f       	adc	r25, r21
    1b3e:	a0 1d       	adc	r26, r0
    1b40:	08 95       	ret

00001b42 <__prologue_saves__>:
    1b42:	2f 92       	push	r2
    1b44:	3f 92       	push	r3
    1b46:	4f 92       	push	r4
    1b48:	5f 92       	push	r5
    1b4a:	6f 92       	push	r6
    1b4c:	7f 92       	push	r7
    1b4e:	8f 92       	push	r8
    1b50:	9f 92       	push	r9
    1b52:	af 92       	push	r10
    1b54:	bf 92       	push	r11
    1b56:	cf 92       	push	r12
    1b58:	df 92       	push	r13
    1b5a:	ef 92       	push	r14
    1b5c:	ff 92       	push	r15
    1b5e:	0f 93       	push	r16
    1b60:	1f 93       	push	r17
    1b62:	cf 93       	push	r28
    1b64:	df 93       	push	r29
    1b66:	cd b7       	in	r28, 0x3d	; 61
    1b68:	de b7       	in	r29, 0x3e	; 62
    1b6a:	ca 1b       	sub	r28, r26
    1b6c:	db 0b       	sbc	r29, r27
    1b6e:	0f b6       	in	r0, 0x3f	; 63
    1b70:	f8 94       	cli
    1b72:	de bf       	out	0x3e, r29	; 62
    1b74:	0f be       	out	0x3f, r0	; 63
    1b76:	cd bf       	out	0x3d, r28	; 61
    1b78:	09 94       	ijmp

00001b7a <__epilogue_restores__>:
    1b7a:	2a 88       	ldd	r2, Y+18	; 0x12
    1b7c:	39 88       	ldd	r3, Y+17	; 0x11
    1b7e:	48 88       	ldd	r4, Y+16	; 0x10
    1b80:	5f 84       	ldd	r5, Y+15	; 0x0f
    1b82:	6e 84       	ldd	r6, Y+14	; 0x0e
    1b84:	7d 84       	ldd	r7, Y+13	; 0x0d
    1b86:	8c 84       	ldd	r8, Y+12	; 0x0c
    1b88:	9b 84       	ldd	r9, Y+11	; 0x0b
    1b8a:	aa 84       	ldd	r10, Y+10	; 0x0a
    1b8c:	b9 84       	ldd	r11, Y+9	; 0x09
    1b8e:	c8 84       	ldd	r12, Y+8	; 0x08
    1b90:	df 80       	ldd	r13, Y+7	; 0x07
    1b92:	ee 80       	ldd	r14, Y+6	; 0x06
    1b94:	fd 80       	ldd	r15, Y+5	; 0x05
    1b96:	0c 81       	ldd	r16, Y+4	; 0x04
    1b98:	1b 81       	ldd	r17, Y+3	; 0x03
    1b9a:	aa 81       	ldd	r26, Y+2	; 0x02
    1b9c:	b9 81       	ldd	r27, Y+1	; 0x01
    1b9e:	ce 0f       	add	r28, r30
    1ba0:	d1 1d       	adc	r29, r1
    1ba2:	0f b6       	in	r0, 0x3f	; 63
    1ba4:	f8 94       	cli
    1ba6:	de bf       	out	0x3e, r29	; 62
    1ba8:	0f be       	out	0x3f, r0	; 63
    1baa:	cd bf       	out	0x3d, r28	; 61
    1bac:	ed 01       	movw	r28, r26
    1bae:	08 95       	ret

00001bb0 <_exit>:
    1bb0:	f8 94       	cli

00001bb2 <__stop_program>:
    1bb2:	ff cf       	rjmp	.-2      	; 0x1bb2 <__stop_program>
